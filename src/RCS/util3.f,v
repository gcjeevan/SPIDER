head	1.93;
access;
symbols
	pre_mrcs:1.92
	healthdept_2018:1.92
	pre_getangas:1.76
	GPL2010:1.73
	pre_GPL2010:1.72
	pre_var_equation:1.72
	pre_fftwrings:1.66
	pre_opfiles:1.64
	src:1.64
	best-code:1.62
	x-named-regs:1.62
	x:1.62
	v13-00:1.62
	pre_GPL:1.59
	prec_CA:1.54
	noindx:1.50
	Bproc:1.37
	oct21:1.26
	last77:1.23;
locks; strict;
comment	@c @;


1.93
date	2020.02.24.17.00.27;	author leith;	state Exp;
branches;
next	1.92;

1.92
date	2018.10.03.14.51.08;	author leith;	state Exp;
branches;
next	1.91;

1.91
date	2014.01.12.19.08.13;	author leith;	state Exp;
branches;
next	1.90;

1.90
date	2013.12.03.14.31.21;	author leith;	state Exp;
branches;
next	1.89;

1.89
date	2013.12.03.14.30.47;	author leith;	state Exp;
branches;
next	1.88;

1.88
date	2013.01.08.17.19.56;	author leith;	state Exp;
branches;
next	1.87;

1.87
date	2013.01.08.17.12.11;	author leith;	state Exp;
branches;
next	1.86;

1.86
date	2013.01.07.17.40.55;	author leith;	state Exp;
branches;
next	1.85;

1.85
date	2012.05.21.13.37.44;	author leith;	state Exp;
branches;
next	1.84;

1.84
date	2012.05.11.18.09.59;	author leith;	state Exp;
branches;
next	1.83;

1.83
date	2012.03.06.15.16.40;	author leith;	state Exp;
branches;
next	1.82;

1.82
date	2011.10.05.13.23.37;	author leith;	state Exp;
branches;
next	1.81;

1.81
date	2011.10.05.13.04.55;	author leith;	state Exp;
branches;
next	1.80;

1.80
date	2011.09.21.18.53.18;	author leith;	state Exp;
branches;
next	1.79;

1.79
date	2011.06.02.16.30.34;	author leith;	state Exp;
branches;
next	1.78;

1.78
date	2011.06.02.16.27.37;	author leith;	state Exp;
branches;
next	1.77;

1.77
date	2011.05.24.12.57.59;	author leith;	state Exp;
branches;
next	1.76;

1.76
date	2011.01.12.18.42.53;	author leith;	state Exp;
branches;
next	1.75;

1.75
date	2011.01.12.18.36.34;	author leith;	state Exp;
branches;
next	1.74;

1.74
date	2011.01.03.16.41.24;	author leith;	state Exp;
branches;
next	1.73;

1.73
date	2010.06.24.13.27.12;	author leith;	state Exp;
branches;
next	1.72;

1.72
date	2009.05.22.10.56.27;	author leith;	state Exp;
branches;
next	1.71;

1.71
date	2008.08.08.18.00.34;	author leith;	state Exp;
branches;
next	1.70;

1.70
date	2008.06.10.13.42.19;	author leith;	state Exp;
branches;
next	1.69;

1.69
date	2008.06.06.18.00.01;	author leith;	state Exp;
branches;
next	1.68;

1.68
date	2008.06.06.17.47.15;	author leith;	state Exp;
branches;
next	1.67;

1.67
date	2008.05.19.12.03.08;	author leith;	state Exp;
branches;
next	1.66;

1.66
date	2008.03.19.12.13.48;	author leith;	state Exp;
branches;
next	1.65;

1.65
date	2007.01.25.16.34.51;	author leith;	state Exp;
branches;
next	1.64;

1.64
date	2006.12.19.14.02.22;	author leith;	state Exp;
branches;
next	1.63;

1.63
date	2006.12.18.18.55.23;	author leith;	state Exp;
branches;
next	1.62;

1.62
date	2005.10.18.20.43.31;	author leith;	state Exp;
branches;
next	1.61;

1.61
date	2005.10.17.20.50.33;	author leith;	state Exp;
branches;
next	1.60;

1.60
date	2005.10.17.18.40.58;	author leith;	state Exp;
branches;
next	1.59;

1.59
date	2005.08.17.13.58.35;	author leith;	state Exp;
branches;
next	1.58;

1.58
date	2005.08.01.15.12.20;	author leith;	state Exp;
branches;
next	1.57;

1.57
date	2004.11.19.22.29.15;	author cyang;	state Exp;
branches;
next	1.56;

1.56
date	2003.11.24.17.24.26;	author leith;	state Exp;
branches;
next	1.55;

1.55
date	2003.10.30.20.45.28;	author leith;	state Exp;
branches;
next	1.54;

1.54
date	2003.09.05.14.22.12;	author leith;	state Exp;
branches;
next	1.53;

1.53
date	2003.04.30.20.00.09;	author leith;	state Exp;
branches;
next	1.52;

1.52
date	2003.03.04.16.16.56;	author leith;	state Exp;
branches;
next	1.51;

1.51
date	2003.02.18.16.43.36;	author leith;	state Exp;
branches;
next	1.50;

1.50
date	2002.12.27.19.45.44;	author pawel;	state Exp;
branches;
next	1.49;

1.49
date	2002.12.27.19.28.05;	author pawel;	state Exp;
branches;
next	1.48;

1.48
date	2002.05.07.18.59.13;	author leith;	state Exp;
branches;
next	1.47;

1.47
date	2002.05.07.18.14.18;	author leith;	state Exp;
branches;
next	1.46;

1.46
date	2002.05.02.19.41.14;	author leith;	state Exp;
branches;
next	1.45;

1.45
date	2002.04.10.18.56.12;	author leith;	state Exp;
branches;
next	1.44;

1.44
date	2002.04.09.16.08.32;	author leith;	state Exp;
branches;
next	1.43;

1.43
date	2002.03.11.14.08.43;	author leith;	state Exp;
branches;
next	1.42;

1.42
date	2001.05.17.15.00.34;	author leith;	state Exp;
branches;
next	1.41;

1.41
date	2001.04.24.16.21.30;	author leith;	state Exp;
branches;
next	1.40;

1.40
date	2001.02.20.14.48.38;	author leith;	state Exp;
branches;
next	1.39;

1.39
date	2001.02.16.17.29.44;	author leith;	state Exp;
branches;
next	1.38;

1.38
date	2001.02.16.17.21.10;	author leith;	state Exp;
branches;
next	1.37;

1.37
date	2000.08.02.15.58.00;	author leith;	state Exp;
branches;
next	1.36;

1.36
date	2000.04.25.18.44.03;	author bimal;	state Exp;
branches;
next	1.35;

1.35
date	2000.04.17.19.33.23;	author bimal;	state Exp;
branches;
next	1.34;

1.34
date	2000.04.17.18.57.10;	author bimal;	state Exp;
branches;
next	1.33;

1.33
date	2000.04.17.18.21.57;	author bimal;	state Exp;
branches;
next	1.32;

1.32
date	2000.04.17.17.45.09;	author bimal;	state Exp;
branches;
next	1.31;

1.31
date	2000.01.18.20.54.02;	author bimal;	state Exp;
branches;
next	1.30;

1.30
date	99.12.27.19.36.45;	author pawel;	state Exp;
branches;
next	1.29;

1.29
date	99.12.27.19.09.41;	author bimal;	state Exp;
branches;
next	1.28;

1.28
date	99.12.27.18.57.35;	author pawel;	state Exp;
branches;
next	1.27;

1.27
date	99.11.10.23.11.24;	author yuchen;	state Exp;
branches;
next	1.26;

1.26
date	99.10.15.14.14.41;	author bimal;	state Exp;
branches;
next	1.25;

1.25
date	99.10.14.18.31.48;	author bimal;	state Exp;
branches;
next	1.24;

1.24
date	99.10.08.18.07.21;	author bimal;	state Exp;
branches;
next	1.23;

1.23
date	98.12.23.16.16.53;	author pawel;	state Exp;
branches;
next	1.22;

1.22
date	98.02.19.18.08.06;	author pawel;	state Exp;
branches;
next	1.21;

1.21
date	98.02.19.15.42.25;	author pawel;	state Exp;
branches;
next	1.20;

1.20
date	98.02.06.19.49.28;	author pawel;	state Exp;
branches;
next	1.19;

1.19
date	98.01.28.19.44.36;	author leith;	state Exp;
branches;
next	1.18;

1.18
date	98.01.20.19.28.20;	author leith;	state Exp;
branches;
next	1.17;

1.17
date	98.01.05.20.01.01;	author leith;	state Exp;
branches;
next	1.16;

1.16
date	97.12.10.16.59.08;	author leith;	state Exp;
branches;
next	1.15;

1.15
date	97.09.15.19.46.54;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	97.07.31.12.31.35;	author pawel;	state Exp;
branches;
next	1.13;

1.13
date	96.06.12.19.16.16;	author pawel;	state Exp;
branches;
next	1.12;

1.12
date	96.02.16.18.55.11;	author pawel;	state Exp;
branches;
next	1.11;

1.11
date	96.02.14.22.59.54;	author pawel;	state Exp;
branches;
next	1.10;

1.10
date	96.02.14.19.38.10;	author pawel;	state Exp;
branches;
next	1.9;

1.9
date	96.02.14.19.37.19;	author pawel;	state Exp;
branches;
next	1.8;

1.8
date	95.07.20.16.34.16;	author ramani;	state Exp;
branches;
next	1.7;

1.7
date	95.07.20.15.24.13;	author ramani;	state Exp;
branches;
next	1.6;

1.6
date	95.02.07.16.38.24;	author mladjadj;	state Exp;
branches;
next	1.5;

1.5
date	94.12.01.20.41.14;	author mladjadj;	state Exp;
branches;
next	1.4;

1.4
date	94.09.28.15.04.50;	author leith;	state Exp;
branches;
next	1.3;

1.3
date	94.08.25.15.09.02;	author pawel;	state Exp;
branches;
next	1.2;

1.2
date	94.05.13.14.12.21;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	94.05.13.12.53.39;	author leith;	state Exp;
branches;
next	;


desc
@unix specific source code with preprocessor lines
@


1.93
log
@changes when removed getstack... ops
@
text
@ 
C++*********************************************************************
C 
C  UTIL3.F        LONG FILENAMES           ArDean Leith           10/88  
C                                          MAHIEDDINE LADJADJ   4/23/93 
C                                          JING SU              8/31/93 
C                 REWRITTEN                ArDean Leith         1/15/98 
C                 ROT CALL CHANGED         ArDean Leith         8/02/00  
C                 ADDED 'ER'               ArDean Leith         2/16/01  
C                 ADDED 'ER SK'            ArDean Leith         4/23/01 
C                 ADDED 'ER EDM'           ArDean Leith         5/16/01 
C                 ADDED 'RT 3DQ'           ArDean Leith         4/10/01 
C                 ADDED 'ER WA '           ArDean Leith         4/25/02  
C                 OPFILEC                  ArDean Leith         2/18/03  
C                 'RT 3D' LUN closed       ArDean Leith         4/30/03 
C                 MRQLI1 -> APMASTER       ArDean Leith         9/ 5/03 
C                 MPI                      CHAO YANG           10/30/03 
C                 REMOVED RCONV            ArDean Leith        11/24/03 
C                 'RT QS' SELECTED FILES   ArDean Leith        12/15/06 
C                 'RTD **'                 ArDean Leith         1/15/07 
C                 ORACFMSKM CALL           ArDean Leith         3/19/08
C                 'OR S' CALL              ArDean Leith         6/06/08
C                 'OR R' CALL              ArDean Leith         6/06/08
C                 SETPRMB PARAMETERS       ArDean Leith         5/19/09
C                 LUNXM                    ArDean Leith        12/16/10
C                 ROTQSS REPLACED          ArDean Leith         1/12/11
C                 ROTQSS RTKSQ             ArDean Leith         5/24/11
C                 ROTQSS MIRROR            ArDean Leith         3/06/12
C                 TF FIND                  ArDean Leith         5/07/12
C                 OR MAP                   ArDean Leith        12/12/12
C                 OBSOLETE OR'S REMOVED    ArDean Leith        13/08/13
C                 ROT32 IOFF               ArDean Leith         3/12/13
C                 'AF' CALL                ArDean Leith         1/10/20
C
C ********************************************************************** 
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2020  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@health.ny.gov                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C ********************************************************************** 
C 
C  UTIL3(MAXDIM) 
C 
C23456789 123456789 123456789 123456789 123456789 123456789 123456789 12 
C--********************************************************************* 
 
        SUBROUTINE UTIL3(MAXDIM) 
 
	INCLUDE 'CMBLOCK.INC' 
        INCLUDE 'CMLIMIT.INC' 
 
        INTEGER                :: MAXDIM

        INTEGER                :: ICOMM,MYPID,MPIERR
 
        CHARACTER(LEN=MAXNAM)  :: FILNAM,FILNM1,FILNAMO 
        CHARACTER (LEN=1)      :: CDUM 
	LOGICAL                :: MIRROR,CHKMIRROR 
        LOGICAL                :: ASKPEAKS
        CHARACTER (LEN=1)      :: NULL = CHAR(0)
 
	INTEGER,PARAMETER      :: LUN1   = 7 
	INTEGER,PARAMETER      :: LUN2   = 8 
	INTEGER,PARAMETER      :: LUN3   = 9 
	INTEGER,PARAMETER      :: LUNDOC = 87
	INTEGER,PARAMETER      :: LUNXM1 = 88
	INTEGER,PARAMETER      :: LUNXM2 = 89

        
C       DATA FUNC/'ED', 'RC', 'RT', 'BC', 'CT', 
c    &            'OR', 'FC', 'SL', 'RO', 'OD', 
c    &            'MK', 'AF', 'OP', 'DI', 'ER',
c    &            '13'/ 
C         13 is for 'RTD' operation


      CALL SET_MPI(ICOMM,MYPID,MPIERR)  ! SET MYPID

      IRTFLG = 0 
      MAXIM1 = 0 
      MAXIM2 = 0 

      SELECT CASE(FCHAR(1:2))
 
 
      CASE ('ED') !  -------  EDGE ------------------------------ 'ED' 

 	CALL OPFILEC(0,.TRUE.,FILNAM,LUN1,'O',ITYPE,
     &              NX,NY,NZ, 
     & 		   MAXIM1,'INPUT',.FALSE.,IRTFLG) 
	IF (IRTFLG .NE. 0) GOTO 9000 
 
        IF (NZ .GT. 1) THEN 
C          DOES NOT WORK ON 3-D FILES 
           CALL ERRT(101,'SORRY DOES NOT WORK ON 3-D FILES',NE) 
           GOTO 9000 
        ENDIF 
 
C       OPEN AN OUTPUT FILE WITH DIMENSIONS BASED ON FIRST INPUT FILE 
        CALL OPFILEC(LUN1,.TRUE.,FILNAM,LUN2,'U',ITYPE,
     &             NX,NY,NZ, 
     &  	   MAXIM2,'OUTPUT',.TRUE.,IRTFLG) 
	IF (IRTFLG .NE. 0) GOTO 9000 
 
        CALL EDGE(LUN1,LUN2,LUN3,NX,NY) 
        GOTO 9000 
 
      CASE ('RC') !  ------- REAL CONVOLUTION ------------------ 'RC' 
 
        CALL OPFILEC(0,.TRUE.,FILNAM,LUN1,'O',ITYPE,
     &               NX,NY,NZ, 
     &               MAXIM1,'INPUT',.FALSE.,IRTFLG) 
        IF (IRTFLG .NE. 0) GOTO 9000 
 
C       OPEN OUTPUT FILE WITH SAME DIMENSIONS AS INPUT FILE 
        CALL OPFILEC(LUN1,.TRUE.,FILNAMO,LUN2,'U',ITYPE,
     &               NX,NY, 
     &               NZ,MAXIM2,'OUTPUT',.TRUE.,IRTFLG) 
        IF (IRTFLG .NE. 0) GOTO 9000 
 
        CALL RCONV(LUN1,LUN2,LUN3,NX,NY,NZ,1,MAXDIM) 
        GOTO 9000 
 
      CASE ('13') !  ------- ROTATE & SCALE ------------------ 'RTD S*' 

        CHKMIRROR = (FCHAR(7:7) == 'M')

        IF (FCHAR(4:5) == 'SQ') THEN
C          OPERATION -- ROTATE & SCALE  ---------------------- 'RTD SQ' 
           CALL ROTQSS(LUN1,LUN2,LUNDOC,LUNXM1,LUNXM2,
     &                 .FALSE.,.FALSE.,CHKMIRROR,IRTFLG)

        ELSEIF ( FCHAR(4:5) == 'SF') THEN                   

C          OPERATION -- ROTATE & SCALE  ---------------------- 'RTD SF' 
           CALL ROTQSS(LUN1,LUN2,LUNDOC,LUNXM1,LUNXM2,
     &                 .FALSE.,.TRUE.,CHKMIRROR,IRTFLG)
        ENDIF

      CASE ('14') !  ------- ROTATE  ------------------------- 'ROT *' 
           CALL ROTATES()


      CASE ('RT') !  ------- ROTATE -------------------------- 'RT **' 
                    
        CHKMIRROR = (FCHAR(7:7) == 'M')

        IF (FCHAR(4:5) == 'SQ') THEN
C          OPERATION -- ROTATE & SCALE  ---------------------- 'RT SQ' 
           CALL ROTQSS(LUN1,LUN2,LUNDOC,LUNXM1,LUNXM2,
     &                   .TRUE.,.FALSE.,CHKMIRROR,IRTFLG)
           GOTO 9000 

        ELSEIF (FCHAR(4:5) == 'SF') THEN
C          OPERATION -- ROTATE & SCALE  ---------------------- 'RT SF' 
           CALL ROTQSS(LUN1,LUN2,LUNDOC,LUNXM1,LUNXM2,
     &                   .TRUE.,.TRUE.,CHKMIRROR,IRTFLG)
           GOTO 9000 
        ENDIF

        IF (FCHAR(4:5) == '3 ')  THEN 
            CALL ERRT(101," OBSOLETE OPERATION, USE 'ROT A' NOW",NE)
            GOTO 9000  
        ENDIF 

C       OPEN INPUT FILE 
        CALL OPFILEC(0,.TRUE.,FILNAM,LUN1,'O',ITYPE,
     &                  NX,NY,NZ, 
     & 		        MAXIM1,'INPUT',.FALSE.,IRTFLG) 
        IF (IRTFLG .NE. 0) GOTO 9000 
 
        IF (FCHAR(4:4) == '3' .AND. ITYPE .NE. 3)  THEN 
            CALL ERRT(101,'NOT A VOLUME',NE) 
            GOTO 9000  
        ENDIF 
 
C       RECORD INPUT IMAGE  AVERAGE IN CASE NEEDED FOR BACKGROUND 
        AV1    = AV 
        FMAX1  = FMAX 
        FMIN1  = FMIN 
        IMAMI1 = IMAMI 
 
C       OPERATION -------- ROTATE 90, 180, 270 ---------------- 'RT 90' 
C       SPECIAL ARRANGEMENT FOR 'RT 90' (DO NOT KNOW DIMENSIONS YET) 
        IF (FCHAR(4:5) == '90') THEN 
C          90, 180, OR 270 DEGREE ROTATION OF VOLUME 
           CALL REFORM0(LUN1,LUN2,NX,NY,NZ,MAXDIM,IRTFLG) 
           GOTO 9000 
        ENDIF 
                      
C       OPEN OUTPUT FILE WITH SAME DIMENSIONS AS INPUT FILE 
        MAXIM2 = 0 
        CALL OPFILEC(LUN1,.TRUE.,FILNAM,LUN2,'U',ITYPE,
     &              NX,NY,NZ, 
     &              MAXIM2,'OUTPUT',.FALSE.,IRTFLG) 
        IF (IRTFLG .NE. 0) RETURN 
 
        IF (FCHAR(4:5) == '3D' .OR. FCHAR(4:5) == '3A')THEN 
C          OPERATION -------- ROTATE 3D 3A -------------------- 'RT 3??' 
           WRITE(NOUT,*) " OBSOLETE OPERATION, USE 'ROT C' NOW"
           CALL ROTAS3(LUN1,LUN2,NX,NY,NZ,FCHAR(4:6)) 
           GOTO 9000 
 
	ELSEIF (FCHAR(4:5) == '3L') THEN 
C          OPERATION -------- ROTATE 3D AROUND LINE ------------ 'RT 3L' 
           WRITE(NOUT,*) " OBSOLETE OPERATION, USE 'ROT L' NOW"
           CALL ROTAL3(LUN1,LUN2,NX,NY,NZ,FCHAR(4:6)) 
           GOTO 9000 
        ENDIF 
 
C       OPERATION -------- ROTATE ------------------------------ 'RT' 
C       OPERATION -------- ROTATE USE MIN AS BACK. ------------- 'RT M' 
C       OPERATION -------- ROTATE SPECIFY BACK ----------------- 'RT B' 
C       OPERATION -------- ROTATE AROUND ARBITRARY CENTER  ----- 'RT C' 
 
        IF (FCHAR(4:4) .NE. 'C') THEN 
           WRITE(NOUT,*) " OBSOLETE OPERATION, USE 'ROT' NOW"
        ENDIF

        CALL RDPRM(THETA,NOT_USED,'ROTATION ANGLE') 

        TH = THETA * DATAN(1.0D0) / 45.0D0 

        IF (FCHAR(4:4) .NE. 'B') THEN 
C          BACKGROUND IS INPUT IMAGE AVERAGE, 
C          EXCEPT FOR "RT M" WHERE BACKGROUND IS MINIMUM 
           IF (IMAMI1 .NE. 1) 
     &        CALL NORM3(LUN1,NX,NY,NZ,FMAX1,FMIN1,AV1) 
           IF (FCHAR(4:4) == 'M') AV1 = FMIN1 
        ELSE 
C          FOR "RT B" MUST SUPPLY BACKGROUND 
           CALL RDPRM(AV1,NOT_USED,'BACKGROUND') 
        ENDIF 
 
C       SET ROTATION CENTER 
        SHX = 0.0 
        SHY = 0.0 

        IF (FCHAR(4:4) == 'C') THEN 
C          ROTATE AROUND AN ARBITRARY CENTER  
           WRITE(NOUT,*) " OBSOLETE OPERATION, USE 'ROT C' NOW"
           IF (NX*(1+NY) > MAXDIM) THEN 
              CALL ERRT (101, 
     &           'VARIABLE CENTER NOT AVAILABLE FOR THIS SIZE IMAGE',NE) 
              GOTO 9000 
           ENDIF 

           SHX = 0
           CALL RDPRM1S(SHX,NOT_USED,'X-SHIFT',IRTFLG) 
           SHY = 0
           CALL RDPRM1S(SHY,NOT_USED,'Y-SHIFT',IRTFLG) 
        ENDIF 
 
C       CAN DO IMAGE OR VOLUME 
        DO  ISLICE = 1, NZ 

C           ROTATE SLICE IN-CORE 
            NYS  = (ISLICE-1) * NY + 1 
            NYE  = NYS + NY - 1 
            IOFF = NYS - 1
            CALL ROT32(LUN1,LUN2,NX,NYS,NYE,1, TH,AV1,SHX,SHY,IOFF) 
        ENDDO 
 
             
      CASE ('BC') !  ------- BOX CONVOLUTION --------------------- 'BC' 
 
 	CALL OPFILEC(0,.TRUE.,FILNAM,LUN1,'O',ITYPE,
     &             NX1,NY1,NZ1, 
     & 		   MAXIM1,'INPUT',.FALSE.,IRTFLG) 
	IF (IRTFLG .NE. 0) GOTO 9000 
 
        IMAMI1 = IMAMI 
        AV1    = AV 
 
C       OPEN AN OUTPUT FILE WITH DIMENSIONS SAME AS INPUT FILE 
        CALL OPFILEC(LUN1,.TRUE.,FILNAM,LUN2,'U',ITYPE, 
     &               NX1,NY1,NZ1, MAXIM2,'OUTPUT',.TRUE.,IRTFLG) 
	IF (IRTFLG .NE. 0) GOTO 9000 
 
C       BOX CONVOLUTION 
        IMAMI = IMAMI1 
        AV    = AV1 
        CALL BOXX(LUN1,LUN2,NX1,NY1,NZ1,MAXDIM) 
 
C       SET HEADER FOR ALTERATIONS IN IMAGE DUE TO OPERATION 
        CALL  SETPRMB(LUN2, 0.0,0.0, 0.0,0.0) 
                                 
      CASE ('CT') !  -------- CT --------------------------------'CT' 

        CALL ERRT (101, 'OBSOLETE OPERATION REMOVED',NE) 
        RETURN 
 
      CASE ('OR') !  -------- ORIENTATIONAL SEARCH ------------- 'OR' 

       IF (FCHAR(4:4) == '2') THEN 
C          OPERATION -------- ORIENTATIONAL SEARCH ------------- 'OR 2' 
C          OPERATION -------- ORIENTATIONAL SEARCH ------------- 'OR 2M' 
           IF (mypid <= 0) WRITE(NOUT,888) 
888        FORMAT(" OBSOLETE OPERATION, USE: 'OR R' INSTEAD",/)
           RETURN 

        ELSEIF (FCHAR(4:4) == 'R') THEN 
C          OPERATION -------- ORIENTATIONAL SEARCH -------------- 'OR R' 
C          REPLACES 'OR 2' & 'OR 2M' 
           CALL ORMD(.TRUE.) 
           RETURN 
 
        ELSEIF (FCHAR(4:4) == 'A')  THEN 
C          OPERATION -------------------------------------------- 'OR A' 
	   IF (FCHAR(5:5) == 'M')  THEN 
              CALL ERRT(101,"OPERATION IS NOW: 'OR A'",NE)
              RETURN
           ENDIF
           CALL ORACFMSK() 
           RETURN 

        ELSEIF (FCHAR(4:4) == 'Q')  THEN 
C          OPERATION -------------------------------------------- 'OR Q' 
	   IF (FCHAR(5:5) == 'M')  THEN 
              CALL ERRT(101,"OPERATION IS NOW: 'OR Q'",NE)
              RETURN
           ENDIF
           CALL ORACFMSKM() 
           RETURN 
 
        ELSEIF (FCHAR(4:4) == 'S')  THEN 
C          OPERATION REPLACES 'MQ' & 'NQ' ---------------------- 'OR SH' 
           CALL APMASTER('F','ORS') 
           RETURN 
 
        ELSEIF (FCHAR(4:5) == 'MA')  THEN 
C          OPERATION ------------------------------------------ 'OR MAP' 
           CALL ORMAP() 
           RETURN 

        ELSEIF (FCHAR(4:5) == 'MQ')  THEN 
C          OPERATION ------------------------------------------- 'OR MQ' 
           IF (mypid <= 0) WRITE(NOUT,887) 
887        FORMAT(" OBSOLETE OPERATION, USE: 'OR SH' INSTEAD",/)
           RETURN 
 
        ELSEIF (FCHAR(4:5) == 'NQ')  THEN 
C          OPERATION  ------------------------------------------ 'OR NQ' 
           IF (mypid <= 0) WRITE(NOUT,887) 
           RETURN 
 
        ELSEIF (FCHAR(4:5) == '3Q')  THEN 
C          OPERATION ------------------------------------------- 'OR 3Q' 
           CALL QALI('Q') 
           GOTO 9911 
 
        ELSEIF (FCHAR(4:5) == '3A')  THEN 
C          OPERATION ------------------------------------------- 'OR 3A' 
           CALL QALI('A') 
           GOTO 9911 
        END IF 
        GOTO 9911 

      CASE ('FC') !  ------ ------------------------------------- 'FC' 
 
	CALL OPFILEC(0,.TRUE.,FILNAM,LUN1,'O',ITYPE,NX1,
     &               NY1,NZ1, 
     &               MAXIM1,'INPUT',.FALSE.,IRTFLG) 
	IF (IRTFLG .NE. 0) GOTO 9000 
 
        IF (NZ1 .NE. 1) THEN 
C          DOES NOT WORK ON 3-D FILES 
           CALL ERRT(101,'DOES NOT WORK ON VOLUMES',NE) 
           GOTO 9000 
        END IF 
 
        FMAX1  = FMAX 
        FMIN1  = FMIN 
        IMAMI1 = IMAMI 
 
C       OPEN AN OUTPUT FILE WITH SAME DIMENSIONS AS INPUT FILE 
        CALL OPFILEC(LUN1,.TRUE.,FILNAM,LUN2,'U',ITYPE, 
     &               NX1,NY1,NZ1, 
     &               MAXIM2,'OUTPUT',.TRUE.,IRTFLG) 
	IF (IRTFLG .NE. 0) GOTO 9000 
 
C       FILE CONTOUR 
        FMAX  = FMAX1 
        FMIN  = FMIN1 
        IMAMI = IMAMI1 
        CALL CNTRFL(LUN1,LUN2,NX1,NY1,NZ1,MAXDIM) 
 
C       SOME OPTIONS REQUIRE RESCALING (AL 28 JAN 92) 
        CALL SETPRMB(LUN2, 0.0,0.0, 0.0,0.0) 
 
      CASE ('SL') !  ------ -------------  SLICE ------------------'SL' 
 
        CALL SLICE(MAXDIM,LUN1,LUN2,LUN3) 
      
      CASE ('RO') !  ------ ROTATIONAL AVERAGE --------------------'RO' 
  
        IF (FCHAR(4:4) == 'I') THEN 
	   CALL OPFILEC(0,.TRUE.,FILNAM,LUN1,'O',ITYPE, 
     &                  NX1,NY1,NZ1, 
     &                  MAXIM1,'INPUT',.FALSE.,IRTFLG) 
	   IF (IRTFLG .NE. 0) GOTO 9000 
 
           IF (NZ1 .NE. 1) THEN 
C             OPERATION DOES NOT WORK ON 3-D FILES 
              CALL ERRT(101,'DOES NOT WORK ON VOLUMES',NE) 
              GOTO 9000 
	   ENDIF 
 
C          OPEN AN OUTPUT FILE  
	   IFORM = 1 
           CALL OPFILEC(LUN1,.TRUE.,FILNAM,LUN2,'U',ITYPE, 
     &                  NX1,NY1,NZ1,
     &                  MAXIM2,'OUTPUT',.TRUE.,IRTFLG) 
	   IF (IRTFLG .NE. 0) GOTO 9000 
 
C          ROTATIONAL AVERAGING 
           CALL RADAVI(LUN1,LUN2,NX1,NY1,MAXDIM) 
        ELSE 
           CALL RADAV(LUN1,LUN2) 
        ENDIF 
 
      CASE ('OD') !  ------  OPTICAL DENSITY -------------------- 'OD' 
 
	CALL OPFILEC(0,.TRUE.,FILNAM,LUN1,'O',ITYPE,
     &               NX1,NY1,NZ1,
     &               MAXIM1,'INPUT',.FALSE.,IRTFLG) 
	IF (IRTFLG .NE. 0) GOTO 9000 
 
        IF (NZ1 .NE. 1) THEN 
C          DOES NOT WORK ON 3-D FILES 
           CALL ERRT(101,'DOES NOT WORK ON VOLUMES',NE) 
           GOTO 9000 
        END IF 
 
C       OPEN AN OUTPUT FILE WITH DIMENSIONS SAME AS INPUT FILE 
        CALL OPFILEC(LUN1,.TRUE.,FILNAM,LUN2,'U',ITYPE, 
     &               NX1,NY1,NZ1, 
     &               MAXIM2,'OUTPUT',.TRUE.,IRTFLG) 
	IF (IRTFLG .NE. 0) GOTO 9000 
 
        CALL OD(LUN1,LUN2,LUN3,NX1,NY1,MAXDIM) 
 

      CASE ('MK') !  ------------ MARKER ------------------------ 'MK' 

        IF (FCHAR(4:5) == '3')  THEN      !-------------------- 'MK 3'
           CALL MRK3(MAXDIM) 
        ELSEIF (FCHAR(4:6) == 'RT') THEN  !-------------------- 'MK RT'
           CALL MRRT(MAXDIM) 	
        ELSE 
	   CALL MRK(MAXDIM)                 !-------------------- 'MK'
	ENDIF 
 

      CASE ('AF') !  ------- TRANSFORMATION --------------------- 'AF' 
C       UNDOCUMENTED OPERATION !!
        MAXIM1 = -3
        CALL OPFILEC(0,.TRUE.,FILNAM,LUN1,'O',ITYPE, 
     &               NX1,NY1,NZ1, MAXIM1,'INPUT',
     &              .FALSE.,IRTFLG) 
        IF (IRTFLG .NE. 0) GOTO 9000 
 
        IF (MAXIM1  >=  0) THEN   ! FEB 2020 al
           CALL ERRT(101,
     &        'THIS OPERATION NO LONGER ACCEPTS BARE STACK INPUT',NDUM)
           GOTO 9000
        ENDIF
  
C       OPEN AN OUTPUT FILE WITH SAME DIMENSIONS AS INPUT FILE 
        CALL OPFILEC(LUN1,.TRUE.,FILNAMO,LUN2,'U',ITYPE, 
     &               NX1,NY1,NZ1,MAXIM2,
     &               'OUTPUT',.TRUE.,IRTFLG) 
        IF (IRTFLG .NE. 0) GOTO 9000 
 
	CALL AF(MAXDIM, LUN1,LUN2, NX1,NY1,NZ1, IRTFLG) 
 
      CASE ('OP') !  ----- ORIENTATION OF PROJECTIONS ------------ 'OP' 
  	CALL POLQS(MAXDIM) 
 
      CASE ('DI') !  ----- DILATION ------------------------------ 'DI' 
 	CALL  OPFILEC(0,.TRUE.,FILNAM,LUN1,'O',ITYPE, 
     &        NX,NY,NZ, MAXIM1,'INPUT',.FALSE.,IRTFLG) 
        IF (IRTFLG .NE. 0) RETURN 
 
        CALL  OPFILEC(LUN1,.TRUE.,FILNAM,LUN2,'U',ITYPE, 
     &                NX,NY,NZ,
     &                MAXIM2,'OUTPUT',.FALSE.,IRTFLG) 
        IF (IRTFLG .NE. 0) GOTO 9000 
 
	CALL  DILATION(LUN1,LUN2,NX,NY,NZ) 
	GOTO 9000 
 
      CASE ('ER') !  -----  EROSION ----------------------------- 'ER' 
 	CALL OPFILEC(0,.TRUE.,FILNAM,LUN1,'O',ITYPE,
     &       NX,NY,NZ, 
     &       MAXIM1,'INPUT',.FALSE.,IRTFLG) 
        IF (IRTFLG .NE. 0) RETURN 
        FMIN1 = FMIN 
        FMAX1 = FMAX 
 
        CALL OPFILEC(LUN1,.TRUE.,FILNAM,LUN2,'U',ITYPE,
     &              NX,NY,NZ, 
     &              MAXIM2,'OUTPUT',.FALSE.,IRTFLG) 
        IF (IRTFLG .NE. 0) GOTO 9000 
 
        IF (FCHAR(4:5) == 'SK') THEN 
C          BINARY SKELETON 
	   CALL SKELETON(LUN1,LUN2,NX,NY,NZ) 
 
        ELSEIF (FCHAR(4:4) == 'E') THEN 
C          EUCLIDEAN DISTANCE MAP 
	   CALL EDM(LUN1,LUN2,NX,NY,NZ,FMIN1,FMAX1) 
 
        ELSEIF (FCHAR(4:4) == 'W') THEN 
C          WATERSHED  MAP 
	   CALL WATERSHD(LUN1,LUN2,NX,NY,NZ) 
 
        ELSE 
	   CALL EROSION(LUN1,LUN2,NX,NY,NZ) 
        ENDIF 
        
      END SELECT
 

9000  CLOSE(LUN1) 
      CLOSE(LUN2) 
      CLOSE(LUN3) 
 
9911  RETURN 
      END 
 









@


1.92
log
@email_health_dept
@
text
@d4 1
a4 1
C  UTIL3.F        LONG FILENAMES           ARDEAN LEITH           10/88  
d7 10
a16 10
C                 REWRITTEN                ARDEAN LEITH         1/15/98 
C                 ROT CALL CHANGED         ARDEAN LEITH         8/02/00  
C                 ADDED 'ER'               ARDEAN LEITH         2/16/01  
C                 ADDED 'ER SK'            ARDEAN LEITH         4/23/01 
C                 ADDED 'ER EDM'           ARDEAN LEITH         5/16/01 
C                 ADDED 'RT 3DQ'           ARDEAN LEITH         4/10/01 
C                 ADDED 'ER WA '           ARDEAN LEITH         4/25/02  
C                 OPFILEC                  ARDEAN LEITH         2/18/03  
C                 'RT 3D' LUN closed       ARDEAN LEITH         4/30/03 
C                 MRQLI1 -> APMASTER       ARDEAN LEITH         9/ 5/03 
d18 17
a34 15
C                 REMOVED RCONV            ARDEAN LEITH        11/24/03 
C                 'RT QS' SELECTED FILES   ARDEAN LEITH        12/15/06 
C                 'RTD **'                 ARDEAN LEITH         1/15/07 
C                 ORACFMSKM CALL           ARDEAN LEITH         3/19/08
C                 'OR S' CALL              ARDEAN LEITH         6/06/08
C                 'OR R' CALL              ARDEAN LEITH         6/06/08
C                 SETPRMB PARAMETERS       ARDEAN LEITH         5/19/09
C                 LUNXM                    ARDEAN LEITH        12/16/10
C                 ROTQSS REPLACED          ARDEAN LEITH         1/12/11
C                 ROTQSS RTKSQ             ARDEAN LEITH         5/24/11
C                 ROTQSS MIRROR            ARDEAN LEITH         3/06/12
C                 TF FIND                  ARDEAN LEITH         5/07/12
C                 OR MAP                   ARDEAN LEITH        12/12/12
C                 OBSOLETE OR'S REMOVED    ARDEAN LEITH        13/08/13
C                 ROT32 IOFF               ARDEAN LEITH         3/12/13
d39 1
a39 1
C=* Copyright 1985-2013  Health Research Inc.,                         *
d67 4
d84 1
d92 1
a92 1
      CALL SET_MPI(icomm,mypid,mpierr)  ! SET MYPID
d303 1
a303 1
      CASE ('CT') !  -------- CT ----------------------------'CT' 
d308 1
a308 1
      CASE ('OR') !  -------- ORIENTATIONAL SEARCH ------------ 'OR' 
d471 2
d478 6
a484 1
        IF (MAXIM1 .GE. 0)  MAXIM2 = 1  
d490 1
a490 2
	CALL AF(MAXDIM,LUN1,LUN2,LUN3,FILNAM,FILNAMO, 
     &                 NX1,NY1,NZ1,MAXIM1,IRTFLG) 
@


1.91
log
@enter
@
text
@d39 1
a39 1
C=* Email: spider@@wadsworth.org                                        *
@


1.90
log
@ROT32 IOFF
@
text
@d240 1
a240 1
           CALL RDPRM(AV1,NOT_USED,'ENTER BACKGROUND') 
@


1.89
log
@ROT32 IOFF
@
text
@d32 1
@


1.88
log
@NSAM --> NX,  obsolete 'OR NQ....' removed
@
text
@d207 1
a207 1
           write(nout,*) " OBSOLETE OPERATION, USE 'ROT C' NOW"
d224 1
a224 1
           write(nout,*) " OBSOLETE OPERATION, USE 'ROT' NOW"
d226 1
d228 1
d230 1
d240 1
a240 1
        END IF 
d245 1
d249 1
a249 1
           IF (NX*(1+NY) .GT. MAXDIM) THEN 
d254 5
a258 2
           CALL RDPRM(SHX,NOT_USED,'X-SHIFT') 
           CALL RDPRM(SHY,NOT_USED,'Y-SHIFT') 
d263 1
d265 5
a269 4
            NYS = (ISLICE-1)*NY+1 
            NYE = NYS + NY - 1 
            CALL ROT32(LUN1,LUN2,NX,NYS,NYE,1,TH,AV1,SHX,SHY) 
        END DO 
a270 2
C       SET HEADER FOR ALTERATIONS IN IMAGE DUE TO OPERATIONS 
        CALL SETPRMB(LUN2, 0.0,0.0, 0.0,0.0) 
d375 1
a375 1
           CALL ERRT(2,'UTIL3',NE) 
d412 1
a412 1
              CALL ERRT(2,'UTIL3',NE) 
d438 1
a438 1
           CALL ERRT(2,'UTIL3',NE) 
@


1.87
log
@removed 'OR 2' call
@
text
@d31 1
d96 1
a96 1
     &              NSAM,NROW,NSLICE, 
d100 1
a100 1
        IF (NSLICE .GT. 1) THEN 
d108 1
a108 1
     &             NSAM,NROW,NSLICE, 
d112 1
a112 1
        CALL EDGE(LUN1,LUN2,LUN3,NSAM,NROW) 
d118 1
a118 1
     &               NSAM,NROW,NSLICE, 
d124 2
a125 2
     &               NSAM,NROW, 
     &               NSLICE,MAXIM2,'OUTPUT',.TRUE.,IRTFLG) 
d128 1
a128 1
        CALL RCONV(LUN1,LUN2,LUN3,NSAM,NROW,NSLICE,1,MAXDIM) 
d175 1
a175 1
     &                  NSAM,NROW,NSLICE, 
d194 1
a194 1
           CALL REFORM0(LUN1,LUN2,NSAM,NROW,NSLICE,MAXDIM,IRTFLG) 
d201 1
a201 1
     &              NSAM,NROW,NSLICE, 
d208 1
a208 1
           CALL ROTAS3(LUN1,LUN2,NSAM,NROW,NSLICE,FCHAR(4:6)) 
d214 1
a214 1
           CALL ROTAL3(LUN1,LUN2,NSAM,NROW,NSLICE,FCHAR(4:6)) 
d232 1
a232 1
     &        CALL NORM3(LUN1,NSAM,NROW,NSLICE,FMAX1,FMIN1,AV1) 
d245 1
a245 1
           IF (NSAM*(1+NROW) .GT. MAXDIM) THEN 
d255 1
a255 1
        DO  ISLICE = 1, NSLICE 
d257 3
a259 3
            NROWS = (ISLICE-1)*NROW+1 
            NROWE = NROWS + NROW - 1 
            CALL ROT32(LUN1,LUN2,NSAM,NROWS,NROWE,1,TH,AV1,SHX,SHY) 
d268 1
a268 1
     &             NSAM1,NROW1,NSLIC1, 
d277 1
a277 1
     &               NSAM1,NROW1,NSLIC1, MAXIM2,'OUTPUT',.TRUE.,IRTFLG) 
d283 1
a283 1
        CALL BOXX(LUN1,LUN2,NSAM1,NROW1,NSLIC1,MAXDIM) 
d298 2
a299 2
           IF (mypid .LE. 0) WRITE(NOUT,888) 
888        FORMAT(" OBSOLETE OPERATION, PLEASE USE: 'OR R'",/)
d338 2
a339 3
          IF (mypid .LE. 0) WRITE(NOUT,887) 
887       FORMAT(" OBSOLETE OPERATION, NEXT TIME PLEASE USE: 'OR SH'",/)
           CALL APMASTER('F','ORM') 
d344 1
a344 2
           IF (mypid .LE. 0) WRITE(NOUT,887) 
           CALL APMASTER('F','ORN') 
d361 2
a362 2
	CALL OPFILEC(0,.TRUE.,FILNAM,LUN1,'O',ITYPE,NSAM1,
     &               NROW1,NSLIC1, 
d366 1
a366 1
        IF (NSLIC1 .NE. 1) THEN 
d378 1
a378 1
     &               NSAM1,NROW1,NSLIC1, 
d386 1
a386 1
        CALL CNTRFL(LUN1,LUN2,NSAM1,NROW1,NSLIC1,MAXDIM) 
d399 1
a399 1
     &                  NSAM1,NROW1,NSLIC1, 
d403 1
a403 1
           IF (NSLIC1 .NE. 1) THEN 
d412 1
a412 1
     &                  NSAM1,NROW1,NSLIC1,
d417 1
a417 1
           CALL RADAVI(LUN1,LUN2,NSAM1,NROW1,MAXDIM) 
d425 1
a425 1
     &               NSAM1,NROW1,NSLIC1,
d429 1
a429 1
        IF (NSLIC1 .NE. 1) THEN 
d437 1
a437 1
     &               NSAM1,NROW1,NSLIC1, 
d441 1
a441 1
        CALL OD(LUN1,LUN2,LUN3,NSAM1,NROW1,MAXDIM) 
d457 1
a457 1
     &               NSAM1,NROW1,NSLIC1, MAXIM1,'INPUT',
d464 1
a464 1
     &               NSAM1,NROW1,NSLIC1,MAXIM2,
d469 1
a469 1
     &                 NSAM1,NROW1,NSLIC1,MAXIM1,IRTFLG) 
d476 1
a476 1
     &        NSAM,NROW,NSLICE, MAXIM1,'INPUT',.FALSE.,IRTFLG) 
d480 1
a480 1
     &                NSAM,NROW,NSLICE,
d484 1
a484 1
	CALL  DILATION(LUN1,LUN2,NSAM,NROW,NSLICE) 
d489 1
a489 1
     &       NSAM,NROW,NSLICE, 
d496 1
a496 1
     &              NSAM,NROW,NSLICE, 
d502 1
a502 1
	   CALL SKELETON(LUN1,LUN2,NSAM,NROW,NSLICE) 
d506 1
a506 1
	   CALL EDM(LUN1,LUN2,NSAM,NROW,NSLICE,FMIN1,FMAX1) 
d510 1
a510 1
	   CALL WATERSHD(LUN1,LUN2,NSAM,NROW,NSLICE) 
d513 1
a513 1
	   CALL EROSION(LUN1,LUN2,NSAM,NROW,NSLICE) 
@


1.86
log
@'OR MAP'
@
text
@d35 1
a35 1
C=* Copyright 1985-2012  Health Research Inc.,                         *
d298 1
a298 3
888        FORMAT(" OBSOLETE OPERATION, NEXT TIME PLEASE USE: 'OR R'",/)
           ASKPEAKS = (FCHAR(4:5) == '2M')
           CALL ORMD(ASKPEAKS) 
@


1.85
log
@moved CTF FIND to 'TF FIND'
@
text
@d30 1
d304 1
a304 1
C          OPERATION -------- ORIENTATIONAL SEARCH ------------- 'OR R' 
d319 1
a319 1
C          OPERATION -------------------------------------------- 'OR M' 
d332 5
d341 2
a342 2
          CALL APMASTER('F','ORM') 
          RETURN 
@


1.84
log
@CTF FIND CALL
@
text
@d29 1
a29 1
C                 CTF FIND                 ARDEAN LEITH         5/07/12
d286 1
a286 1
      CASE ('CT') !  -------- CTF ----------------------------'CTF' 
d288 1
a288 4
        IF (FCHAR(4:4) == 'F') THEN 
C          OPERATION -------- CTF FIND CALL ----------------- 'CTF FIND' 
           CALL CTFFIND3()
        ENDIF
@


1.83
log
@rotqss param
@
text
@d29 1
d286 7
a292 2
      CASE ('CT') !  -------------  CONCATENATE ------------------'CT' 
        CALL ERRT(101,"OPERATION 'CT' NO LONGER SUPPORTED",IDUM) 
d294 1
a294 1
      CASE ('OR') !  ------ ORIENTATIONAL SEARCH ---------------- 'OR' 
@


1.82
log
@trap for 'rt'
@
text
@d28 1
d33 1
a33 1
C=* Copyright 1985-2011  Health Research Inc.,                         *
d62 2
a63 2
        CHARACTER (LEN=1)      :: CDUM,NULL 
	LOGICAL                :: MIRROR 
d65 1
d78 1
a78 1
C         13 was for 'RTD' operation
a82 2
      NULL   = CHAR(0)
 
d130 3
a132 1
        IF (FCHAR(4:5) .EQ. 'SQ') THEN
d135 1
a135 1
     &                 .FALSE.,.FALSE.,IRTFLG)
d137 1
a137 1
        ELSEIF ( FCHAR(4:5) .EQ. 'SF') THEN                   
d141 1
a141 1
     &                 .FALSE.,.TRUE.,IRTFLG)
d150 3
a152 1
        IF (FCHAR(4:5) .EQ. 'SQ') THEN
d155 1
a155 1
     &                   .TRUE.,.FALSE.,IRTFLG)
d158 1
a158 1
        ELSEIF (FCHAR(4:5) .EQ. 'SF') THEN
d161 1
a161 1
     &                   .TRUE.,.TRUE.,IRTFLG)
d165 2
a166 2
        IF (FCHAR(4:5) .EQ. '3 ')  THEN 
            CALL ERRT(101,' OBSOLETE OPERATION, USE <ROT A> NOW',NE)
d176 1
a176 1
        IF (FCHAR(4:4) .EQ. '3' .AND. ITYPE .NE. 3)  THEN 
d189 1
a189 1
        IF (FCHAR(4:5) .EQ. '90') THEN 
d202 1
a202 1
        IF (FCHAR(4:5) .EQ. '3D' .OR. FCHAR(4:5) .EQ. '3A')THEN 
d208 1
a208 1
	ELSEIF (FCHAR(4:5) .EQ. '3L') THEN 
d210 1
a210 1
           write(nout,*) " OBSOLETE OPERATION, USE 'ROT L' NOW"
d230 1
a230 1
           IF (FCHAR(4:4) .EQ. 'M') AV1 = FMIN1 
d239 1
a239 1
        IF (FCHAR(4:4) .EQ. 'C') THEN 
d241 1
a241 1
           write(nout,*) " OBSOLETE OPERATION, USE 'ROT C' NOW"
d290 1
a290 1
       IF (FCHAR(4:4) .EQ. '2') THEN 
d295 1
a295 1
           ASKPEAKS = (FCHAR(4:5) .EQ. '2M')
d299 1
a299 1
        ELSEIF (FCHAR(4:4) .EQ. 'R') THEN 
d305 1
a305 1
        ELSEIF (FCHAR(4:4) .EQ. 'A')  THEN 
d307 1
a307 1
	   IF (FCHAR(5:5) .EQ. 'M')  THEN 
d314 1
a314 1
        ELSEIF (FCHAR(4:4) .EQ. 'Q')  THEN 
d316 1
a316 1
	   IF (FCHAR(5:5) .EQ. 'M')  THEN 
d323 1
a323 1
        ELSEIF (FCHAR(4:4) .EQ. 'S')  THEN 
d328 1
a328 1
        ELSEIF (FCHAR(4:5) .EQ. 'MQ')  THEN 
d335 1
a335 1
        ELSEIF (FCHAR(4:5) .EQ. 'NQ')  THEN 
d341 1
a341 1
        ELSEIF (FCHAR(4:5) .EQ. '3Q')  THEN 
d346 1
a346 1
        ELSEIF (FCHAR(4:5) .EQ. '3A')  THEN 
d391 1
a391 1
        IF (FCHAR(4:4) .EQ. 'I') THEN 
d440 1
a440 1
        IF (FCHAR(4:5) .EQ. '3')  THEN      !-------------------- 'MK 3'
d442 1
a442 1
        ELSEIF (FCHAR(4:6) .EQ. 'RT') THEN  !-------------------- 'MK RT'
d494 1
a494 1
        IF (FCHAR(4:5) .EQ. 'SK') THEN 
d498 1
a498 1
        ELSEIF (FCHAR(4:4) .EQ. 'E') THEN 
d502 1
a502 1
        ELSEIF (FCHAR(4:4) .EQ. 'W') THEN 
@


1.81
log
@mods. for 'ROT',  removed 'RT 3'
@
text
@d161 5
a207 6
           GOTO 9000 
         
        ELSEIF (FCHAR(4:4) .EQ. '3') THEN 
C          OPERATION -------- ROTATE 3 ------------------------- 'RT 3' 
         
           CALL ERRT(101,' OBSOLETE OPERATION, USE <ROT A> NOW',NE)
@


1.80
log
@reverted to old rt sq input questions, activated 'rtd sf'[D[D[D[D[D[D[D[D[D[D[D[D[D[D[D[D
@
text
@d133 2
a134 1
     &                    .FALSE.,.FALSE.,IRTFLG)
d139 1
a139 1
     &                  .FALSE.,.TRUE.,IRTFLG)
d142 4
d195 2
a196 1
           CALL  ROTAS3(LUN1,LUN2,NSAM,NROW,NSLICE,FCHAR(4:6)) 
d201 2
a202 1
           CALL  ROTAL3(LUN1,LUN2,NSAM,NROW,NSLICE,FCHAR(4:6)) 
d207 2
a208 6
320        IF (IMAMI1 .NE. 1) 
     &        CALL NORM3(LUN1,NSAM,NROW,NSLICE,FMAX1,FMIN1,AV1) 
           IFANGL = 0 
           IFSHIF = 0 
           CALL ROT3(LUN1,LUN2,NSAM,NROW,NSLICE,AV1, 
     &           IFANGL,ALPH,BETA,GAMA,IFSHIF,SHX,SHY,SHZ) 
d217 3
d238 1
a525 93

#ifdef NEVER
 

C       OPERATION -------- ROTATE ----------------------------- 'RT **' 
                    
3       IF (FCHAR(4:5) .EQ. 'SQ') THEN
C          OPERATION -- ROTATE & SCALE  ----------------------- 'RT SQ' 
           CALL ROTQSS_DL(LUN1,LUN2,LUNDOC,IRTFLG)
           GOTO 9000 
        ENDIF

C       OPERATION -------- ROTATE 90, 180, 270 ---------------- 'RT 90' 
C       SPECIAL ARRANGEMENT FOR 'RT 90' (DO NOT KNOW DIMENSIONS YET) 
        IF (FCHAR(4:5) .EQ. '90') THEN 
C          90, 180, OR 270 DEGREE ROTATION OF VOLUME 
           CALL REFORM0(LUN1,LUN2,NSAM,NROW,NSLICE,MAXDIM,IRTFLG) 
           GOTO 9000 
        END IF 
                      
C       OPEN OUTPUT FILE WITH SAME DIMENSIONS AS INPUT FILE 
        MAXIM2 = 0 
        IF (FCHAR(4:5) .EQ. 'SQ' .AND. MAXIM1 .GE. 0)  MAXIM2 = 1  
        CALL OPFILEC(LUN1,.TRUE.,FILNAM,LUN2,'U',ITYPE,NSAM,NROW,NSLICE, 
     &              MAXIM2,'OUTPUT',.FALSE.,IRTFLG) 
        IF (IRTFLG .NE. 0) RETURN 
 
        IF (FCHAR(4:5) .EQ. '3D' .OR. FCHAR(4:5) .EQ. '3A')THEN 
C          OPERATION -------- ROTATE 3D 3A -------------------- 'RT 3??' 
           CALL  ROTAS3(LUN1,LUN2,NSAM,NROW,NSLICE,FCHAR(4:6)) 
           GOTO 9000 
 
	ELSEIF (FCHAR(4:5) .EQ. '3L') THEN 
C          OPERATION -------- ROTATE 3D AROUND LINE ------------ 'RT 3L' 
           CALL  ROTAL3(LUN1,LUN2,NSAM,NROW,NSLICE,FCHAR(4:6)) 
           GOTO 9000 
         
        ELSEIF (FCHAR(4:4) .EQ. '3') THEN 
C          OPERATION -------- ROTATE 3 ------------------------- 'RT 3' 
320        IF (IMAMI1 .NE. 1) 
     &        CALL NORM3(LUN1,NSAM,NROW,NSLICE,FMAX1,FMIN1,AV1) 
           IFANGL = 0 
           IFSHIF = 0 
           CALL ROT3(LUN1,LUN2,NSAM,NROW,NSLICE,AV1, 
     &           IFANGL,ALPH,BETA,GAMA,IFSHIF,SHX,SHY,SHZ) 
           GOTO 9000 
         ENDIF 
 
C       OPERATION -------- ROTATE ------------------------------ 'RT' 
C       OPERATION -------- ROTATE USE MIN AS BACK. ------------- 'RT M' 
C       OPERATION -------- ROTATE SPECIFY BACK ----------------- 'RT B' 
C       OPERATION -------- ROTATE AROUND ARBITRARY CENTER  ----- 'RT C' 
 
        CALL RDPRM(THETA,NOT_USED,'ROTATION ANGLE') 
        TH = THETA * DATAN(1.0D0) / 45.0D0 
        IF (FCHAR(4:4) .NE. 'B') THEN 
C          BACKGROUND IS INPUT IMAGE AVERAGE, 
C          EXCEPT FOR "RT M" WHERE BACKGROUND IS MINIMUM 
           IF (IMAMI1 .NE. 1) 
     &        CALL NORM3(LUN1,NSAM,NROW,NSLICE,FMAX1,FMIN1,AV1) 
           IF (FCHAR(4:4) .EQ. 'M') AV1 = FMIN1 
        ELSE 
C          FOR "RT B" MUST SUPPLY BACKGROUND 
           CALL RDPRM(AV1,NOT_USED,'ENTER BACKGROUND') 
        END IF 
 
C       SET ROTATION CENTER 
        SHX = 0.0 
        SHY = 0.0 
        IF (FCHAR(4:4) .EQ. 'C') THEN 
C          ROTATE AROUND AN ARBITRARY CENTER  
           IF (NSAM*(1+NROW) .GT. MAXDIM) THEN 
              CALL ERRT (101, 
     &           'VARIABLE CENTER NOT AVAILABLE FOR THIS SIZE IMAGE',NE) 
              GOTO 9000 
           ENDIF 
           CALL RDPRM(SHX,NOT_USED,'X-SHIFT') 
           CALL RDPRM(SHY,NOT_USED,'Y-SHIFT') 
        ENDIF 
 
C       CAN DO IMAGE OR VOLUME 
        DO  ISLICE = 1, NSLICE 
C           ROTATE SLICE IN-CORE 
            NROWS = (ISLICE-1)*NROW+1 
            NROWE = NROWS + NROW - 1 
            CALL ROT32(LUN1,LUN2,NSAM,NROWS,NROWE,1,TH,AV1,SHX,SHY) 
        END DO 
 
C       SET HEADER FOR ALTERATIONS IN IMAGE DUE TO OPERATIONS 
        CALL SETPRMB(LUN2, 0.0,0.0, 0.0,0.0) 
        GOTO 9000 
             
#endif
@


1.79
log
@oldrtsq on 'rt sf'
@
text
@d128 4
a131 1
      CASE ('13') !  ------- ROTATE & SCALE ------------------ 'RTD SQ' 
d134 7
a140 1
                    
d152 1
a152 1
     &                   .FALSE.,.TRUE.,IRTFLG)
@


1.78
log
@RTK SQ --> RT SF
@
text
@d143 1
a143 1
     &                   .TRUE.,.TRUE.,IRTFLG)
@


1.77
log
@ROTQSS RTKSQ
@
text
@a131 4
      CASE ('14') !  ------- ROTATE & SCALE ------------------ 'RTK SQ' 
           CALL ROTQSS(LUN1,LUN2,LUNDOC,LUNXM1,LUNXM2,
     &                    .FALSE.,.TRUE.,IRTFLG)
                    
d138 6
@


1.76
log
@rotqss_dl --> rotqss
@
text
@d27 1
d130 5
a134 1
     &                    .FALSE.,IRTFLG)
d139 1
a139 1
C          OPERATION -- ROTATE & SCALE  ----------------------- 'RT SQ' 
d141 1
a141 1
     &                   .TRUE.,IRTFLG)
@


1.75
log
@case, RTSQ selection logic
@
text
@d128 1
a128 1
           CALL ROTQSS_DL(LUN1,LUN2,LUNDOC,LUNXM1,LUNXM2,
d135 1
a135 1
           CALL ROTQSS_DL(LUN1,LUN2,LUNDOC,LUNXM1,LUNXM2,
@


1.74
log
@CALL ROTQSS_DL(LUN1,LUN2,LUNDOC,LUNXM1,LUNXM2..
@
text
@d26 1
d31 1
a31 1
C=* Copyright 1985-2010  Health Research Inc.,                         *
a58 2
	COMMON        BUF(1) 
 
a60 2
	INTEGER,PARAMETER      :: NFUNC=16 
        CHARACTER (LEN=2)      :: FUNC(NFUNC) 
d71 6
a76 5
	DATA FUNC/'ED', 'RC', 'RT', 'BC', 'CT', 
     &            'OR', 'FC', 'SL', 'RO', 'OD', 
     &            'MK', 'AF', 'OP', 'DI', 'ER',
     &            '13'/ 
 
d78 1
a78 1
        CALL SET_MPI(icomm,mypid,mpierr)  ! SET MYPID
d80 1
a80 1
        NULL   = CHAR(0)
d82 5
a86 11
        IRTFLG = 0 
        MAXIM1 = 0 
        MAXIM2 = 0 
 
        DO  IFUNC = 1, NFUNC 
           IF (FCHAR(1:2) .EQ. FUNC(IFUNC)) THEN 
              GOTO (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,
     &              16)  IFUNC 
           ENDIF 
        ENDDO 
        RETURN 
a87 1
C	OPERATION ------------- EDGE ----------------------------- 'ED' 
d89 4
a92 1
1	CALL OPFILEC(0,.TRUE.,FILNAM,LUN1,'O',ITYPE,NSAM,NROW,NSLICE, 
d103 2
a104 1
        CALL OPFILEC(LUN1,.TRUE.,FILNAM,LUN2,'U',ITYPE,NSAM,NROW,NSLICE, 
d111 1
a111 1
C       OPERATION -------- REAL CONVOLUTION ---------------------- 'RC' 
d113 3
a115 2
 2      CALL OPFILEC(0,.TRUE.,FILNAM,LUN1,'O',ITYPE,NSAM,NROW,NSLICE, 
     &                   MAXIM1,'INPUT',.FALSE.,IRTFLG) 
d118 4
a121 3
C       OPEN AN OUTPUT FILE WITH DIMENSIONS BASED ON FIRST INPUT FILE 
        CALL OPFILEC(LUN1,.TRUE.,FILNAMO,LUN2,'U',ITYPE,NSAM,NROW, 
     &           NSLICE,MAXIM2,'OUTPUT',.TRUE.,IRTFLG) 
a125 9


C       OPERATION -- ROTATE & SCALE  (NEW IMPLEMENTATION------ 'RTD SQ' 
16      IF (FCHAR(4:5) .NE. 'SQ') THEN
           CALL ERRT(101,'UNKNOWN OPERATION',NE)
           GOTO 9000
        ENDIF
        CALL ROTQSS_DL(LUN1,LUN2,LUNDOC,LUNXM1,LUNXM2,IRTFLG)
        GOTO 9000 
d127 5
a131 1
C       OPERATION -------- ROTATE ----------------------------- 'RT **' 
d133 1
a133 1
3       IF (FCHAR(4:5) .EQ. 'SQ') THEN
d135 4
a138 10
           CALL FILERD(FILNAM,NLET,NULL,
     &        'INPUT FILE NAME OR TEMPLATE (E.G. STK@@****)~',IRTFLG)
	   IF (IRTFLG .NE. 0) GOTO 9000 
         
           LOCAT  = INDEX(FILNAM(1:NLET),'@@')   
           LOCAST = INDEX(FILNAM(1:NLET),'*')   
           IF (LOCAT .GT. 0 .AND. LOCAST .GT. LOCAT) THEN
C             HAVE A STACKED FILE TEMPLATE
              CALL ROTQSS(FILNAM,LUN1,LUN2,LUNDOC,IRTFLG) 
              GOTO 9000 
d140 3
a142 11
           ELSE
C             OPEN INPUT FILE (MAY BE A WHOLE STACK) 
              MAXIM1 = 1  
	      CALL OPFILEC(0,.FALSE.,FILNAM,LUN1,'O',ITYPE,
     &                     NSAM,NROW,NSLICE, 
     & 		           MAXIM1,'INPUT',.FALSE.,IRTFLG) 
	      IF (IRTFLG .NE. 0) GOTO 9000 
            ENDIF
        ELSE
C          OPEN INPUT FILE 
	   CALL OPFILEC(0,.TRUE.,FILNAM,LUN1,'O',ITYPE,NSAM,NROW,NSLICE, 
d144 1
a144 2
	   IF (IRTFLG .NE. 0) GOTO 9000 
        ENDIF
d151 2
a155 2
C       RECORD INPUT IMAGE  AVERAGE IN CASE NEEDED FOR BACKGROUND 
        AV1    = AV 
d163 1
a163 1
        END IF 
d167 2
a168 2
        IF (FCHAR(4:5) .EQ. 'SQ' .AND. MAXIM1 .GE. 0)  MAXIM2 = 1  
        CALL OPFILEC(LUN1,.TRUE.,FILNAM,LUN2,'U',ITYPE,NSAM,NROW,NSLICE, 
a190 6
 
        ELSEIF (FCHAR(4:5) .EQ. 'SQ') THEN 
C          OPERATION -------- ROTATE & SCALE ------------------ 'RT SQ' 
           CALL ROTQS(MAXDIM,LUN1,LUN2,LUN3,FILNAM,FILNAMO, 
     &                NSAM,NROW,NSLICE,MAXIM1,IRTFLG) 
           GOTO 9000 
a234 1
        GOTO 9000 
d236 1
a236 1
C       OPERATION ------------------------------------------------ 'BC' 
d238 2
a239 1
4	CALL OPFILEC(0,.TRUE.,FILNAM,LUN1,'O',ITYPE,NSAM1,NROW1,NSLIC1, 
a257 1
        GOTO 9000 
d259 2
a260 1
C       OPERATION ----------------- CONCATENATE -------------------'CT' 
d262 3
a264 5
5       WRITE(NOUT,*) ' OPERATION "CT" NO LONGER SUPPORTED' 
        GOTO 9000 
 
C       OPERATION -------- ORIENTATIONAL SEARCH ---------------- 'OR' 
6       IF (FCHAR(4:4) .EQ. '2') THEN 
d268 1
a268 1
888        FORMAT(' OBSOLETE OPERATION, NEXT TIME PLEASE USE: <OR R>',/)
d282 1
a282 1
              CALL ERRT(101,'OPERATION IS NOW: <OR A>',NE)
d291 1
a291 1
              CALL ERRT(101,'OPERATION IS NOW: <OR Q>',NE)
d305 1
a305 1
887       FORMAT(' OBSOLETE OPERATION, NEXT TIME PLEASE USE: <OR SH>',/)
d316 1
a316 1
C          OPERATION ------------------------------------------ 'OR 3Q' 
d321 1
a321 1
C          OPERATION ------------------------------------------ 'OR 3A' 
d327 1
d329 3
a331 4
C       OPERATION ------------------------------------------------ 'FC' 
 
7	CALL OPFILEC(0,.TRUE.,FILNAM,LUN1,'O',ITYPE,NSAM1,NROW1,NSLIC1, 
     & 		   MAXIM1,'INPUT',.FALSE.,IRTFLG) 
d346 2
a347 1
     &               NSAM1,NROW1,NSLIC1, MAXIM2,'OUTPUT',.TRUE.,IRTFLG) 
a357 1
        GOTO 9000 
d359 1
a359 1
C       OPERATION ----------------------- SLICE -------------------'SL' 
d361 1
a361 2
8       CALL SLICE(MAXDIM,LUN1,LUN2,LUN3) 
        GOTO 9000 
d363 3
a365 5
C       OPERATION --------- ROTATIONAL AVERAGE --------------------'RO' 
 
 
9       IF (FCHAR(4:4) .EQ. 'I') THEN 
 
d367 2
a368 1
     &               NSAM1,NROW1,NSLIC1, MAXIM1,'INPUT',.FALSE.,IRTFLG) 
d380 2
a381 1
     &                 NSAM1,NROW1,NSLIC1,MAXIM2,'OUTPUT',.TRUE.,IRTFLG) 
d390 1
a390 4
        GOTO 9000 
 
C       OPERATION ----------- OPTICAL DENSITY -------------------- 'OD' 
C       OD CONVERSION 
d392 3
a394 2
10	CALL OPFILEC(0,.TRUE.,FILNAM,LUN1,'O',ITYPE,NSAM1,NROW1,NSLIC1, 
     & 		   MAXIM1,'INPUT',.FALSE.,IRTFLG) 
d405 2
a406 1
     &               NSAM1,NROW1,NSLIC1, MAXIM2,'OUTPUT',.TRUE.,IRTFLG) 
a409 1
        GOTO 9000 
d411 4
a414 2
11      IF (FCHAR(4:5) .EQ. '3')  THEN 
C          OPERATION ----------- MARKER ------------------------ 'MK 3' 
d416 4
a419 6
        ELSEIF (FCHAR(4:6) .EQ. 'RT')  THEN 
C          OPERATION ----------- MARKER ----------------------- 'MK RT' 
           CALL MRRT(MAXDIM) 
	ELSE 
C          OPERATION ----------- MARKER -------------------------- 'MK' 
	   CALL  MRK(MAXDIM) 
a420 1
        RETURN 
d422 5
a426 3
C       OPERATION ----------- TRANSFORMATION --------------------- 'AF' 
12      CALL OPFILEC(0,.TRUE.,FILNAM,LUN1,'O',ITYPE, 
     &               NSAM1,NROW1,NSLIC1, MAXIM1,'INPUT',.FALSE.,IRTFLG) 
d432 2
a433 1
     &             NSAM1,NROW1,NSLIC1,MAXIM2,'OUTPUT',.TRUE.,IRTFLG) 
a437 1
	GOTO 9000 
d439 6
a444 7
C       OPERATION -------- ORIENTATION OF PROJECTIONS ------------ 'OP' 
13	CALL POLQS(MAXDIM) 
	RETURN 
 
C       OPERATION -------- DILATION ------------------------------ 'DI' 
14	CALL  OPFILEC(0,.TRUE.,FILNAM,LUN1,'O',ITYPE, 
     &              NSAM,NROW,NSLICE, MAXIM1,'INPUT',.FALSE.,IRTFLG) 
d448 2
a449 1
     &                NSAM,NROW,NSLICE,MAXIM2,'OUTPUT',.FALSE.,IRTFLG) 
d455 4
a458 3
C       OPERATION -------- EROSION ------------------------------- 'ER' 
15	CALL OPFILEC(0,.TRUE.,FILNAM,LUN1,'O',ITYPE,NSAM,NROW,NSLICE, 
     &              MAXIM1,'INPUT',.FALSE.,IRTFLG) 
d463 2
a464 1
        CALL OPFILEC(LUN1,.TRUE.,FILNAM,LUN2,'U',ITYPE,NSAM,NROW,NSLICE, 
d483 2
a484 1
        GOTO 9000 
d486 4
a489 3
9000    CLOSE(LUN1) 
        CLOSE(LUN2) 
        CLOSE(LUN3) 
d491 2
a492 2
9911    RETURN 
        END 
@


1.73
log
@GPL_2010
@
text
@d25 1
a25 1
C 
d60 14
a73 7
        CHARACTER(LEN=MAXNAM)               :: FILNAM,FILNM1,FILNAMO 
        CHARACTER (LEN=1)                   :: CDUM,NULL 
	INTEGER,PARAMETER                   :: NFUNC=16 
        CHARACTER (LEN=2), DIMENSION(NFUNC) :: FUNC(NFUNC) 
	LOGICAL                             :: MIRROR 
        LOGICAL                             :: ASKPEAKS
 
a82 5

	LUN1   = 7 
	LUN2   = 8 
	LUN3   = 9 
	LUNDOC = 89
d136 1
a136 1
        CALL ROTQSS_DL(LUN1,LUN2,LUNDOC,IRTFLG)
@


1.72
log
@rdprmb parameters
@
text
@a26 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2009  Health Research Inc.                      *
d28 5
a32 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d34 1
a34 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d39 1
a39 1
C=* This program is distributed in the hope that it will be useful,    *
d41 1
a41 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a42 1
C=*                                                                    *
d44 1
a44 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.71
log
@ifdef MPI loc wrong
@
text
@d24 2
d28 1
a28 1
C=* Copyright (C) 1985-2008  Health Research Inc.                      *
d77 1
a77 7
#ifdef USE_MPI
        include 'mpif.h'
        icomm = MPI_COMM_WORLD
        call MPI_COMM_RANK(icomm, mypid, ierr)
#else
        mypid = -1
#endif
d265 1
a265 1
        CALL SETPRMB(BUF,LUN2,NSAM,IDUM,0.0,0.0,0.0,'U') 
d288 1
a288 1
        CALL  SETPRMB(BUF,LUN2,NSAM1,IDUM,0.0,0.0,0.0,'U') 
d389 1
a389 1
        CALL SETPRMB(BUF,LUN2,NSAM1,NROW1,0.0,0.0,0.0,'U') 
d403 1
a403 1
     &               NSAM1,NROW1,NSLIC1, MAXIM1,'INPUT1',.FALSE.,IRTFLG) 
d430 1
a430 1
     & 		   MAXIM1,'INPUT1',.FALSE.,IRTFLG) 
d623 1
a623 1
        CALL SETPRMB(BUF,LUN2,NSAM,IDUM,0.0,0.0,0.0,'U') 
a625 2

 
@


1.70
log
@obsolet or msg
@
text
@a73 1
        NULL   = CHAR(0)
d83 2
@


1.69
log
@bug
@
text
@d340 4
a343 2
           CALL APMASTER('F','ORM') 
           RETURN 
d347 1
@


1.68
log
@ormq & ornq --> orsh
@
text
@d303 2
a304 2
           IF (mypid .LE. 0) WRITE(NOUT,900) 
903        FORMAT(' OBSOLETE OPERATION, NEXT TIME PLEASE USE: <OR R>',/)
@


1.67
log
@OR op
@
text
@d22 2
a23 1
C
d67 1
d76 8
d303 10
a312 1
           CALL  ORMD 
d333 5
@


1.66
log
@merged or a and or am
@
text
@d25 1
a25 1
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d299 2
a300 2
		CALL ERRT(101,'OPERATION IS NOW: <AP A>',NE)
                RETURN
d308 2
a309 2
		CALL ERRT(101,'OPERATION IS NOW: <AP A>',NE)
                RETURN
d311 1
a311 1
           CALL ORACFMSK() 
a313 1
 
d335 1
@


1.65
log
@BPD & RTD
@
text
@d21 2
d298 5
a302 6
	   IF(FCHAR(5:5) .EQ. 'M')  THEN 
		MIRROR = .TRUE. 
	   ELSE 
	        MIRROR = .FALSE. 
	   ENDIF 
           CALL ORACFMSK(MIRROR) 
d304 1
a304 1
 
d306 6
a311 3
C          OPERATION ------------------------------------------- 'OR Q' 
	   MIRROR = (FCHAR(5:5) .EQ. 'M')    
           CALL ORACFMSKM(MIRROR) 
d314 1
@


1.64
log
@*** empty log message ***
@
text
@d20 1
d61 1
a61 1
	INTEGER,PARAMETER                   :: NFUNC=15 
d67 2
a68 1
     &            'MK', 'AF', 'OP', 'DI', 'ER'/ 
d83 2
a84 2
              GOTO (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15) 
     &              IFUNC 
d122 9
d496 104
@


1.63
log
@ added rotqss.f call
@
text
@d126 1
a126 1
     &        'INPUT FILE NAME OR TEMPLATE (E.G. STK@@****)',IRTFLG)
@


1.62
log
@unprinting chars removed
@
text
@d4 2
a5 2
C  UTIL3.F                                 LONG FILENAMES DEC 88 al 
C                                          MAHIEDDINE LADJADJ  4/23/93 
d7 13
a19 13
C                                          REWRITTEN al         1/15/98 
C                                          ROT CALL CHANGED al  8/02/00  
C                                          ADDED 'ER' al        2/16/01  
C                                          ADDED 'ER SK' al     4/23/01 
C                                          ADDED 'ER EDM' al    5/16/01 
C                                          ADDED 'RT 3DQ' al    4/10/01 
C                                          ADDED 'ER WA ' al    4/25/02  
C                                          OPFILEC        al    2/18/03  
C                                          'RT 3D' LUN closed   4/30/03 
C                                          MRQLI1 -> APMASTER   9/ 5/03 
C                                          MPI                 10/30/03 
C                                          REMOVED RCONV       11/24/03 
C 
d58 3
a60 2
        CHARACTER(LEN=MAXNAM)              :: FILNAM,FILNM1,FILNAMO 
	PARAMETER     (NFUNC=15) 
d68 2
d73 2
d121 1
a121 1
C       OPERATION -------- ROTATE -------------------------------- 'RT' 
d123 27
a149 5
C       OPEN INPUT FILE 
3       IF (FCHAR(4:5) .EQ. 'SQ')  MAXIM1 = 1  
	CALL OPFILEC(0,.TRUE.,FILNAM,LUN1,'O',ITYPE,NSAM,NROW,NSLICE, 
     & 		   MAXIM1,'INPUT',.FALSE.,IRTFLG) 
	IF (IRTFLG .NE. 0) GOTO 9000 
d162 1
a162 1
C       OPERATION -------- ROTATE 90, 180, 270 ----------------- 'RT 90' 
d204 4
a207 4
C       OPERATION -------- ROTATE ------------------------------- 'RT' 
C       OPERATION -------- ROTATE USE MIN AS BACK. -------------- 'RT M' 
C       OPERATION -------- ROTATE SPECIFY BACK ------------------ 'RT B' 
C       OPERATION -------- ROTATE AROUND ARBITRARY CENTER  ------ 'RT C' 
d284 1
a284 1
C          OPERATION ------------------------------------------ 'OR A' 
d414 1
a414 1
C          OPERATION ----------- MARKER --------------------------- 'MK' 
@


1.61
log
@GPL License fixed
@
text
@d1 1
a1 1

d3 18
a20 18
C
C  UTIL3.F                                 LONG FILENAMES DEC 88 al
C                                          MAHIEDDINE LADJADJ  4/23/93
C                                          JING SU              8/31/93
C                                          REWRITTEN al         1/15/98
C                                          ROT CALL CHANGED al  8/02/00 
C                                          ADDED 'ER' al        2/16/01 
C                                          ADDED 'ER SK' al     4/23/01
C                                          ADDED 'ER EDM' al    5/16/01
C                                          ADDED 'RT 3DQ' al    4/10/01
C                                          ADDED 'ER WA ' al    4/25/02 
C                                          OPFILEC        al    2/18/03 
C                                          'RT 3D' LUN closed   4/30/03
C                                          MRQLI1 -> APMASTER   9/ 5/03
C                                          MPI                 10/30/03
C                                          REMOVED RCONV       11/24/03
C
C **********************************************************************
d44 414
a457 414
C **********************************************************************
C
C  UTIL3(MAXDIM)
C
C23456789 123456789 123456789 123456789 123456789 123456789 123456789 12
C--*********************************************************************

        SUBROUTINE UTIL3(MAXDIM)

	INCLUDE 'CMBLOCK.INC'
        INCLUDE 'CMLIMIT.INC'

	COMMON        BUF(1)

        CHARACTER(LEN=MAXNAM)              :: FILNAM,FILNM1,FILNAMO
	PARAMETER     (NFUNC=15)
        CHARACTER (LEN=2), DIMENSION(NFUNC) :: FUNC(NFUNC)
	LOGICAL                             :: MIRROR

	DATA FUNC/'ED', 'RC', 'RT', 'BC', 'CT',
     &            'OR', 'FC', 'SL', 'RO', 'OD',
     &            'MK', 'AF', 'OP', 'DI', 'ER'/

	LUN1   = 7
	LUN2   = 8
	LUN3   = 9
        IRTFLG = 0
        MAXIM1 = 0
        MAXIM2 = 0

        DO  IFUNC = 1, NFUNC
           IF (FCHAR(1:2) .EQ. FUNC(IFUNC)) THEN
              GOTO (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15)
     &              IFUNC
           ENDIF
        ENDDO
        RETURN

C	OPERATION ------------- EDGE ----------------------------- 'ED'

1	CALL OPFILEC(0,.TRUE.,FILNAM,LUN1,'O',ITYPE,NSAM,NROW,NSLICE,
     & 		   MAXIM1,'INPUT',.FALSE.,IRTFLG)
	IF (IRTFLG .NE. 0) GOTO 9000

        IF (NSLICE .GT. 1) THEN
C          DOES NOT WORK ON 3-D FILES
           CALL ERRT(101,'SORRY DOES NOT WORK ON 3-D FILES',NE)
           GOTO 9000
        ENDIF

C       OPEN AN OUTPUT FILE WITH DIMENSIONS BASED ON FIRST INPUT FILE
        CALL OPFILEC(LUN1,.TRUE.,FILNAM,LUN2,'U',ITYPE,NSAM,NROW,NSLICE,
     &  	   MAXIM2,'OUTPUT',.TRUE.,IRTFLG)
	IF (IRTFLG .NE. 0) GOTO 9000

        CALL EDGE(LUN1,LUN2,LUN3,NSAM,NROW)
        GOTO 9000

C       OPERATION -------- REAL CONVOLUTION ---------------------- 'RC'

 2      CALL OPFILEC(0,.TRUE.,FILNAM,LUN1,'O',ITYPE,NSAM,NROW,NSLICE,
     &                   MAXIM1,'INPUT',.FALSE.,IRTFLG)
        IF (IRTFLG .NE. 0) GOTO 9000

C       OPEN AN OUTPUT FILE WITH DIMENSIONS BASED ON FIRST INPUT FILE
        CALL OPFILEC(LUN1,.TRUE.,FILNAMO,LUN2,'U',ITYPE,NSAM,NROW,
     &           NSLICE,MAXIM2,'OUTPUT',.TRUE.,IRTFLG)
        IF (IRTFLG .NE. 0) GOTO 9000

        CALL RCONV(LUN1,LUN2,LUN3,NSAM,NROW,NSLICE,1,MAXDIM)
        GOTO 9000

C       OPERATION -------- ROTATE -------------------------------- 'RT'
                   
C       OPEN INPUT FILE
3       IF (FCHAR(4:5) .EQ. 'SQ')  MAXIM1 = 1 
	CALL OPFILEC(0,.TRUE.,FILNAM,LUN1,'O',ITYPE,NSAM,NROW,NSLICE,
     & 		   MAXIM1,'INPUT',.FALSE.,IRTFLG)
	IF (IRTFLG .NE. 0) GOTO 9000

        IF (FCHAR(4:4) .EQ. '3' .AND. ITYPE .NE. 3)  THEN
            CALL ERRT(101,'NOT A VOLUME',NE)
            GOTO 9000 
        ENDIF

        FMAX1  = FMAX
        FMIN1  = FMIN
        IMAMI1 = IMAMI
C       RECORD INPUT IMAGE  AVERAGE IN CASE NEEDED FOR BACKGROUND
        AV1    = AV

C       OPERATION -------- ROTATE 90, 180, 270 ----------------- 'RT 90'
C       SPECIAL ARRANGEMENT FOR 'RT 90' (DO NOT KNOW DIMENSIONS YET)
        IF (FCHAR(4:5) .EQ. '90') THEN
C          90, 180, OR 270 DEGREE ROTATION OF VOLUME
           CALL REFORM0(LUN1,LUN2,NSAM,NROW,NSLICE,MAXDIM,IRTFLG)
           GOTO 9000
        END IF
                     
C       OPEN OUTPUT FILE WITH SAME DIMENSIONS AS INPUT FILE
        MAXIM2 = 0
        IF (FCHAR(4:5) .EQ. 'SQ' .AND. MAXIM1 .GE. 0)  MAXIM2 = 1 
        CALL OPFILEC(LUN1,.TRUE.,FILNAM,LUN2,'U',ITYPE,NSAM,NROW,NSLICE,
     &              MAXIM2,'OUTPUT',.FALSE.,IRTFLG)
        IF (IRTFLG .NE. 0) RETURN

        IF (FCHAR(4:5) .EQ. '3D' .OR. FCHAR(4:5) .EQ. '3A')THEN
C          OPERATION -------- ROTATE 3D 3A -------------------- 'RT 3??'
           CALL  ROTAS3(LUN1,LUN2,NSAM,NROW,NSLICE,FCHAR(4:6))
           GOTO 9000

	ELSEIF (FCHAR(4:5) .EQ. '3L') THEN
C          OPERATION -------- ROTATE 3D AROUND LINE ------------ 'RT 3L'
           CALL  ROTAL3(LUN1,LUN2,NSAM,NROW,NSLICE,FCHAR(4:6))
           GOTO 9000
        
        ELSEIF (FCHAR(4:4) .EQ. '3') THEN
C          OPERATION -------- ROTATE 3 ------------------------- 'RT 3'
320        IF (IMAMI1 .NE. 1)
     &        CALL NORM3(LUN1,NSAM,NROW,NSLICE,FMAX1,FMIN1,AV1)
           IFANGL = 0
           IFSHIF = 0
           CALL ROT3(LUN1,LUN2,NSAM,NROW,NSLICE,AV1,
     &           IFANGL,ALPH,BETA,GAMA,IFSHIF,SHX,SHY,SHZ)
           GOTO 9000

        ELSEIF (FCHAR(4:5) .EQ. 'SQ') THEN
C          OPERATION -------- ROTATE & SCALE ------------------ 'RT SQ'
           CALL ROTQS(MAXDIM,LUN1,LUN2,LUN3,FILNAM,FILNAMO,
     &                NSAM,NROW,NSLICE,MAXIM1,IRTFLG)
           GOTO 9000
        ENDIF

C       OPERATION -------- ROTATE ------------------------------- 'RT'
C       OPERATION -------- ROTATE USE MIN AS BACK. -------------- 'RT M'
C       OPERATION -------- ROTATE SPECIFY BACK ------------------ 'RT B'
C       OPERATION -------- ROTATE AROUND ARBITRARY CENTER  ------ 'RT C'

        CALL RDPRM(THETA,NOT_USED,'ROTATION ANGLE')
        TH = THETA * DATAN(1.0D0) / 45.0D0
        IF (FCHAR(4:4) .NE. 'B') THEN
C          BACKGROUND IS INPUT IMAGE AVERAGE,
C          EXCEPT FOR "RT M" WHERE BACKGROUND IS MINIMUM
           IF (IMAMI1 .NE. 1)
     &        CALL NORM3(LUN1,NSAM,NROW,NSLICE,FMAX1,FMIN1,AV1)
           IF (FCHAR(4:4) .EQ. 'M') AV1 = FMIN1
        ELSE
C          FOR "RT B" MUST SUPPLY BACKGROUND
           CALL RDPRM(AV1,NOT_USED,'ENTER BACKGROUND')
        END IF

C       SET ROTATION CENTER
        SHX = 0.0
        SHY = 0.0
        IF (FCHAR(4:4) .EQ. 'C') THEN
C          ROTATE AROUND AN ARBITRARY CENTER 
           IF (NSAM*(1+NROW) .GT. MAXDIM) THEN
              CALL ERRT (101,
     &           'VARIABLE CENTER NOT AVAILABLE FOR THIS SIZE IMAGE',NE)
              GOTO 9000
           ENDIF
           CALL RDPRM(SHX,NOT_USED,'X-SHIFT')
           CALL RDPRM(SHY,NOT_USED,'Y-SHIFT')
        ENDIF

C       CAN DO IMAGE OR VOLUME
        DO  ISLICE = 1, NSLICE
C           ROTATE SLICE IN-CORE
            NROWS = (ISLICE-1)*NROW+1
            NROWE = NROWS + NROW - 1
            CALL ROT32(LUN1,LUN2,NSAM,NROWS,NROWE,1,TH,AV1,SHX,SHY)
        END DO

C       SET HEADER FOR ALTERATIONS IN IMAGE DUE TO OPERATIONS
        CALL SETPRMB(BUF,LUN2,NSAM,IDUM,0.0,0.0,0.0,'U')
        GOTO 9000
            
C       OPERATION ------------------------------------------------ 'BC'

4	CALL OPFILEC(0,.TRUE.,FILNAM,LUN1,'O',ITYPE,NSAM1,NROW1,NSLIC1,
     & 		   MAXIM1,'INPUT',.FALSE.,IRTFLG)
	IF (IRTFLG .NE. 0) GOTO 9000

        IMAMI1 = IMAMI
        AV1    = AV

C       OPEN AN OUTPUT FILE WITH DIMENSIONS SAME AS INPUT FILE
        CALL OPFILEC(LUN1,.TRUE.,FILNAM,LUN2,'U',ITYPE,
     &               NSAM1,NROW1,NSLIC1, MAXIM2,'OUTPUT',.TRUE.,IRTFLG)
	IF (IRTFLG .NE. 0) GOTO 9000

C       BOX CONVOLUTION
        IMAMI = IMAMI1
        AV    = AV1
        CALL BOXX(LUN1,LUN2,NSAM1,NROW1,NSLIC1,MAXDIM)

C       SET HEADER FOR ALTERATIONS IN IMAGE DUE TO OPERATION
        CALL  SETPRMB(BUF,LUN2,NSAM1,IDUM,0.0,0.0,0.0,'U')
        GOTO 9000
                                
C       OPERATION ----------------- CONCATENATE -------------------'CT'

5       WRITE(NOUT,*) ' OPERATION "CT" NO LONGER SUPPORTED'
        GOTO 9000

C       OPERATION -------- ORIENTATIONAL SEARCH ---------------- 'OR'
6       IF (FCHAR(4:4) .EQ. '2') THEN
C          OPERATION -------- ORIENTATIONAL SEARCH ------------- 'OR 2'
C          OPERATION -------- ORIENTATIONAL SEARCH ------------- 'OR 2M'
           CALL  ORMD
           RETURN

        ELSEIF (FCHAR(4:4) .EQ. 'A')  THEN
C          OPERATION ------------------------------------------ 'OR A'
	   IF(FCHAR(5:5) .EQ. 'M')  THEN
		MIRROR = .TRUE.
	   ELSE
	        MIRROR = .FALSE.
	   ENDIF
           CALL ORACFMSK(MIRROR)
           RETURN

        ELSEIF (FCHAR(4:4) .EQ. 'Q')  THEN
C          OPERATION ------------------------------------------- 'OR Q'
	   MIRROR = (FCHAR(5:5) .EQ. 'M')   
           CALL ORACFMSKM(MIRROR)
           RETURN

        ELSEIF (FCHAR(4:5) .EQ. 'MQ')  THEN
C          OPERATION ------------------------------------------- 'OR MQ'
           CALL APMASTER('F','ORM')
           RETURN

        ELSEIF (FCHAR(4:5) .EQ. 'NQ')  THEN
C          OPERATION  ------------------------------------------ 'OR NQ'
           CALL APMASTER('F','ORN')
           RETURN

        ELSEIF (FCHAR(4:5) .EQ. '3Q')  THEN
C          OPERATION ------------------------------------------ 'OR 3Q'
           CALL QALI('Q')
           GOTO 9911

        ELSEIF (FCHAR(4:5) .EQ. '3A')  THEN
C          OPERATION ------------------------------------------ 'OR 3A'
           CALL QALI('A')
           GOTO 9911
        END IF
        GOTO 9911

C       OPERATION ------------------------------------------------ 'FC'

7	CALL OPFILEC(0,.TRUE.,FILNAM,LUN1,'O',ITYPE,NSAM1,NROW1,NSLIC1,
     & 		   MAXIM1,'INPUT',.FALSE.,IRTFLG)
	IF (IRTFLG .NE. 0) GOTO 9000

        IF (NSLIC1 .NE. 1) THEN
C          DOES NOT WORK ON 3-D FILES
           CALL ERRT(2,'UTIL3',NE)
           GOTO 9000
        END IF

        FMAX1  = FMAX
        FMIN1  = FMIN
        IMAMI1 = IMAMI

C       OPEN AN OUTPUT FILE WITH SAME DIMENSIONS AS INPUT FILE
        CALL OPFILEC(LUN1,.TRUE.,FILNAM,LUN2,'U',ITYPE,
     &               NSAM1,NROW1,NSLIC1, MAXIM2,'OUTPUT',.TRUE.,IRTFLG)
	IF (IRTFLG .NE. 0) GOTO 9000

C       FILE CONTOUR
        FMAX  = FMAX1
        FMIN  = FMIN1
        IMAMI = IMAMI1
        CALL CNTRFL(LUN1,LUN2,NSAM1,NROW1,NSLIC1,MAXDIM)

C       SOME OPTIONS REQUIRE RESCALING (AL 28 JAN 92)
        CALL SETPRMB(BUF,LUN2,NSAM1,NROW1,0.0,0.0,0.0,'U')
        GOTO 9000

C       OPERATION ----------------------- SLICE -------------------'SL'

8       CALL SLICE(MAXDIM,LUN1,LUN2,LUN3)
        GOTO 9000
     
C       OPERATION --------- ROTATIONAL AVERAGE --------------------'RO'


9       IF (FCHAR(4:4) .EQ. 'I') THEN

	   CALL OPFILEC(0,.TRUE.,FILNAM,LUN1,'O',ITYPE,
     &               NSAM1,NROW1,NSLIC1, MAXIM1,'INPUT1',.FALSE.,IRTFLG)
	   IF (IRTFLG .NE. 0) GOTO 9000

           IF (NSLIC1 .NE. 1) THEN
C             OPERATION DOES NOT WORK ON 3-D FILES
              CALL ERRT(2,'UTIL3',NE)
              GOTO 9000
	   ENDIF

C          OPEN AN OUTPUT FILE 
	   IFORM = 1
           CALL OPFILEC(LUN1,.TRUE.,FILNAM,LUN2,'U',ITYPE,
     &                 NSAM1,NROW1,NSLIC1,MAXIM2,'OUTPUT',.TRUE.,IRTFLG)
	   IF (IRTFLG .NE. 0) GOTO 9000

C          ROTATIONAL AVERAGING
           CALL RADAVI(LUN1,LUN2,NSAM1,NROW1,MAXDIM)
        ELSE
           CALL RADAV(LUN1,LUN2)
        ENDIF

        GOTO 9000

C       OPERATION ----------- OPTICAL DENSITY -------------------- 'OD'
C       OD CONVERSION

10	CALL OPFILEC(0,.TRUE.,FILNAM,LUN1,'O',ITYPE,NSAM1,NROW1,NSLIC1,
     & 		   MAXIM1,'INPUT1',.FALSE.,IRTFLG)
	IF (IRTFLG .NE. 0) GOTO 9000

        IF (NSLIC1 .NE. 1) THEN
C          DOES NOT WORK ON 3-D FILES
           CALL ERRT(2,'UTIL3',NE)
           GOTO 9000
        END IF

C       OPEN AN OUTPUT FILE WITH DIMENSIONS SAME AS INPUT FILE
        CALL OPFILEC(LUN1,.TRUE.,FILNAM,LUN2,'U',ITYPE,
     &               NSAM1,NROW1,NSLIC1, MAXIM2,'OUTPUT',.TRUE.,IRTFLG)
	IF (IRTFLG .NE. 0) GOTO 9000

        CALL OD(LUN1,LUN2,LUN3,NSAM1,NROW1,MAXDIM)
        GOTO 9000

11      IF (FCHAR(4:5) .EQ. '3')  THEN
C          OPERATION ----------- MARKER ------------------------ 'MK 3'
           CALL MRK3(MAXDIM)
        ELSEIF (FCHAR(4:6) .EQ. 'RT')  THEN
C          OPERATION ----------- MARKER ----------------------- 'MK RT'
           CALL MRRT(MAXDIM)
	ELSE
C          OPERATION ----------- MARKER --------------------------- 'MK'
	   CALL  MRK(MAXDIM)
	ENDIF
        RETURN

C       OPERATION ----------- TRANSFORMATION --------------------- 'AF'
12      CALL OPFILEC(0,.TRUE.,FILNAM,LUN1,'O',ITYPE,
     &               NSAM1,NROW1,NSLIC1, MAXIM1,'INPUT',.FALSE.,IRTFLG)
        IF (IRTFLG .NE. 0) GOTO 9000

C       OPEN AN OUTPUT FILE WITH SAME DIMENSIONS AS INPUT FILE
        IF (MAXIM1 .GE. 0)  MAXIM2 = 1 
        CALL OPFILEC(LUN1,.TRUE.,FILNAMO,LUN2,'U',ITYPE,
     &             NSAM1,NROW1,NSLIC1,MAXIM2,'OUTPUT',.TRUE.,IRTFLG)
        IF (IRTFLG .NE. 0) GOTO 9000

	CALL AF(MAXDIM,LUN1,LUN2,LUN3,FILNAM,FILNAMO,
     &                 NSAM1,NROW1,NSLIC1,MAXIM1,IRTFLG)
	GOTO 9000

C       OPERATION -------- ORIENTATION OF PROJECTIONS ------------ 'OP'
13	CALL POLQS(MAXDIM)
	RETURN

C       OPERATION -------- DILATION ------------------------------ 'DI'
14	CALL  OPFILEC(0,.TRUE.,FILNAM,LUN1,'O',ITYPE,
     &              NSAM,NROW,NSLICE, MAXIM1,'INPUT',.FALSE.,IRTFLG)
        IF (IRTFLG .NE. 0) RETURN

        CALL  OPFILEC(LUN1,.TRUE.,FILNAM,LUN2,'U',ITYPE,
     &                NSAM,NROW,NSLICE,MAXIM2,'OUTPUT',.FALSE.,IRTFLG)
        IF (IRTFLG .NE. 0) GOTO 9000

	CALL  DILATION(LUN1,LUN2,NSAM,NROW,NSLICE)
	GOTO 9000

C       OPERATION -------- EROSION ------------------------------- 'ER'
15	CALL OPFILEC(0,.TRUE.,FILNAM,LUN1,'O',ITYPE,NSAM,NROW,NSLICE,
     &              MAXIM1,'INPUT',.FALSE.,IRTFLG)
        IF (IRTFLG .NE. 0) RETURN
        FMIN1 = FMIN
        FMAX1 = FMAX

        CALL OPFILEC(LUN1,.TRUE.,FILNAM,LUN2,'U',ITYPE,NSAM,NROW,NSLICE,
     &              MAXIM2,'OUTPUT',.FALSE.,IRTFLG)
        IF (IRTFLG .NE. 0) GOTO 9000

        IF (FCHAR(4:5) .EQ. 'SK') THEN
C          BINARY SKELETON
	   CALL SKELETON(LUN1,LUN2,NSAM,NROW,NSLICE)

        ELSEIF (FCHAR(4:4) .EQ. 'E') THEN
C          EUCLIDEAN DISTANCE MAP
	   CALL EDM(LUN1,LUN2,NSAM,NROW,NSLICE,FMIN1,FMAX1)

        ELSEIF (FCHAR(4:4) .EQ. 'W') THEN
C          WATERSHED  MAP
	   CALL WATERSHD(LUN1,LUN2,NSAM,NROW,NSLICE)

        ELSE
	   CALL EROSION(LUN1,LUN2,NSAM,NROW,NSLICE)
        ENDIF
        GOTO 9000

9000    CLOSE(LUN1)
        CLOSE(LUN2)
        CLOSE(LUN3)

9911    RETURN
        END

@


1.60
log
@HRI GPL License used
@
text
@a2 1
C++************************************************************************
a20 1
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.    AUTHOR: J.FRANK       *
d24 1
a24 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a43 6

C * COPYRIGHT (C)1985, 2001. HEALTH RESEARCH INCORPORATED (HRI),       *
C * ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
C * THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO HRI AND ARE NOT   *
C * TO BE DISCLOSED TO OTHERS OR USED FOR PURPOSES OTHER THAN INTENDED *
C * WITHOUT WRITTEN APPROVAL OF HRI.                                   *
@


1.59
log
@pp's determ. changes
@
text
@d2 1
d23 24
@


1.58
log
@REPLACED RCONV CALL
@
text
@d1 440
a440 440

C++************************************************************************
C
C  UTIL3.F                                 LONG FILENAMES DEC 88 al
C                                          MAHIEDDINE LADJADJ  4/23/93
C                                          JING SU              8/31/93
C                                          REWRITTEN al         1/15/98
C                                          ROT CALL CHANGED al  8/02/00 
C                                          ADDED 'ER' al        2/16/01 
C                                          ADDED 'ER SK' al     4/23/01
C                                          ADDED 'ER EDM' al    5/16/01
C                                          ADDED 'RT 3DQ' al    4/10/01
C                                          ADDED 'ER WA ' al    4/25/02 
C                                          OPFILEC        al    2/18/03 
C                                          'RT 3D' LUN closed   4/30/03
C                                          MRQLI1 -> APMASTER   9/ 5/03
C                                          MPI                 10/30/03
C                                          REMOVED RCONV       11/24/03
C
C **********************************************************************
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.    AUTHOR: J.FRANK       *
C * COPYRIGHT (C)1985, 2001. HEALTH RESEARCH INCORPORATED (HRI),       *
C * ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
C * THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO HRI AND ARE NOT   *
C * TO BE DISCLOSED TO OTHERS OR USED FOR PURPOSES OTHER THAN INTENDED *
C * WITHOUT WRITTEN APPROVAL OF HRI.                                   *
C **********************************************************************
C
C  UTIL3(MAXDIM)
C
C23456789 123456789 123456789 123456789 123456789 123456789 123456789 12
C--*********************************************************************

        SUBROUTINE UTIL3(MAXDIM)

	INCLUDE 'CMBLOCK.INC'
        INCLUDE 'CMLIMIT.INC'

	COMMON        BUF(1)

        CHARACTER(LEN=MAXNAM)              :: FILNAM,FILNM1,FILNAMO
	PARAMETER     (NFUNC=15)
        CHARACTER (LEN=2), DIMENSION(NFUNC) :: FUNC(NFUNC)
	LOGICAL                             :: MIRROR

	DATA FUNC/'ED', 'RC', 'RT', 'BC', 'CT',
     &            'OR', 'FC', 'SL', 'RO', 'OD',
     &            'MK', 'AF', 'OP', 'DI', 'ER'/

	LUN1   = 7
	LUN2   = 8
	LUN3   = 9
        IRTFLG = 0
        MAXIM1 = 0
        MAXIM2 = 0

        DO  IFUNC = 1, NFUNC
           IF (FCHAR(1:2) .EQ. FUNC(IFUNC)) THEN
              GOTO (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15)
     &              IFUNC
           ENDIF
        ENDDO
        RETURN

C	OPERATION ------------- EDGE ----------------------------- 'ED'

1	CALL OPFILEC(0,.TRUE.,FILNAM,LUN1,'O',ITYPE,NSAM,NROW,NSLICE,
     & 		   MAXIM1,'INPUT',.FALSE.,IRTFLG)
	IF (IRTFLG .NE. 0) GOTO 9000

        IF (NSLICE .GT. 1) THEN
C          DOES NOT WORK ON 3-D FILES
           CALL ERRT(101,'SORRY DOES NOT WORK ON 3-D FILES',NE)
           GOTO 9000
        ENDIF

C       OPEN AN OUTPUT FILE WITH DIMENSIONS BASED ON FIRST INPUT FILE
        CALL OPFILEC(LUN1,.TRUE.,FILNAM,LUN2,'U',ITYPE,NSAM,NROW,NSLICE,
     &  	   MAXIM2,'OUTPUT',.TRUE.,IRTFLG)
	IF (IRTFLG .NE. 0) GOTO 9000

        CALL EDGE(LUN1,LUN2,LUN3,NSAM,NROW)
        GOTO 9000

C       OPERATION -------- REAL CONVOLUTION ---------------------- 'RC'

 2      CALL OPFILEC(0,.TRUE.,FILNAM,LUN1,'O',ITYPE,NSAM,NROW,NSLICE,
     &                   MAXIM1,'INPUT',.FALSE.,IRTFLG)
        IF (IRTFLG .NE. 0) GOTO 9000

C       OPEN AN OUTPUT FILE WITH DIMENSIONS BASED ON FIRST INPUT FILE
        CALL OPFILEC(LUN1,.TRUE.,FILNAMO,LUN2,'U',ITYPE,NSAM,NROW,
     &           NSLICE,MAXIM2,'OUTPUT',.TRUE.,IRTFLG)
        IF (IRTFLG .NE. 0) GOTO 9000

        CALL RCONV(LUN1,LUN2,LUN3,NSAM,NROW,NSLICE,1,MAXDIM)
        GOTO 9000

C       OPERATION -------- ROTATE -------------------------------- 'RT'
                   
C       OPEN INPUT FILE
3       IF (FCHAR(4:5) .EQ. 'SQ')  MAXIM1 = 1 
	CALL OPFILEC(0,.TRUE.,FILNAM,LUN1,'O',ITYPE,NSAM,NROW,NSLICE,
     & 		   MAXIM1,'INPUT',.FALSE.,IRTFLG)
	IF (IRTFLG .NE. 0) GOTO 9000

        IF (FCHAR(4:4) .EQ. '3' .AND. ITYPE .NE. 3)  THEN
            CALL ERRT(101,'NOT A VOLUME',NE)
            GOTO 9000 
        ENDIF

        FMAX1  = FMAX
        FMIN1  = FMIN
        IMAMI1 = IMAMI
C       RECORD INPUT IMAGE  AVERAGE IN CASE NEEDED FOR BACKGROUND
        AV1    = AV

C       OPERATION -------- ROTATE 90, 180, 270 ----------------- 'RT 90'
C       SPECIAL ARRANGEMENT FOR 'RT 90' (DO NOT KNOW DIMENSIONS YET)
        IF (FCHAR(4:5) .EQ. '90') THEN
C          90, 180, OR 270 DEGREE ROTATION OF VOLUME
           CALL REFORM0(LUN1,LUN2,NSAM,NROW,NSLICE,MAXDIM,IRTFLG)
           GOTO 9000
        END IF
                     
C       OPEN OUTPUT FILE WITH SAME DIMENSIONS AS INPUT FILE
        MAXIM2 = 0
        IF (FCHAR(4:5) .EQ. 'SQ' .AND. MAXIM1 .GE. 0)  MAXIM2 = 1 
        CALL OPFILEC(LUN1,.TRUE.,FILNAM,LUN2,'U',ITYPE,NSAM,NROW,NSLICE,
     &              MAXIM2,'OUTPUT',.FALSE.,IRTFLG)
        IF (IRTFLG .NE. 0) RETURN

        IF (FCHAR(4:5) .EQ. '3D' .OR. FCHAR(4:5) .EQ. '3A')THEN
C          OPERATION -------- ROTATE 3D 3A -------------------- 'RT 3??'
           CALL  ROTAS3(LUN1,LUN2,NSAM,NROW,NSLICE,FCHAR(4:6))
           GOTO 9000

	ELSEIF (FCHAR(4:5) .EQ. '3L') THEN
C          OPERATION -------- ROTATE 3D AROUND LINE ------------ 'RT 3L'
           CALL  ROTAL3(LUN1,LUN2,NSAM,NROW,NSLICE,FCHAR(4:6))
           GOTO 9000
        
        ELSEIF (FCHAR(4:4) .EQ. '3') THEN
C          OPERATION -------- ROTATE 3 ------------------------- 'RT 3'
320        IF (IMAMI1 .NE. 1)
     &        CALL NORM3(LUN1,NSAM,NROW,NSLICE,FMAX1,FMIN1,AV1)
           IFANGL = 0
           IFSHIF = 0
           CALL ROT3(LUN1,LUN2,NSAM,NROW,NSLICE,AV1,
     &           IFANGL,ALPH,BETA,GAMA,IFSHIF,SHX,SHY,SHZ)
           GOTO 9000

        ELSEIF (FCHAR(4:5) .EQ. 'SQ') THEN
C          OPERATION -------- ROTATE & SCALE ------------------ 'RT SQ'
           CALL ROTQS(MAXDIM,LUN1,LUN2,LUN3,FILNAM,FILNAMO,
     &                NSAM,NROW,NSLICE,MAXIM1,IRTFLG)
           GOTO 9000
        ENDIF

C       OPERATION -------- ROTATE ------------------------------- 'RT'
C       OPERATION -------- ROTATE USE MIN AS BACK. -------------- 'RT M'
C       OPERATION -------- ROTATE SPECIFY BACK ------------------ 'RT B'
C       OPERATION -------- ROTATE AROUND ARBITRARY CENTER  ------ 'RT C'

        CALL RDPRM(THETA,NOT_USED,'ROTATION ANGLE')
        TH = THETA * DATAN(1.0D0) / 45.0D0
        IF (FCHAR(4:4) .NE. 'B') THEN
C          BACKGROUND IS INPUT IMAGE AVERAGE,
C          EXCEPT FOR "RT M" WHERE BACKGROUND IS MINIMUM
           IF (IMAMI1 .NE. 1)
     &        CALL NORM3(LUN1,NSAM,NROW,NSLICE,FMAX1,FMIN1,AV1)
           IF (FCHAR(4:4) .EQ. 'M') AV1 = FMIN1
        ELSE
C          FOR "RT B" MUST SUPPLY BACKGROUND
           CALL RDPRM(AV1,NOT_USED,'ENTER BACKGROUND')
        END IF

C       SET ROTATION CENTER
        SHX = 0.0
        SHY = 0.0
        IF (FCHAR(4:4) .EQ. 'C') THEN
C          ROTATE AROUND AN ARBITRARY CENTER 
           IF (NSAM*(1+NROW) .GT. MAXDIM) THEN
              CALL ERRT (101,
     &           'VARIABLE CENTER NOT AVAILABLE FOR THIS SIZE IMAGE',NE)
              GOTO 9000
           ENDIF
           CALL RDPRM(SHX,NOT_USED,'X-SHIFT')
           CALL RDPRM(SHY,NOT_USED,'Y-SHIFT')
        ENDIF

C       CAN DO IMAGE OR VOLUME
        DO  ISLICE = 1, NSLICE
C           ROTATE SLICE IN-CORE
            NROWS = (ISLICE-1)*NROW+1
            NROWE = NROWS + NROW - 1
            CALL ROT32(LUN1,LUN2,NSAM,NROWS,NROWE,1,TH,AV1,SHX,SHY)
        END DO

C       SET HEADER FOR ALTERATIONS IN IMAGE DUE TO OPERATIONS
        CALL SETPRMB(BUF,LUN2,NSAM,IDUM,0.0,0.0,0.0,'U')
        GOTO 9000
            
C       OPERATION ------------------------------------------------ 'BC'

4	CALL OPFILEC(0,.TRUE.,FILNAM,LUN1,'O',ITYPE,NSAM1,NROW1,NSLIC1,
     & 		   MAXIM1,'INPUT',.FALSE.,IRTFLG)
	IF (IRTFLG .NE. 0) GOTO 9000

        IMAMI1 = IMAMI
        AV1    = AV

C       OPEN AN OUTPUT FILE WITH DIMENSIONS SAME AS INPUT FILE
        CALL OPFILEC(LUN1,.TRUE.,FILNAM,LUN2,'U',ITYPE,
     &               NSAM1,NROW1,NSLIC1, MAXIM2,'OUTPUT',.TRUE.,IRTFLG)
	IF (IRTFLG .NE. 0) GOTO 9000

C       BOX CONVOLUTION
        IMAMI = IMAMI1
        AV    = AV1
        CALL BOXX(LUN1,LUN2,NSAM1,NROW1,NSLIC1,MAXDIM)

C       SET HEADER FOR ALTERATIONS IN IMAGE DUE TO OPERATION
        CALL  SETPRMB(BUF,LUN2,NSAM1,IDUM,0.0,0.0,0.0,'U')
        GOTO 9000
                                
C       OPERATION ----------------- CONCATENATE -------------------'CT'

5       WRITE(NOUT,*) ' OPERATION "CT" NO LONGER SUPPORTED'
        GOTO 9000

C       OPERATION -------- ORIENTATIONAL SEARCH ---------------- 'OR'
6       IF (FCHAR(4:4) .EQ. '2') THEN
C          OPERATION -------- ORIENTATIONAL SEARCH ------------- 'OR 2'
C          OPERATION -------- ORIENTATIONAL SEARCH ------------- 'OR 2M'
           CALL  ORMD
           RETURN

        ELSEIF (FCHAR(4:4) .EQ. 'A')  THEN
C          OPERATION ------------------------------------------ 'OR A'
	   IF(FCHAR(5:5) .EQ. 'M')  THEN
		MIRROR = .TRUE.
	   ELSE
	        MIRROR = .FALSE.
	   ENDIF
           CALL ORACFMSK(MIRROR)
           RETURN

        ELSEIF (FCHAR(4:4) .EQ. 'Q')  THEN
C          OPERATION ------------------------------------------- 'OR Q'
	   MIRROR = (FCHAR(5:5) .EQ. 'M')   
           CALL ORACFMSKM(MIRROR)
           RETURN

        ELSEIF (FCHAR(4:5) .EQ. 'MQ')  THEN
C          OPERATION ------------------------------------------- 'OR MQ'
           CALL APMASTER('F','ORM')
           RETURN

        ELSEIF (FCHAR(4:5) .EQ. 'NQ')  THEN
C          OPERATION  ------------------------------------------ 'OR NQ'
           CALL APMASTER('F','ORN')
           RETURN

        ELSEIF (FCHAR(4:5) .EQ. '3Q')  THEN
C          OPERATION ------------------------------------------ 'OR 3Q'
           CALL QALI('Q')
           GOTO 9911

        ELSEIF (FCHAR(4:5) .EQ. '3A')  THEN
C          OPERATION ------------------------------------------ 'OR 3A'
           CALL QALI('A')
           GOTO 9911
        END IF
        GOTO 9911

C       OPERATION ------------------------------------------------ 'FC'

7	CALL OPFILEC(0,.TRUE.,FILNAM,LUN1,'O',ITYPE,NSAM1,NROW1,NSLIC1,
     & 		   MAXIM1,'INPUT',.FALSE.,IRTFLG)
	IF (IRTFLG .NE. 0) GOTO 9000

        IF (NSLIC1 .NE. 1) THEN
C          DOES NOT WORK ON 3-D FILES
           CALL ERRT(2,'UTIL3',NE)
           GOTO 9000
        END IF

        FMAX1  = FMAX
        FMIN1  = FMIN
        IMAMI1 = IMAMI

C       OPEN AN OUTPUT FILE WITH SAME DIMENSIONS AS INPUT FILE
        CALL OPFILEC(LUN1,.TRUE.,FILNAM,LUN2,'U',ITYPE,
     &               NSAM1,NROW1,NSLIC1, MAXIM2,'OUTPUT',.TRUE.,IRTFLG)
	IF (IRTFLG .NE. 0) GOTO 9000

C       FILE CONTOUR
        FMAX  = FMAX1
        FMIN  = FMIN1
        IMAMI = IMAMI1
        CALL CNTRFL(LUN1,LUN2,NSAM1,NROW1,NSLIC1,MAXDIM)

C       SOME OPTIONS REQUIRE RESCALING (AL 28 JAN 92)
        CALL SETPRMB(BUF,LUN2,NSAM1,NROW1,0.0,0.0,0.0,'U')
        GOTO 9000

C       OPERATION ----------------------- SLICE -------------------'SL'

8       CALL SLICE(MAXDIM,LUN1,LUN2,LUN3)
        GOTO 9000
     
C       OPERATION --------- ROTATIONAL AVERAGE --------------------'RO'


9       IF (FCHAR(4:4) .EQ. 'I') THEN

	   CALL OPFILEC(0,.TRUE.,FILNAM,LUN1,'O',ITYPE,
     &               NSAM1,NROW1,NSLIC1, MAXIM1,'INPUT1',.FALSE.,IRTFLG)
	   IF (IRTFLG .NE. 0) GOTO 9000

           IF (NSLIC1 .NE. 1) THEN
C             OPERATION DOES NOT WORK ON 3-D FILES
              CALL ERRT(2,'UTIL3',NE)
              GOTO 9000
	   ENDIF

C          OPEN AN OUTPUT FILE 
	   IFORM = 1
           CALL OPFILEC(LUN1,.TRUE.,FILNAM,LUN2,'U',ITYPE,
     &                 NSAM1,NROW1,NSLIC1,MAXIM2,'OUTPUT',.TRUE.,IRTFLG)
	   IF (IRTFLG .NE. 0) GOTO 9000

C          ROTATIONAL AVERAGING
           CALL RADAVI(LUN1,LUN2,NSAM1,NROW1,MAXDIM)
        ELSE
           CALL RADAV(LUN1,LUN2)
        ENDIF

        GOTO 9000

C       OPERATION ----------- OPTICAL DENSITY -------------------- 'OD'
C       OD CONVERSION

10	CALL OPFILEC(0,.TRUE.,FILNAM,LUN1,'O',ITYPE,NSAM1,NROW1,NSLIC1,
     & 		   MAXIM1,'INPUT1',.FALSE.,IRTFLG)
	IF (IRTFLG .NE. 0) GOTO 9000

        IF (NSLIC1 .NE. 1) THEN
C          DOES NOT WORK ON 3-D FILES
           CALL ERRT(2,'UTIL3',NE)
           GOTO 9000
        END IF

C       OPEN AN OUTPUT FILE WITH DIMENSIONS SAME AS INPUT FILE
        CALL OPFILEC(LUN1,.TRUE.,FILNAM,LUN2,'U',ITYPE,
     &               NSAM1,NROW1,NSLIC1, MAXIM2,'OUTPUT',.TRUE.,IRTFLG)
	IF (IRTFLG .NE. 0) GOTO 9000

        CALL OD(LUN1,LUN2,LUN3,NSAM1,NROW1,MAXDIM)
        GOTO 9000

11      IF (FCHAR(4:5) .EQ. '3')  THEN
C          OPERATION ----------- MARKER ------------------------ 'MK 3'
           CALL MRK3(MAXDIM)
        ELSEIF (FCHAR(4:6) .EQ. 'RT')  THEN
C          OPERATION ----------- MARKER ----------------------- 'MK RT'
           CALL MRRT(MAXDIM)
	ELSE
C          OPERATION ----------- MARKER --------------------------- 'MK'
	   CALL  MRK(MAXDIM)
	ENDIF
        RETURN

C       OPERATION ----------- TRANSFORMATION --------------------- 'AF'
12      CALL OPFILEC(0,.TRUE.,FILNAM,LUN1,'O',ITYPE,
     &               NSAM1,NROW1,NSLIC1, MAXIM1,'INPUT',.FALSE.,IRTFLG)
        IF (IRTFLG .NE. 0) GOTO 9000

C       OPEN AN OUTPUT FILE WITH SAME DIMENSIONS AS INPUT FILE
        IF (MAXIM1 .GE. 0)  MAXIM2 = 1 
        CALL OPFILEC(LUN1,.TRUE.,FILNAMO,LUN2,'U',ITYPE,
     &             NSAM1,NROW1,NSLIC1,MAXIM2,'OUTPUT',.TRUE.,IRTFLG)
        IF (IRTFLG .NE. 0) GOTO 9000

	CALL AF(MAXDIM,LUN1,LUN2,LUN3,FILNAM,FILNAMO,
     &                 NSAM1,NROW1,NSLIC1,MAXIM1,IRTFLG)
	GOTO 9000

C       OPERATION -------- ORIENTATION OF PROJECTIONS ------------ 'OP'
13	CALL POLQS(MAXDIM)
	RETURN

C       OPERATION -------- DILATION ------------------------------ 'DI'
14	CALL  OPFILEC(0,.TRUE.,FILNAM,LUN1,'O',ITYPE,
     &              NSAM,NROW,NSLICE, MAXIM1,'INPUT',.FALSE.,IRTFLG)
        IF (IRTFLG .NE. 0) RETURN

        CALL  OPFILEC(LUN1,.TRUE.,FILNAM,LUN2,'U',ITYPE,
     &                NSAM,NROW,NSLICE,MAXIM2,'OUTPUT',.FALSE.,IRTFLG)
        IF (IRTFLG .NE. 0) GOTO 9000

	CALL  DILATION(LUN1,LUN2,NSAM,NROW,NSLICE)
	GOTO 9000

C       OPERATION -------- EROSION ------------------------------- 'ER'
15	CALL OPFILEC(0,.TRUE.,FILNAM,LUN1,'O',ITYPE,NSAM,NROW,NSLICE,
     &              MAXIM1,'INPUT',.FALSE.,IRTFLG)
        IF (IRTFLG .NE. 0) RETURN
        FMIN1 = FMIN
        FMAX1 = FMAX

        CALL OPFILEC(LUN1,.TRUE.,FILNAM,LUN2,'U',ITYPE,NSAM,NROW,NSLICE,
     &              MAXIM2,'OUTPUT',.FALSE.,IRTFLG)
        IF (IRTFLG .NE. 0) GOTO 9000

        IF (FCHAR(4:5) .EQ. 'SK') THEN
C          BINARY SKELETON
	   CALL SKELETON(LUN1,LUN2,NSAM,NROW,NSLICE)

        ELSEIF (FCHAR(4:4) .EQ. 'E') THEN
C          EUCLIDEAN DISTANCE MAP
	   CALL EDM(LUN1,LUN2,NSAM,NROW,NSLICE,FMIN1,FMAX1)

        ELSEIF (FCHAR(4:4) .EQ. 'W') THEN
C          WATERSHED  MAP
	   CALL WATERSHD(LUN1,LUN2,NSAM,NROW,NSLICE)

        ELSE
	   CALL EROSION(LUN1,LUN2,NSAM,NROW,NSLICE)
        ENDIF
        GOTO 9000

9000    CLOSE(LUN1)
        CLOSE(LUN2)
        CLOSE(LUN3)

9911    RETURN
        END

@


1.57
log
@Removed MPI
@
text
@d86 11
a96 3
C                 REMOVED NOV 03 APPEARS TO BE BUGGY, HAD LOCAL READS
C                 NOT THUR RDPR** SUPPORT ROUTINES, IFORM = 0
2	CALL ERRT(101,'OPERATION NO LONGER SUPPORTED',IDUM)
@


1.56
log
@removed 'rc' (buggy?)
@
text
@a49 11
#ifdef USE_MPI
        include 'mpif.h'
        INTEGER  MYPID, COMM, IERR
        CHARACTER(LEN=1) :: NULL
        COMM = MPI_COMM_WORLD
        CALL MPI_COMM_RANK(COMM, MYPID, IERR)
        NULL = CHAR(0)
#else
        MYPID = -1
#endif

a120 10
#ifdef USE_MPI
C       CHECK THE FILENAME TO SEE IF THE OUTPUT IS INLINE
        CALL FILERD(FILNAM,NLETI,NULL,'OUTPUT',IRTFLG)
        IF (MYPID .EQ. 0 .or. FILNAM(1:1) .EQ. '_') THEN
           CALL OPFILEC(LUN1,.FALSE.,FILNAM,LUN2,'U',ITYPE,NSAM,NROW,
     &                  NSLICE,MAXIM2,'OUTPUT',.FALSE.,IRTFLG)
           IF (IRTFLG .NE. 0) RETURN
        ENDIF
        CALL MPI_BCAST(IBCNT, 1, MPI_INTEGER, 0, COMM, IERR)
#else
a123 1
#endif
a146 7
#ifdef USE_MPI
           IF (MYPID .EQ. 0 .OR. FILNAM(1:1) .EQ. '_') THEN
              CALL ROTQS(MAXDIM,LUN1,LUN2,LUN3,FILNAM,FILNAMO,
     &                   NSAM,NROW,NSLICE,MAXIM1,IRTFLG)
           ENDIF
           CALL MPI_BCAST(IBCNT, 1, MPI_INTEGER, 0, COMM, IERR)
#else
a148 1
#endif
@


1.55
log
@mpi
@
text
@d6 11
a16 11
C                                          JING SU             8/31/93
C                                          REWRITTEN al        1/15/98
C                                          ROT CALL CHANGED al 8/02/00 
C                                          ADDED 'ER' al       2/16/01 
C                                          ADDED 'ER SK' al    4/23/01
C                                          ADDED 'ER EDM' al   5/16/01
C                                          ADDED 'RT 3DQ' al   4/10/01
C                                          ADDED 'ER WA ' al   4/25/02 
C                                          OPFILEC        al   2/18/03 
C                                          'RT 3D' LUN closed  4/30/03
C                                          MRQLI1 -> APMASTER  9/5/03
d18 1
d96 4
a99 12
C       OPERATION -------- REAL CONVOLUTION ----------------------- 'RC'

2	CALL OPFILEC(0,.TRUE.,FILNAM,LUN1,'O',ITYPE,NSAM,NROW,NSLICE,
     & 		   MAXIM1,'INPUT',.FALSE.,IRTFLG)
	IF (IRTFLG .NE. 0) GOTO 9000

C       OPEN AN OUTPUT FILE WITH DIMENSIONS BASED ON FIRST INPUT FILE
        CALL OPFILEC(LUN1,.TRUE.,FILNAMO,LUN2,'U',ITYPE,NSAM,NROW,
     &  	   NSLICE,MAXIM2,'OUTPUT',.TRUE.,IRTFLG)
	IF (IRTFLG .NE. 0) GOTO 9000

        CALL RCONV(LUN1,LUN2,LUN3,NSAM,NROW,NSLICE,1,MAXDIM)
d102 1
a102 1
C       OPERATION -------- ROTATE --------------------------------- 'RT'
d330 1
a330 1
C       OPERATION ----------------------- SLICE --------------------'SL'
d335 1
a335 1
C       OPERATION --------- ROTATIONAL AVERAGE ---------------------'RO'
d364 1
a364 1
C       OPERATION ----------- OPTICAL DENSITY --------------------- 'OD'
d386 1
a386 1
C          OPERATION ----------- MARKER ------------------------- 'MK 3'
d389 1
a389 1
C          OPERATION ----------- MARKER ------------------------ 'MK RT'
d412 1
a412 1
C       OPERATION -------- ORIENTATION OF PROJECTIONS ------------- 'OP'
d416 1
a416 1
C       OPERATION -------- DILATION ------------------------------- 'DI'
d428 1
a428 1
C       OPERATION -------- EROSION -------------------------------- 'ER'
@


1.54
log
@'OR MQ' support
@
text
@d17 1
d49 11
d139 10
d152 1
d176 7
d185 1
d269 1
a269 1
C           OPERATION ------------------------------------------ 'OR A'
d271 1
a271 1
		MIRROR=.TRUE.
d273 1
a273 1
	        MIRROR=.FALSE.
d279 1
a279 1
C           OPERATION ------------------------------------------- 'OR Q'
a285 1
C          CALL MRQLI1(MIRROR)
a292 1

@


1.53
log
@'rt 3d' lun2 not closed after use
@
text
@d16 1
d142 1
a142 1
C          OPERATION -------- ROTATE 3 -------------------------- 'RT 3'
d152 1
a152 1
C          OPERATION -------- ROTATE & SCALE ------------------- 'RT SQ'
d158 1
a158 1
C       OPERATION -------- ROTATE --------------------------------- 'RT'
d230 1
a230 1
C       OPERATION -------- ORIENTATIONAL SEARCH ------------------- 'OR'
d232 2
a233 2
C          OPERATION -------- ORIENTATIONAL SEARCH -------------- 'OR 2'
C          OPERATION -------- ORIENTATIONAL SEARCH -------------- 'OR 2M'
d238 1
a238 1
C           OPERATION ------------------------------------------- 'OR A'
d249 1
a249 5
	   IF(FCHAR(5:5) .EQ. 'M')  THEN
		MIRROR=.TRUE.
	   ELSE
	        MIRROR=.FALSE.
	   ENDIF
d254 3
a256 3
C           OPERATION ------------------------------------------- 'OR MQ'
		MIRROR=.TRUE.
           CALL MRQLI1(MIRROR)
d260 2
a261 3
C           OPERATION ------------------------------------------- 'OR NQ'
	        MIRROR=.FALSE.
           CALL MRQLI1(MIRROR)
d266 1
a266 1
C           OPERATION ------------------------------------------- 'OR 3Q'
d271 1
a271 1
C           OPERATION ------------------------------------------- 'OR 3A'
d277 1
a277 1
C       OPERATION ------------------------------------------------- 'FC'
@


1.52
log
@error msg
@
text
@d15 2
a16 1
C 
a27 2
C  SUPPORT_ROUTINE
C
a32 1

d41 1
a41 1
	LOGICAL  MIRROR
d133 1
a133 1
           RETURN
d138 1
a138 1
           RETURN
d140 1
a140 1
        ELSEIF (FCHAR(4:5) .EQ. '3') THEN
a147 3

C          RESET HEADER FOR ALTERATIONS IN STATISTICS
           CALL SETPRMB(BUF,LUN2,NSAM,IDUM, 0.0,0.0,0.0,'U')
@


1.51
log
@opfilec
@
text
@d70 1
a70 1
        IF (NSLICE .NE. 1) THEN
d72 1
a72 1
           CALL ERRT(2,'UTIL3',NE)
@


1.50
log
@typo
@
text
@d4 1
a4 1
C  UTIL3.FOR                               LONG FILENAMES DEC 88 al
d14 1
d66 1
a66 1
1	CALL OPFIL(.TRUE.,FILNAM,LUN1,'O',NSAM,NROW,NSLICE,
d77 1
a77 1
        CALL OPFIL(.TRUE.,FILNAM,LUN2,'U',NSAM,NROW,NSLICE,
d86 1
a86 1
2	CALL OPFIL(.TRUE.,FILNAM,LUN1,'O',NSAM,NROW,NSLICE,
d91 2
a92 2
        CALL OPFIL(.TRUE.,FILNAMO,LUN2,'U',NSAM,NROW,NSLICE,
     &  	   MAXIM2,'OUTPUT',.TRUE.,IRTFLG)
d102 1
a102 1
	CALL OPFILE(.TRUE.,FILNAM,LUN1,'O',ITYPE,NSAM,NROW,NSLICE,
d128 1
a128 1
        CALL OPFILE(.TRUE.,FILNAM,LUN2,'U',ITYPE,NSAM,NROW,NSLICE,
d208 1
a208 1
4	CALL OPFIL(.TRUE.,FILNAM,LUN1,'O',NSAM1,NROW1,NSLIC1,
d216 2
a217 2
        CALL OPFIL(.TRUE.,FILNAM,LUN2,'U',NSAM1,NROW1,NSLIC1,
     &  	   MAXIM2,'OUTPUT',.TRUE.,IRTFLG)
d288 1
a288 1
7	CALL OPFIL(.TRUE.,FILNAM,LUN1,'O',NSAM1,NROW1,NSLIC1,
d303 2
a304 2
        CALL OPFIL(.TRUE.,FILNAM,LUN2,'U',NSAM1,NROW1,NSLIC1,
     &  	   MAXIM2,'OUTPUT',.TRUE.,IRTFLG)
d327 2
a328 2
	   CALL OPFIL(.TRUE.,FILNAM,LUN1,'O',NSAM1,NROW1,NSLIC1,
     & 		      MAXIM1,'INPUT1',.FALSE.,IRTFLG)
d339 2
a340 2
           CALL OPFIL(.TRUE.,FILNAM,LUN2,'U',NSAM1,NROW1,NSLIC1,
     &  	   MAXIM2,'OUTPUT',.TRUE.,IRTFLG)
d354 1
a354 1
10	CALL OPFIL(.TRUE.,FILNAM,LUN1,'O',NSAM1,NROW1,NSLIC1,
d365 2
a366 2
        CALL OPFIL(.TRUE.,FILNAM,LUN2,'U',NSAM1,NROW1,NSLIC1,
     &  	   MAXIM2,'OUTPUT',.TRUE.,IRTFLG)
d385 2
a386 2
12      CALL OPFIL(.TRUE.,FILNAM,LUN1,'O',NSAM1,NROW1,NSLIC1,
     &             MAXIM1,'INPUT',.FALSE.,IRTFLG)
d391 2
a392 2
        CALL OPFIL(.TRUE.,FILNAMO,LUN2,'U',NSAM1,NROW1,NSLIC1,
     &             MAXIM2,'OUTPUT',.TRUE.,IRTFLG)
d399 1
a399 1
C       OPERATION -------- ORIENTATION OF PROJECTIONS -------------- 'OP'
d404 2
a405 2
14	CALL OPFIL(.TRUE.,FILNAM,LUN1,'O',NSAM,NROW,NSLICE,
     &                 IDUM,'INPUT',.FALSE.,IRTFLG)
d408 2
a409 2
        CALL OPFIL(.TRUE.,FILNAM,LUN2,'U',NSAM,NROW,NSLICE,
     &                 IDUM,'OUTPUT',.FALSE.,IRTFLG)
d416 2
a417 3
15	MAXIM = 0
        CALL OPFILE(.TRUE.,FILNAM,LUN1,'O',IFORM,NSAM,NROW,NSLICE,
     &              MAXIM,'INPUT',.FALSE.,IRTFLG)
d422 2
a423 3
        MAXIM = 0
        CALL OPFILE(.TRUE.,FILNAM,LUN2,'U',IFORM,NSAM,NROW,NSLICE,
     &              MAXIM,'OUTPUT',.FALSE.,IRTFLG)
@


1.49
log
@additional commands OR
@
text
@d138 1
a138 1
           CALL  ROTAL3(LUN1,LUN2,NSAM,NROW,NSLICE,,FCHAR(4:6))
@


1.48
log
@*** empty log message ***
@
text
@d33 1
d42 1
d138 1
a138 1
           CALL  ROTAL3(LUN1,LUN2,NSAM,NROW,NSLICE,FCHAR(4:6))
d239 33
@


1.47
log
@rotal3
@
text
@d136 1
a136 1
           CALL  ROTAL3(LUN1,LUN2,NSAM,NROW,NSLICE)
@


1.46
log
@*** empty log message ***
@
text
@a32 1

@


1.45
log
@for 'RT 3DQ'
@
text
@d13 1
d397 1
a397 1
        ELSE IF (FCHAR(4:4) .EQ. 'E') THEN
d400 4
@


1.44
log
@added  RT 3DQ
@
text
@d99 1
a99 1
	CALL OPFILE(.TRUE.,FILNAM,LUN1,'O',ITYPE,NSAM1,NROW1,NSLIC1,
d118 1
a118 1
           CALL REFORM0(LUN1,LUN2,NSAM1,NROW1,NSLIC1,MAXDIM,IRTFLG)
d142 1
a142 1
     &        CALL NORM3(LUN1,NSAM1,NROW1,NSLIC1,FMAX1,FMIN1,AV1)
d145 1
a145 1
           CALL ROT3(LUN1,LUN2,NSAM1,NROW1,NSLIC1,AV1,
d149 1
a149 1
           CALL SETPRMB(BUF,LUN2,NSAM1,IDUM, 0.0,0.0,0.0,'U')
d155 1
a155 1
     &                NSAM1,NROW1,NSLIC1,MAXIM1,IRTFLG)
d170 1
a170 1
     &        CALL NORM3(LUN1,NSAM1,NROW1,NSLIC1,FMAX1,FMIN1,AV1)
d182 1
a182 1
           IF (NSAM1*(1+NROW1) .GT. MAXDIM) THEN
d191 2
a192 2
C       CAN DO A IMAGE OR A VOLUME
        DO  ISLICE = 1, NSLIC1
d194 3
a196 3
            NROWS = (ISLICE-1)*NROW1+1
            NROWE = NROWS + NROW1 - 1
            CALL ROT32(LUN1,LUN2,NSAM1,NROWS,NROWE,1,TH,AV1,SHX,SHY)
d200 1
a200 1
        CALL SETPRMB(BUF,LUN2,NSAM1,IDUM,0.0,0.0,0.0,'U')
@


1.43
log
@nloop,iloop_removed
@
text
@d12 1
d15 6
a20 6
C *  SPIDER - MODULAR IMAGE PROCESSING SYSTEM.    AUTHOR: J.FRANK      *
C *  COPYRIGHT (C)1985, 1996 HEALTH RESEARCH INCORPORATED, ALBANY, NY. *
C * THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO HEALTH            *
C * RESEARCH INC. AND ARE NOT TO BE DISCLOSED TO OTHERS OR USED        *
C * FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF       *
C * HEALTH RESEARCH INC.                                               *
d38 1
a38 1
        CHARACTER(LEN=80)          :: FILNAM,FILNM1,FILNAMO
a95 16

3       IF (FCHAR(4:5) .EQ. '3D') THEN
C          OPERATION -------- ROTATE --------------------------- 'RT 3D'
           CALL  ROTAS3('D')
           RETURN

	ELSEIF (FCHAR(4:5) .EQ. '3A') THEN
C          OPERATION -------- ROTATE --------------------------- 'RT 3A'
           CALL  ROTAS3('A')
           RETURN

	ELSEIF (FCHAR(4:5) .EQ. '3L') THEN
C          OPERATION -------- ROTATE AROUND LINE --------------- 'RT 3L'
           CALL  ROTAL3(MAXDIM)
           RETURN
        END IF
d98 2
a99 2
        IF (FCHAR(4:5) .EQ. 'SQ')  MAXIM1 = 1 
	CALL OPFIL(.TRUE.,FILNAM,LUN1,'O',NSAM1,NROW1,NSLIC1,
d103 5
d122 2
a123 1
C       OPEN AN OUTPUT FILE WITH SAME DIMENSIONS AS INPUT FILE
d125 8
a132 3
	CALL OPFIL(.TRUE.,FILNAMO,LUN2,'U',NSAM1,NROW1,NSLIC1,
     &  	   MAXIM2,'OUTPUT',.TRUE.,IRTFLG)
	IF (IRTFLG .NE. 0) GOTO 9000
d134 6
a139 1
        IF (FCHAR(4:5) .EQ. '3') THEN
a156 1

a301 4
           NSAM2  = NSAM1
           NROW2  = NROW1
           NSLIC2 = NSLIC1
    
d303 1
a303 1
           CALL OPFIL(.TRUE.,FILNAM,LUN2,'U',NSAM2,NROW2,NSLIC2,
a307 1
        
d349 1
a349 3
12      CONTINUE
C COPIED FROM RTSQ
        CALL OPFIL(.TRUE.,FILNAM,LUN1,'O',NSAM1,NROW1,NSLIC1,
d352 1
d358 1
d393 1
a393 1
C          BINARAY SKELETON
@


1.42
log
@added 'ER EDM"
@
text
@d164 1
a164 1
        CALL RDPRM(THETA,NLOOP,ILOOP,'ROTATION ANGLE')
d174 1
a174 1
           CALL RDPRM(AV1,NLOOP,ILOOP,'ENTER BACKGROUND')
d187 2
a188 2
           CALL RDPRM(SHX,NLOOP,ILOOP,'X-SHIFT')
           CALL RDPRM(SHY,NLOOP,ILOOP,'Y-SHIFT')
@


1.41
log
@skeleton added
@
text
@d11 1
d389 2
d398 1
d400 5
@


1.40
log
@changed er & di call parameters
@
text
@d9 3
a11 1
C                                          ADDED ER al         2/16/01 
d384 3
a386 2
15	CALL OPFIL(.TRUE.,FILNAM,LUN1,'O',NSAM,NROW,NSLICE,
     &                 IDUM,'INPUT',.FALSE.,IRTFLG)
d389 3
a391 2
        CALL OPFIL(.TRUE.,FILNAM,LUN2,'U',NSAM,NROW,NSLICE,
     &                 IDUM,'OUTPUT',.FALSE.,IRTFLG)
d394 5
a398 1
	CALL  EROSION(LUN1,LUN2,NSAM,NROW,NSLICE)
@


1.39
log
@er not active
@
text
@d30 1
d34 1
a34 1
        CHARACTER *81 FILNAM,FILNM1,FILNAMO
d36 1
a36 1
        CHARACTER *2  FUNC(NFUNC)
d39 2
a40 2
     1            'OR', 'FC', 'SL', 'RO', 'OD',
     2            'MK', 'AF', 'OP', 'DI', 'ER'/
d234 1
d239 1
d370 10
a379 2
14	CALL DILATION
	RETURN
d382 10
a391 2
15	CALL EROSION
	RETURN
@


1.38
log
@added ER
@
text
@d34 1
a34 1
	PARAMETER     (NFUNC=14)
d39 1
a39 1
     2            'MK', 'AF', 'OP', 'DI'/
d50 4
a53 3
              GOTO (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14) IFUNC
           END IF
        END DO
d66 1
a66 1
        END IF
@


1.37
log
@removed ROT used rot32 for all rotates as rot failed on large
@
text
@d8 2
a9 1
C                                          ROT CALL CHANGED al 8/2/00 
d94 1
a94 1
           GOTO  9911
d99 1
a99 1
           GOTO  9911
d104 1
a104 1
           GOTO  9911
d231 1
a231 1
           GOTO  9911
d344 1
a344 1
        GOTO  9911
d363 1
a363 1
	GOTO  9911
d365 1
d367 5
a371 1
	GOTO  9911
@


1.36
log
@adapted to qali.f
@
text
@d8 1
a8 1
C
d19 3
a21 1
C SUPPORT_ROUTINE
d138 1
a138 1
           CALL ROT3(LUN1,LUN2,NSAM1,NROW1,NSLIC1,MAXDIM,AV1,
d187 1
d190 1
a190 8
            IF (NSAM1*(1+NROW1) .GT. MAXDIM) THEN
C              SLICE DOES NOT FIT IN-CORE, ROTATE ANYWAY
               CALL ROT(LUN1,LUN2,NSAM1,NROWS,NROWE,MAXDIM,TH,AV1)
            ELSE
C              SLICE FITS IN-CORE, ROTATE SLICE IN-CORE
               CALL ROT32(LUN1,LUN2,NSAM1,NROWS,NROWE,1,MAXDIM, 
     &                 TH,AV1,SHX,SHY)
           ENDIF
@


1.35
log
@*** empty log message ***
@
text
@d237 1
a237 1
           CALL QALI(MAXDIM,'Q')
d241 1
a241 1
           CALL QALI(MAXDIM,'A')
@


1.34
log
@*** empty log message ***
@
text
@d285 1
a285 1
9       IF (FCHAR(4:4) .NE. 'I') THEN
@


1.33
log
@*** empty log message ***
@
text
@d1 1
a283 3
9	CALL OPFIL(.TRUE.,FILNAM,LUN1,'O',NSAM1,NROW1,NSLIC1,
     & 		   MAXIM1,'INPUT1',.FALSE.,IRTFLG)
	IF (IRTFLG .NE. 0) GOTO 9000
d285 1
a285 5
        IF (FCHAR(4:4) .EQ. 'I' .AND. NSLIC1 .NE. 1) THEN
C          OPERATION DOES NOT WORK ON 3-D FILES
           CALL ERRT(2,'UTIL3',NE)
           GOTO 9000
	ENDIF
d287 8
a294 9
C       OPEN AN OUTPUT FILE 
        NSAM2  = NSAM1
        NROW2  = NROW1
        NSLIC2 = NSLIC1
        IF (FCHAR(4:4) .NE. 'I') THEN
	   IF (NSLIC2 .EQ. 1)THEN
              NSAM2 = MIN0(NSAM1/2,NROW1/2)
	   ELSE
              NSAM2 = MIN0(NSAM1/2,NROW1/2,NSLIC1/2)
d296 8
a303 5
           NROW2  = 1
	   NSLIC2 = 1
        ENDIF
	IFORM = 1
        CALL OPFIL(.TRUE.,FILNAM,LUN2,'U',NSAM2,NROW2,NSLIC2,
d305 1
a305 1
	IF (IRTFLG .NE. 0) GOTO 9000
d307 2
a308 2
C       ROTATIONAL AVERAGING
        IF (FCHAR(4:4) .EQ. 'I') THEN
d311 1
a311 1
           CALL RADAV(LUN1,LUN2,NSAM1,NROW1,NSLIC1,MAXDIM)
d313 1
a376 1

@


1.32
log
@adapted for 'RO'
@
text
@d283 3
a285 1
9       IF (FCHAR(4:4) .NE. 'I') THEN
d287 5
a291 3
	   CALL OPFIL(.TRUE.,FILNAM,LUN1,'O',NSAM1,NROW1,NSLIC1,
     & 		   MAXIM1,'INPUT1',.FALSE.,IRTFLG)
	   IF (IRTFLG .NE. 0) GOTO 9000
d293 9
a301 4
           IF (NSLIC1 .NE. 1) THEN
C             OPERATION DOES NOT WORK ON 3-D FILES
              CALL ERRT(2,'UTIL3',NE)
              GOTO 9000
d303 5
a307 8

C          OPEN AN OUTPUT FILE 
           NSAM2  = NSAM1
           NROW2  = NROW1
           NSLIC2 = NSLIC1
 
	   IFORM = 1
           CALL OPFIL(.TRUE.,FILNAM,LUN2,'U',NSAM2,NROW2,NSLIC2,
d309 1
a309 1
	   IF (IRTFLG .NE. 0) GOTO 9000
d311 2
a312 1
C          ROTATIONAL AVERAGING
d315 1
a315 1
           CALL RADAV(LUN1,LUN2)
@


1.31
log
@adapted for subroutine ormd.f
@
text
@d283 3
a285 1
9	CALL OPFIL(.TRUE.,FILNAM,LUN1,'O',NSAM1,NROW1,NSLIC1,
d287 1
a287 1
	IF (IRTFLG .NE. 0) GOTO 9000
d289 5
a293 5
        IF (FCHAR(4:4) .EQ. 'I' .AND. NSLIC1 .NE. 1) THEN
C          OPERATION DOES NOT WORK ON 3-D FILES
           CALL ERRT(2,'UTIL3',NE)
           GOTO 9000
	ENDIF
d295 7
a301 15
C       OPEN AN OUTPUT FILE 
        NSAM2  = NSAM1
        NROW2  = NROW1
        NSLIC2 = NSLIC1
        IF (FCHAR(4:4) .NE. 'I') THEN
	   IF (NSLIC2 .EQ. 1)THEN
              NSAM2 = MIN0(NSAM1/2,NROW1/2)
	   ELSE
              NSAM2 = MIN0(NSAM1/2,NROW1/2,NSLIC1/2)
	   ENDIF
           NROW2  = 1
	   NSLIC2 = 1
        ENDIF
	IFORM = 1
        CALL OPFIL(.TRUE.,FILNAM,LUN2,'U',NSAM2,NROW2,NSLIC2,
d303 1
a303 1
	IF (IRTFLG .NE. 0) GOTO 9000
d305 1
a305 2
C       ROTATIONAL AVERAGING
        IF (FCHAR(4:4) .EQ. 'I') THEN
d308 1
a308 1
           CALL RADAV(LUN1,LUN2,NSAM1,NROW1,NSLIC1,MAXDIM)
@


1.30
log
@*** empty log message ***
@
text
@d232 1
a232 1
           CALL  ORMD(MAXDIM)
@


1.29
log
@no maxdim argumnet for subroutine edge.f
@
text
@d371 1
a371 1
13	CALL DILATION
@


1.28
log
@DI
@
text
@d68 1
a68 1
        CALL EDGE(LUN1,LUN2,LUN3,NSAM,NROW,MAXDIM)
@


1.27
log
@a
@
text
@d30 1
a30 1
	PARAMETER     (NFUNC=13)
d35 1
a35 1
     2            'MK', 'AF', 'OP'/
d46 1
a46 1
              GOTO (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13) IFUNC
d369 3
@


1.26
log
@Edited header to indicate support routine
@
text
@d24 1
a24 1
CNO_SAVE
@


1.25
log
@Edited header to indicate support routine
@
text
@d18 1
a18 1
C SUPPORT ROUTINE
@


1.24
log
@rotas3 is called without maxmem
@
text
@d18 1
a18 1
C
@


1.23
log
@OP added
@
text
@d89 1
a89 1
           CALL  ROTAS3(MAXDIM,'D')
d94 1
a94 1
           CALL  ROTAS3(MAXDIM,'A')
@


1.22
log
@OR 3DD removed
@
text
@d30 1
a30 1
	PARAMETER     (NFUNC=12)
d35 1
a35 1
     2            'MK', 'AF'/
d46 1
a46 1
              GOTO (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12) IFUNC
d366 4
@


1.21
log
@OR cleared
@
text
@a228 1

a233 7

        ELSEIF (FCHAR(4:5) .EQ. '3D') THEN
C          OPERATION -------- ORIENTATIONAL SEARCH -------------- 'OR 3D'
C          SIMULTANEOUS ROTATIONAL & TRANSLATIONAL ALIGNMENT
          CALL AL3DCALL(LUN1,LUN2,LUN3,MAXDIM)
          GOTO 9000

a242 1

@


1.20
log
@AF added
@
text
@d230 3
a232 2
6       IF (FCHAR(4:4) .EQ. 'P') THEN
C          OPERATION -------- ORIENTATIONAL SEARCH -------------- 'OR P'
d237 2
a238 2
C         OPERATION -------- ORIENTATIONAL SEARCH -------------- 'OR 3D'
C         SIMULTANEOUS ROTATIONAL & TRANSLATIONAL ALIGNMENT
d243 1
a243 1
C          OPERATION ------------------------------------------- 'OR 3Q'
d247 1
a247 1
C          OPERATION ------------------------------------------- 'OR 3A'
d252 1
a252 25
	CALL OPFIL(.TRUE.,FILNAM,LUN1,'O',NSAM1,NROW1,NSLIC1,
     & 		   MAXIM1,'INPUT1',.FALSE.,IRTFLG)
	IF (IRTFLG .NE. 0) GOTO 9000

        IF (NSLIC1 .NE. 1) THEN
C          DOES NOT WORK ON 3-D FILES
           CALL ERRT(2,'UTIL3',NE)
           GOTO 9000
        END IF

C       OPEN A SECOND INPUT FILE
        CALL OPFIL(.TRUE.,FILNM1,LUN2,'O',NSAM2,NROW2,NSLIC2,
     &  	   MAXIM2,'INPUT2',.TRUE.,IRTFLG)
	IF (IRTFLG .NE. 0) GOTO 9000

        IF (NSAM1  .NE. NSAM2 .OR. NROW1 .NE. NROW2 .OR.
     &      NSLIC1 .NE. NSLIC2) THEN
C          IMAGES MUST BE SAME SIZE
           CALL ERRT(1,'UTIL3 ',NE)
           GOTO 9000
        ENDIF

C       ORIENTATIONAL SEARCH IN 2-D
        CALL ORNTS(FILNAM,FILNM1,LUN1,LUN2,NSAM1,NROW1,MAXDIM)
        GOTO 9000
@


1.19
log
@filnamo needed not filanam for rt sq
@
text
@d30 1
a30 1
	PARAMETER     (NFUNC=11)
d35 1
a35 1
     2            'MK'/
d46 1
a46 1
              GOTO (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11) IFUNC
d383 15
@


1.18
log
@uses stacks in "rt sq" & 4 bad bugs fixed
@
text
@d125 1
a125 1
	CALL OPFIL(.TRUE.,FILNAM,LUN2,'U',NSAM1,NROW1,NSLIC1,
@


1.17
log
@used norm3
@
text
@d6 1
d8 8
a15 9
C **************************************************************************
C *  SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK            *
C *  COPYRIGHT (C)1981,1987, WADSWORTH CENTER FOR LABORATORIES AND         *
C *  RESEARCH, NEW YORK STATE DEPARTMENT OF HEALTH, ALBANY, NY 12201.      *
C *    THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO THE CENTER FOR     *
C *    LABORATORIES AND RESEARCH AND ARE NOT TO BE DISCLOSED TO OTHERS OR  *
C *    USED FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF   *
C *    THE CENTER FOR LABORATORIES AND RESEARCH 			   *
C **************************************************************************
d24 1
d27 1
a27 3
	DIMENSION     Q(1)
	EQUIVALENCE   (A0,Q)
	COMMON        A0(4)
d29 1
a30 2

        CHARACTER *81 FILNAM,FILNM1
a31 6
        CHARACTER     NULL
	DIMENSION     LUNI(3)
        INTEGER       IRTFLG
C       THESE DOUBLE PRECISION VARIABLES ARE NEEDED FOR COMPAR  
C       BEFORE CALLING ROTATION PROGRAMS TO AVOID OVERFLOW      
        DOUBLE PRECISION DNSAM1,DNROW1,DMXDIM   
d37 3
a39 10
        NULL   = CHAR(0)
        NE     = 0
	NF     = 0
	LUN1   = 8
	LUN2   = 9
	LUN3   = 7
	LUN4   = 8
	LUNI(1)= LUN2
	LUNI(2)= LUN3
        LUNI(3)= LUN4
d41 3
d45 3
a47 3
         IF (FCHAR(1:2) .EQ. FUNC(IFUNC)) THEN
           GOTO (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11) IFUNC
          END IF
d53 2
a54 2
1	CALL OPFIL(.TRUE.,FILNAM,LUN1,'O',NSAM1,NROW1,NSLIC1,
     & 		   IDUM,'INPUT1',.FALSE.,IRTFLG)
d57 4
a60 8
        IF (NSLIC1 .NE. 1) THEN
C         DOES NOT WORK ON 3-D FILES
          CALL ERRT(2,'UTIL3',NE)
          GOTO 9000
        ELSEIF (NSAM1 .GT. MAXDIM) THEN
C         INSUFFICIENT BUFFER SPACE
          CALL ERRT(9,'UTIL3',NE)
          GOTO 9000
d64 2
a65 5
        NSAM2  = NSAM1
        NROW2  = NROW1
        NSLIC2 = NSLIC1
	CALL OPFIL(.TRUE.,FILNAM,LUN2,'U',NSAM2,NROW2,NSLIC2,
     &  	   IDUM,'OUTPUT',.TRUE.,IRTFLG)
d68 1
a68 1
        CALL EDGE(LUN1,LUN2,LUN3,NSAM2,NROW2,MAXDIM)
a69 1
                       
d71 1
a71 1
C       OPERATION -------- REAL CONVOLUTION ------------------------ 'RC'
d73 2
a74 2
2	CALL OPFIL(.TRUE.,FILNAM,LUN1,'O',NSAM1,NROW1,NSLIC1,
     & 		   IDUM,'INPUT1',.FALSE.,IRTFLG)
a76 6
        IF (NSAM1 .GT. MAXDIM) THEN
C         INSUFFICIENT BUFFER SPACE
          CALL ERRT(9,'UTIL3',NE)
          GOTO 9000
        END IF
                     
d78 2
a79 5
        NSAM2  = NSAM1
        NROW2  = NROW1
        NSLIC2 = NSLIC1
	CALL OPFIL(.TRUE.,FILNAM,LUN2,'U',NSAM2,NROW2,NSLIC2,
     &  	   IDUM,'OUTPUT',.TRUE.,IRTFLG)
d82 1
a82 1
        CALL RCONV(LUN1,LUN2,LUN3,NSAM1,NROW1,NSLIC1,1,MAXDIM)
d85 1
d87 4
a90 1
C       OPERATION -------- ROTATE -------------------------------- 'RT'
a91 4
3       IF (FCHAR(4:5) .EQ. '3D') THEN
C       OPERATION -------- ROTATE -------------------------------- 'RT 3D'
          CALL  ROTAS3(MAXDIM,'D')
          GOTO  9911
d93 4
a96 3
C       OPERATION -------- ROTATE -------------------------------- 'RT 3A'
          CALL  ROTAS3(MAXDIM,'A')
          GOTO  9911
d98 3
a100 3
C       OPERATION -------- ROTATE around line ---- --------------- 'RT 3L'
          CALL  ROTAL3(MAXDIM)
          GOTO  9911
d103 2
a104 1
C       OPEN FIRST INPUT FILE
d106 1
a106 1
     & 		   IDUM,'INPUT1',.FALSE.,IRTFLG)
d112 1
a113 5
        IF (NSAM1 .GT. MAXDIM) THEN
C         INSUFFICIENT BUFFER SPACE
          CALL ERRT(9,'UTIL3',NE)
          GOTO 9000
        END IF
d115 1
d118 3
a120 3
C         90, 180, OR 270 DEGREE ROTATION OF VOLUME
          CALL REFORM0(LUN1,LUN2,NSAM1,NROW1,NSLIC1,MAXDIM,IRTFLG)
          GOTO 9000
d123 4
a126 6
C       OPEN AN OUTPUT FILE WITH DIMENSIONS BASED ON FIRST INPUT FILE
        NSAM2  = NSAM1
        NROW2  = NROW1
        NSLIC2 = NSLIC1
	CALL OPFIL(.TRUE.,FILNAM,LUN2,'U',NSAM2,NROW2,NSLIC2,
     &  	   IDUM,'OUTPUT',.TRUE.,IRTFLG)
d129 52
a180 26
C       ROTATE
        CALL CHKINPQ('3$',FCHAR(4:),ICALL)
        GOTO (301,320) ICALL

301	CONTINUE
C       MAKE SURE VALID AVERAGE AVAILABLE UNLESS SPECIFIC 
C       BACKGROUND SPECIFIED
        NROWT = NSLIC1*NROW1

          IF (FCHAR(4:5) .EQ. 'SQ')  THEN
            CALL RDPRM2(THETA,SCLI,NLOOP,ILOOP,'ROTATION ANGLE, SCALE')
            TH = THETA*DATAN(1.0D0)/45.0D0
	    IF (SCLI.EQ.0.0) SCLI=1.0
            CALL  ROTQS(MAXDIM,LUN1,LUN2,NSAM1,NROW1,NSLIC1,THETA,SCLI)
            GOTO  9009
          ELSE
            CALL RDPRM(THETA,NLOOP,ILOOP,'ROTATION ANGLE')
            TH = THETA*DATAN(1.0D0)/45.0D0
            IF (FCHAR(4:4) .NE. 'B') THEN
              IF (IMAMI1.NE.1)
     &           CALL NORM3(LUN1,NSAM1,NROWT,NSLIC1,FMAX1,FMIN1,AV1)
              IF (FCHAR(4:4) .EQ. 'M') AV1=FMIN1
            ELSE
              CALL RDPRM(AV1,NLOOP,ILOOP,'ENTER BACKGROUND')
            END IF
          END IF
d182 1
a182 1
C       FOR IMAGES THAT FIT INTO CORE USE IN-CORE VERSION.
d187 7
a193 17
              CALL ROT(LUN1,LUN2,NSAM1,NROWS,NROWE,MAXDIM,TH,AV1)
              GOTO 309
            ENDIF
C           OPTION "BORDER" STILL NOT IMP.
            SHX = 0.0
            SHY = 0.0
            CALL CHKINPQ('C,CBO,BO$',FCHAR(4:),ICALL)
            GOTO (341,342,342,343) ICALL

342         CALL RDPRM(SHX,NLOOP,ILOOP,'X-SHIFT')
            CALL RDPRM(SHY,NLOOP,ILOOP,'Y-SHIFT')

C           FUTURE OPTION "BORDER"
343         CONTINUE

341         CALL ROT32(LUN1,LUN2,NSAM1,NROWS,NROWE,1,MAXDIM,
     &               TH,AV1,SHX,SHY)
d196 3
a198 15
309     IF (NSLIC1 .EQ. 1) THEN
            CALL SETPRM(LUN2,NSAM1,NROW1,FMAX1,FMIN1,AV1,'R')
        ELSE
            CALL SETPRM(LUN2,NSAM1,NROW1,FMAX1,FMIN1,AV1,'R3')
        ENDIF
        GOTO 9009

C       THREE-DIMENSIONAL ROTATION
320     IF (IMAMI1 .NE. 1)
     &        CALL NORM3(LUN1,NSAM1,NROW1,NSLIC1,FMAX1,FMIN1,AV1)
        IFANGL = 0
        IFSHIF = 0
        CALL ROT3(LUN1,LUN2,NSAM1,NROW1,NSLIC1,MAXDIM,AV1,
     &        IFANGL,ALPH,BETA,GAMA,IFSHIF,SHX,SHY,SHZ)
        GOTO 9009
d203 1
a203 1
     & 		   IDUM,'INPUT1',.FALSE.,IRTFLG)
a207 5
        IF (NSAM1 .GT. MAXDIM) THEN
C         INSUFFICIENT BUFFER SPACE
          CALL ERRT(9,'UTIL3',NE)
          GOTO 9000
        END IF
d209 3
a211 6
C       OPEN AN OUTPUT FILE WITH DIMENSIONS BASED ON FIRST INPUT FILE
        NSAM2  = NSAM1
        NROW2  = NROW1
        NSLIC2 = NSLIC1
	CALL OPFIL(.TRUE.,FILNAM,LUN2,'U',NSAM2,NROW2,NSLIC2,
     &  	   IDUM,'OUTPUT',.TRUE.,IRTFLG)
d218 4
a221 1
        GOTO 9009
d228 1
a228 1
C       OPERATION -------- ORIENTATIONAL SEARCH ------------------ 'OR'
d231 1
d236 1
a236 1

d242 3
a244 3
C       OPERATION -------- ------------------- ------------------ 'OR 3Q'
             CALL  QALI(MAXDIM,'Q')
             GOTO  9911
d246 3
a248 3
C       OPERATION -------- ------------------- ------------------ 'OR 3A'
             CALL  QALI(MAXDIM,'A')
             GOTO  9911
d252 1
a252 1
     & 		   IDUM,'INPUT1',.FALSE.,IRTFLG)
a258 5

        ELSEIF (NSAM1 .GT. MAXDIM) THEN
C          INSUFFICIENT BUFFER SPACE
           CALL ERRT(9,'UTIL3',NE)
           GOTO 9000
d262 2
a263 2
	CALL OPFIL(.TRUE.,FILNM1,LUN2,'O',NSAM2,NROW2,NSLIC2,
     &  	   IDUM,'INPUT2',.TRUE.,IRTFLG)
d266 6
a271 7
	IF (IFORM .EQ. 0 .OR. NSLIC2 .NE. 1) THEN
C         OPERATION NOT CONSISTENT WITH DATA FORMAT
          CALL ERRT(2,'UTIL3 ',NE)

        ELSEIF (NSAM1 .NE. NSAM2 .OR. NROW1 .NE. NROW2) THEN
C         IMAGES MUST BE SAME SIZE
          CALL ERRT(1,'UTIL3 ',NE)
d273 2
a274 4
        ELSE
C         ORIENTATIONAL SEARCH IN 2-D
          CALL ORNTS(FILNAM,FILNM1,LUN1,LUN2,NSAM1,NROW1,MAXDIM)
        ENDIF
d280 1
a280 1
     & 		   IDUM,'INPUT1',.FALSE.,IRTFLG)
d284 3
a286 8
C         DOES NOT WORK ON 3-D FILES
          CALL ERRT(2,'UTIL3',NE)
          GOTO 9000

        ELSEIF (NSAM1 .GT. MAXDIM) THEN
C         INSUFFICIENT BUFFER SPACE
          CALL ERRT(9,'UTIL3',NE)
          GOTO 9000
d293 3
a295 6
C       OPEN AN OUTPUT FILE WITH DIMENSIONS BASED ON FIRST INPUT FILE
        NSAM2  = NSAM1
        NROW2  = NROW1
        NSLIC2 = NSLIC1
	CALL OPFIL(.TRUE.,FILNAM,LUN2,'U',NSAM2,NROW2,NSLIC2,
     &  	   IDUM,'OUTPUT',.TRUE.,IRTFLG)
d305 1
a305 1
        CALL SETPRM(LUN2,NSAM1,NROW1,0,0,0,'U')
d310 1
a310 1
8       CALL SLICE(MAXDIM,LUN2,LUN3,LUN4)
a311 1

d313 1
a313 1
C       OPERATION --------- ROTATIONAL AVERAGE --------------------- RO
d316 1
a316 1
     & 		   IDUM,'INPUT1',.FALSE.,IRTFLG)
d319 4
a322 6
        IF (FCHAR(4:4) .EQ. 'I') THEN
        IF (NSLIC1 .NE. 1) THEN
C         RO I DOES NOT WORK ON 3-D FILES
          CALL ERRT(2,'UTIL3',NE)
          GOTO 9000
	ENDIF
d325 1
a325 7
        IF (NSAM1 .GT. MAXDIM) THEN
C         INSUFFICIENT BUFFER SPACE
          CALL ERRT(9,'UTIL3',NE)
          GOTO 9000
        END IF
 
C       OPEN AN OUTPUT FILE WITH DIMENSIONS BASED ON FIRST INPUT FILE
d330 7
a336 7
	    IF (NSLIC2.EQ.1)THEN
             NSAM2 = MIN0(NSAM1/2,NROW1/2)
	    ELSE
             NSAM2 = MIN0(NSAM1/2,NROW1/2,NSLIC1/2)
	    ENDIF
          NROW2 = 1
	  NSLIC2=1
d338 3
a340 3
	IFORM=1
	CALL OPFIL(.TRUE.,FILNAM,LUN2,'U',NSAM2,NROW2,NSLIC2,
     &  	   IDUM,'OUTPUT',.TRUE.,IRTFLG)
d345 1
a345 1
          CALL RADAVI(LUN1,LUN2,NSAM1,NROW1,MAXDIM)
d347 1
a347 1
          CALL RADAV(LUN1,LUN2,NSAM1,NROW1,NSLIC1,MAXDIM)
d352 1
d355 1
a355 1
     & 		   IDUM,'INPUT1',.FALSE.,IRTFLG)
d359 3
a361 8
C         SOES NOT WORK ON 3-D FILES
          CALL ERRT(2,'UTIL3',NE)
          GOTO 9000

        ELSEIF (NSAM1 .GT. MAXDIM) THEN
C         INSUFFICIENT BUFFER SPACE
          CALL ERRT(9,'UTIL3',NE)
          GOTO 9000
d364 3
a366 6
C       OPEN AN OUTPUT FILE WITH DIMENSIONS BASED ON FIRST INPUT FILE
        NSAM2  = NSAM1
        NROW2  = NROW1
        NSLIC2 = NSLIC1
	CALL OPFIL(.TRUE.,FILNAM,LUN2,'U',NSAM2,NROW2,NSLIC2,
     &  	   IDUM,'OUTPUT',.TRUE.,IRTFLG)
d369 1
a369 2
C       OD CONVERSION
1000    CALL OD(LUN1,LUN2,LUN3,NSAM1,NROW1,MAXDIM)
d372 5
a376 5
11      IF(FCHAR(4:5).EQ.'3')  THEN
C       OPERATION ----------- MARKER ---------------------------- 'MK 3'
	   CALL  MRK3(MAXDIM)
        ELSEIF(FCHAR(4:6).EQ.'RT')  THEN
C       OPERATION ----------- MARKER ---------------------------- 'MK RT'
d379 1
a379 1
C       OPERATION ----------- MARKER ----------------------------- 'MK'
a383 9

C       SET HEADER FOR ALTERATIONS IN IMAGE DUE TO OPERATIONS
9009    CONTINUE
        A0(1)  = 0.0
        A0(2)  = 0.0
        A0(3)  = 0.0
        IRTFLG = -1
        CALL  SETLAB(LUN2,NSAM2,A0(4),6,3,A0,'U',IRTFLG)

a386 1
        CLOSE(LUN4)
d388 3
a390 1
9911    FCHAR(:1) = ';'
a391 2
	RETURN
        END
@


1.16
log
@moved IFORM from OPFIL call
@
text
@d181 1
a181 1
     &           CALL NORM(LUN1,NSAM1,NROWT,FMAX1,FMIN1,AV1)
@


1.15
log
@rmoved unused INFLUN
@
text
@d23 1
d27 2
a28 2
	EQUIVALENCE  (A0,Q)
	COMMON    A0(4)
d30 1
a30 1
	PARAMETER (NFUNC=11)
d66 1
a66 1
     & 		   IFORM,'INPUT1',.FALSE.,IRTFLG)
d84 1
a84 1
     &  	   IFORM,'OUTPUT',.TRUE.,IRTFLG)
d94 1
a94 1
     & 		   IFORM,'INPUT1',.FALSE.,IRTFLG)
d108 1
a108 1
     &  	   IFORM,'OUTPUT',.TRUE.,IRTFLG)
d133 1
a133 1
     & 		   IFORM,'INPUT1',.FALSE.,IRTFLG)
d158 1
a158 1
     &  	   IFORM,'OUTPUT',.TRUE.,IRTFLG)
d231 1
a231 1
     & 		   IFORM,'INPUT1',.FALSE.,IRTFLG)
d247 1
a247 1
     &  	   IFORM,'OUTPUT',.TRUE.,IRTFLG)
d284 1
a284 1
     & 		   IFORM,'INPUT1',.FALSE.,IRTFLG)
d300 1
a300 1
     &  	   IFORM,'INPUT2',.TRUE.,IRTFLG)
d320 1
a320 1
     & 		   IFORM,'INPUT1',.FALSE.,IRTFLG)
d343 1
a343 1
     &  	   IFORM,'OUTPUT',.TRUE.,IRTFLG)
d365 1
a365 1
     & 		   IFORM,'INPUT1',.FALSE.,IRTFLG)
d397 1
a397 1
     &  	   IFORM,'OUTPUT',.TRUE.,IRTFLG)
d411 1
a411 1
     & 		   IFORM,'INPUT1',.FALSE.,IRTFLG)
d430 1
a430 1
     &  	   IFORM,'OUTPUT',.TRUE.,IRTFLG)
@


1.14
log
@rt 3co, or 3mm, or 3 removed
@
text
@a46 1
	INFLUN = 2
@


1.13
log
@MR RT added
@
text
@d162 2
a163 2
        CALL CHKINPQ('3,3CO$',FCHAR(4:),ICALL)
        GOTO (301,320,330) ICALL
a227 5
330     IF (IMAMI1.NE.1)
     &       CALL NORM3(LUN1,NSAM1,NROW1,NSLIC1,FMAX1,FMIN1,AV1)
        CALL ROT3CO (LUN1,LUN2,NSAM1,NROW1,NSLIC1,MAXDIM,AV1)
        GOTO 9009
                                 
a280 30

        ELSEIF (FCHAR(4:5) .EQ. '3M')  THEN

	   CALL OPFIL(.TRUE.,FILNAM,LUN1,'O',NSAM1,NROW1,NSLIC1,
     &                 IFORM,'INPUT',.TRUE.,IRTLFG)
	   IF (IRTFLG .NE. 0) GOTO 9000

	   CALL OPFIL(.TRUE.,FILNAM,LUN2,'O',NSAM2,NROW2,NSLIC2,
     &                IFORM,'REFER',.TRUE.,IRTFLG)
	   IF (IRTFLG .NE. 0) GOTO 9000

           IF ((NSAM1  .NE. 32 .AND. NSAM1  .NE. 64) .OR. 
     &         (NROW1  .NE. 32 .AND. NROW1  .NE. 64) .OR.
     &         (NSLIC1 .NE. 32 .AND. NSLIC1 .NE. 64) .OR.
     &         (NSAM2  .NE. 32 .AND. NSAM2  .NE. 64) .OR. 
     &         (NROW2  .NE. 32 .AND. NROW2  .NE. 64) .OR.
     &         (NSLIC2 .NE. 32 .AND. NSLIC2 .NE. 64)) THEN
               CALL ERRT(101,'image must be 32x32x32 or 64x64x64 ',NE)

           ELSEIF ((NSAM1  .NE. NSAM2) .OR. 
     &             (NROW1  .NE. NROW2) .OR.
     &             (NSLIC1 .NE. NSLIC2 )) THEN
C              IMAGES MUST BE SAME SIZE
               CALL ERRT(1,'UTIL3',NE)

           ELSE
C              3-D SEARCH
               CALL CC3DA (LUN1,LUN2,NSAM1,NROW1,NSLIC1)
           ENDIF
           GOTO 9000
@


1.12
log
@call to RT 3L added
@
text
@d475 3
@


1.11
log
@*** empty log message ***
@
text
@d125 4
@


1.10
log
@OK.
@
text
@a22 1
#ifdef SP_UNIX
a23 3
#else
	INCLUDE 'COMMON1:CMBLOCK.INC'
#endif
d118 2
a119 1
          CALL  ROTAS3(MAXDIM)
d121 4
d276 1
a276 1
             CALL  QALI(MAXDIM)
d280 1
a280 1
             CALL  QAAL(MAXDIM)
@


1.9
log
@call to qaal added (OR 3A).
@
text
@d277 1
a277 1
        ELSEIF (FCHAR(4:5) .EQ. '3Q')  THEN
@


1.8
log
@*** empty log message ***
@
text
@d274 1
d276 4
@


1.7
log
@added 3D operation for RO
@
text
@a488 78






C++*************************************************************************
C
C $$ RADAV.FOR
C
C **************************************************************************
C *  SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK            *
C *  COPYRIGHT (C)1981,1987, WADSWORTH CENTER FOR LABORATORIES AND         *
C *  RESEARCH, NEW YORK STATE DEPARTMENT OF HEALTH, ALBANY, NY 12201.      *
C *    THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO THE CENTER FOR     *
C *    LABORATORIES AND RESEARCH AND ARE NOT TO BE DISCLOSED TO OTHERS OR  *
C *    USED FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF   *
C *    THE CENTER FOR LABORATORIES AND RESEARCH 			   *
C **************************************************************************
C
C $$ RADAV:
C
C **************************************************************************

	SUBROUTINE RADAV(LUN1,LUN2,NSAM1,NROW1,nslic1,MAXDIM)
#ifdef SP_UNIX
        INCLUDE 'CMBLOCK.INC'
#else
        INCLUDE 'COMMON1:CMBLOCK.INC'
#endif

	COMMON BUF(1)

	IRMAX=NSAM1/2
	IF(NSLIC1.EQ.1)THEN
	CALL CRCSE1(LUN1,BUF,NSAM1,NROW1,
     &		BUF(NSAM1+1),BUF(NSAM1+IRMAX+1),IRMAX)
	ELSE
	CALL CRCSE3(LUN1,NSAM1,NROW1,NSLICE1,BUF,
     &  BUF(NSAM1+1),BUF(NSAM1+IRMAX+1),IRMAX)
	ENDIF
	CALL WRTLIN(LUN2,BUF(NSAM1+1),IRMAX,1)
	END




         SUBROUTINE CRCSE3(LUN,NSAM,NROW,nslice,buf,SEC,SNO,IR)
         DIMENSION BUF(NSAM),SEC(IR),SNO(IR)
         DO  101  I=1,IR
         SEC(I)=0.0
101      SNO(I)=0.0
C
	 do 117 k=1,nslice
	 kk=k-nslice/2-1
         IF(IABS(Kk).GT.IR-1)  GOTO  117
         DO  1171  J=1,NROW
         KJ=J-NROW/2-1
	 NR1=J+(K-1)*NROW
         IF(IABS(KJ).GT.IR-1)  GOTO  1171
         CALL REDLIN(LUN,BUF,NSAM,nr1)
         DO  28  I=1,NSAM
         KI=I-NSAM/2-1
         R=SQRT(FLOAT(KJ*KJ)+FLOAT(KI*KI)+float(kk*kk))+1.0
         L=R
         IF(L.GT.IR-1)  GOTO  28
         XD=R-L
         SEC(L)=SEC(L)+BUF(I)*(1.0-XD)
         SEC(L+1)=SEC(L+1)+BUF(I)*XD
         SNO(L)=SNO(L)+1.0-XD
         SNO(L+1)=SNO(L+1)+XD
28        CONTINUE
1171	continue
117       CONTINUE
C
         DO  102  I=1,IR
102      SEC(I)=SEC(I)/AMAX1(1.0,SNO(I))
         END
@


1.6
log
@clean up unused variables and hollerith warnings
@
text
@a0 1

a22 1

d61 2
a62 2
          IF (FCHAR(1:2) .EQ. FUNC(IFUNC)) THEN
            GOTO (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11) IFUNC
d393 1
d395 1
a395 1
C         DOES NOT WORK ON 3-D FILES
d398 2
d401 1
a401 1
        ELSEIF (NSAM1 .GT. MAXDIM) THEN
d412 5
a416 1
          NSAM2 = MIN0(NSAM2/2,NROW2/2)
d418 1
d420 1
d429 1
a429 1
          CALL RADAV(LUN1,LUN2,NSAM1,NROW1,MAXDIM)
d489 78
@


1.5
log
@remove RT SA, RT SC, RT SH commands
@
text
@d38 1
a38 1
        CHARACTER *2  FUNC(NFUNC),MODE
d40 5
a44 1
	DIMENSION     NFIL(NFUNC),LUNI(3)
a45 6
C       THESE DOUBLE PRECISION VARIABLES ARE NEEDED FOR COMPARISON
C       BEFORE CALLING ROTATION PROGRAMS TO AVOID OVERFLOW

	DOUBLE PRECISION DNSAM1,DNROW1,DMXDIM


d61 1
a61 1

@


1.4
log
@put traps in for "OR #MM"
@
text
@a168 11
        IF (FCHAR(4:5) .EQ. 'SA' .OR. FCHAR(4:5).EQ.'SC'
     &                           .OR. FCHAR(4:5).EQ.'SH')  THEN

C         B-spline rotation added, IMSL routines used, not to be sent out.
        CALL RDPRM(THETA,NLOOP,ILOOP,'ROTATION ANGLE')
        TH = THETA*DATAN(1.0D0)/45.0D0
          MODE = FCHAR(4:5)
          CALL RTBS(MAXDIM,LUN1,LUN2,NSAM1,NROW1,NSLIC1,TH,MODE)
          IF (MODE .EQ. 'ER')  GOTO  9000
          GOTO  9009
        ELSE
d170 3
a172 3
        CALL RDPRM2(THETA,SCLI,NLOOP,ILOOP,'ROTATION ANGLE, SCALE')
        TH = THETA*DATAN(1.0D0)/45.0D0
	IF (SCLI.EQ.0.0) SCLI=1.0
d176 2
a177 2
        CALL RDPRM(THETA,NLOOP,ILOOP,'ROTATION ANGLE')
        TH = THETA*DATAN(1.0D0)/45.0D0
a185 1
        END IF
d189 11
a199 11
          NROWS = (ISLICE-1)*NROW1+1
          NROWE = NROWS + NROW1 - 1
          IF (NSAM1*(1+NROW1) .GT. MAXDIM) THEN
            CALL ROT(LUN1,LUN2,NSAM1,NROWS,NROWE,MAXDIM,TH,AV1)
            GOTO 309
          ENDIF
C         OPTION "BORDER" STILL NOT IMP.
          SHX = 0.0
          SHY = 0.0
          CALL CHKINPQ('C,CBO,BO$',FCHAR(4:),ICALL)
          GOTO (341,342,342,343) ICALL
d201 2
a202 2
342       CALL RDPRM(SHX,NLOOP,ILOOP,'X-SHIFT')
          CALL RDPRM(SHY,NLOOP,ILOOP,'Y-SHIFT')
d204 2
a205 2
C         FUTURE OPTION "BORDER"
343       CONTINUE
d207 1
a207 1
341       CALL ROT32(LUN1,LUN2,NSAM1,NROWS,NROWE,1,MAXDIM,
d212 1
a212 1
          CALL SETPRM(LUN2,NSAM1,NROW1,FMAX1,FMIN1,AV1,'R')
d214 1
a214 1
          CALL SETPRM(LUN2,NSAM1,NROW1,FMAX1,FMIN1,AV1,'R3')
d220 1
a220 1
     &     CALL NORM3(LUN1,NSAM1,NROW1,NSLIC1,FMAX1,FMIN1,AV1)
d224 1
a224 1
     &     IFANGL,ALPH,BETA,GAMA,IFSHIF,SHX,SHY,SHZ)
d228 1
a228 1
     &     CALL NORM3(LUN1,NSAM1,NROW1,NSLIC1,FMAX1,FMIN1,AV1)
@


1.3
log
@rt prompt corrected
@
text
@d4 3
a6 1
C  UTIL3.FOR                                  LONG FILENAMES DEC 88 al
a7 3
C  CHANGED MAHIEDDINE LADJADJ     4/23/93
C          JING SU                8/31/93
C
d244 1
a244 1
C       OPERATION -------------------------------------------------- 'BC'
d272 1
a272 1
C       OPERATION ----------------- CONCATENATE ------------------------'CT'
d277 1
a277 1
C       OPERATION -------- ORIENTATIONAL SEARCH ----------------------- 'OR'
d279 3
a281 1
6       IF (FCHAR(4:4).EQ.'3') GOTO 615
d283 39
a321 3
        IF (FCHAR(4:4).EQ.'P') THEN
          CALL  ORMD(MAXDIM)
          GOTO  9911
d329 3
a331 3
C         DOES NOT WORK ON 3-D FILES
          CALL ERRT(2,'UTIL3',NE)
          GOTO 9000
d334 3
a336 3
C         INSUFFICIENT BUFFER SPACE
          CALL ERRT(9,'UTIL3',NE)
          GOTO 9000
a342 2
        IF (NSLIC2 .NE. 1) GOTO 9000
	IF (IFORM .EQ. 0) CALL ERRT(2,'UTIL3 ',NE)
d344 3
a346 1
        IF (NSAM1 .NE. NSAM2 .OR. NROW1 .NE. NROW2) THEN
d348 1
d351 1
a352 1

d358 1
a359 25
615     IF (FCHAR(5:5) .EQ. 'D') THEN

C         SIMNULTANEOUS ROTATIONAL AND TRANSLATIONAL ALIGNMENT OF VOLUMES
          CALL AL3DCALL(LUN1,LUN2,LUN3,MAXDIM)
          GOTO 9000

        ELSEIF (FCHAR(5:5) .EQ. 'Q')  THEN
            CALL  QALI(MAXDIM)
            GOTO  9911
        END IF

	CALL OPFIL(.TRUE.,FILNAM,LUN1,'O',NSAM1,NROW1,NSLIC1,
     &  	   IFORM,'INPUT',.TRUE.,IRTLFG)
	IF (IRTFLG .NE. 0) GOTO 9000

	CALL OPFIL(.TRUE.,FILNAM,LUN2,'O',NSAM2,NROW2,NSLIC2,
     &  	   IFORM,'REFER',.TRUE.,IRTFLG)
	IF (IRTFLG .NE. 0) GOTO 9000

C       3-D SEARCH
        CALL CC3DA (LUN1,LUN2,NSAM1,NROW1,NSLIC1)
        GOTO 9000

C       OPERATION -------------------------------------------------- 'FC'

d397 1
a397 1
C       OPERATION ----------------------- SLICE ------------------------'SL'
d403 1
a403 1
C       OPERATION --------- ROTATIONAL AVERAGE ------------------------- RO
d440 1
a440 1
C       OPERATION ----------- OPTICAL DENSITY ------------------------ 'OD'
d470 2
a471 2
C       OPERATION ----------- MARKER --------------------------------- 'MK 3'
	CALL  MRK3(MAXDIM)
d473 2
a474 2
C       OPERATION ----------- MARKER --------------------------------- 'MK'
	CALL  MRK(MAXDIM)
@


1.2
log
@cpp_lines_added
@
text
@d165 1
a165 4
301     CALL RDPRM2(THETA,SCLI,NLOOP,ILOOP,'ROTATION ANGLE, SCALE')
        TH = THETA*DATAN(1.0D0)/45.0D0
	IF (SCLI.EQ.0.0) SCLI=1.0

d174 2
d182 3
d188 2
a207 3
          SHX = 0
          SHY = 0

d209 2
@


1.1
log
@Initial revision
@
text
@d26 3
d30 1
@
