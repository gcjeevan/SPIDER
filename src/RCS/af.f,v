head	1.19;
access;
symbols
	pre_mrcs:1.17
	healthdept_2018:1.17
	pre_getangas:1.15
	GPL2010:1.14
	pre_GPL2010:1.13
	pre_var_equation:1.13
	pre_fftwrings:1.12
	pre_opfiles:1.12
	src:1.12
	best-code:1.12
	x-named-regs:1.12
	x:1.12
	v13-00:1.12
	pre_GPL:1.10
	prec_CA:1.10
	noindx:1.9
	Bproc:1.8
	oct21:1.7
	last77:1.6;
locks; strict;
comment	@c @;


1.19
date	2020.02.25.16.05.16;	author leith;	state Exp;
branches;
next	1.18;

1.18
date	2020.02.24.17.03.22;	author leith;	state Exp;
branches;
next	1.17;

1.17
date	2018.10.03.14.33.54;	author leith;	state Exp;
branches;
next	1.16;

1.16
date	2014.01.12.19.45.11;	author leith;	state Exp;
branches;
next	1.15;

1.15
date	2010.10.22.16.55.49;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	2010.06.24.13.25.01;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	2009.05.22.10.57.12;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	2005.10.17.19.52.43;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	2005.10.17.17.49.57;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	2003.02.24.15.53.25;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	2002.03.11.14.07.39;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	99.11.10.16.26.29;	author pawel;	state Exp;
branches;
next	1.7;

1.7
date	99.08.09.14.53.34;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	99.03.18.20.59.12;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	99.02.19.16.59.38;	author leith;	state Exp;
branches;
next	1.4;

1.4
date	99.02.17.19.35.55;	author leith;	state Exp;
branches;
next	1.3;

1.3
date	99.01.12.17.16.39;	author leith;	state Exp;
branches;
next	1.2;

1.2
date	98.08.19.17.14.52;	author pawel;	state Exp;
branches;
next	1.1;

1.1
date	98.02.06.19.48.52;	author pawel;	state Exp;
branches;
next	;


desc
@AF command
@


1.19
log
@removed unused declarations
@
text
@C++*********************************************************************
C
C  AF.F                               
C                 GETNEWSTACK PARAM.             FEB 03   ARDEAN LEITH
C                 SETPRMB PARAMETERS             MAY 09   ARDEAN LEITH 
C                 GETNEWSTACK PARAM.             OCT 10   ARDEAN LEITH
C                 REMOVED NEWSTACK               FEB 20   ARDEAN LEITH
C
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2020  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@health.ny.gov                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C
C   AF(MAXDIM, LUN1,LUN2, NX,NY,NZ, IRTFLG)
C
C23456789 123456789 123456789 123456789 123456789 123456789 123456789 12
C--*********************************************************************

      SUBROUTINE AF(MAXDIM, LUN1,LUN2, NX,NY,NZ, IRTFLG)

      IMPLICIT NONE
      INCLUDE 'CMBLOCK.INC'
      INCLUDE 'CMLIMIT.INC'

      INTEGER    :: MAXDIM,LUN1,LUN2, NX,NY,NZ, IRTFLG 

      REAL       :: BUF
      COMMON        BUF(1)

      INTEGER    :: L,J,ISLICE,MAXX,MAXY,NXNY2,MEMTOT,NE
      INTEGER    :: NOT_USED,NUMB,LB,K1
      REAL       :: AAA,BBB,CCC,DDD,SHXI,SHYI,DET


         IRTFLG = 1

C        FIND MEMORY NEEED 
         K1     = 1 + NX * NY
         MEMTOT = K1 + NX

         IF (MEMTOT  > MAXDIM)  THEN
C           OVERFLOW WILL OCCUR
            CALL  ERRT(6,'AF',NE)
            RETURN
         ENDIF

C        SINGLE IMAGE OPERATION
         AAA = 1.0
         BBB = 0.0
         CALL RDPRM2S(AAA,BBB,NOT_USED,
     &             'TRANSFORMATION PARAMETERS A, B',IRTFLG)
         IF (IRTFLG .NE. 0) RETURN

         CCC = 0.0
         DDD = 1.0
         CALL RDPRM2S(CCC,DDD,NOT_USED,
     &             'TRANSFORMATION PARAMETERS C, D',IRTFLG)
         IF (IRTFLG .NE. 0) RETURN

	 SHXI = 0.0
	 SHYI = 0.0
         CALL  RDPRM2S(SHXI,SHYI,NOT_USED,
     &                'SHIFTS IN X AND Y',IRTFLG)
         IF (IRTFLG .NE. 0) RETURN

C        CHECK THAT DETERMINANT OF TRANSFORMATION IS NOT TOO SMALL
	 DET = AAA * DDD - BBB * CCC
	 IF (ABS(DET)  <  1.0E-4)  THEN
	    CALL  ERRT(101,'DETERMINANT OVERFLOW',NE)
	    RETURN
	 ENDIF

C        LOAD AND TRANSFORM SLICE BY SLICE

         DO L=1,NZ
           LB = (L-1)*NY
           DO J=1,NY
              CALL  REDLIN(LUN1,BUF(1+(J-1)*NX),NX,LB+J)
           ENDDO

C          TRANSFORM THIS SLICE
           CALL AFS(BUF,BUF(K1), NX,NY,
     &		    AAA,BBB,CCC,DDD, SHXI,SHYI, LUN2,LB)
         ENDDO

C        RESET FILE HEADER FOR ALTERATIONS IN STATISTICS
         CALL SETPRMB(LUN2, 0.0,0.0, 0.0,0.0)

         IRTFLG = 0

         END

@


1.18
log
@changes when removed getstack... ops
@
text
@a46 4
      INCLUDE 'F90ALLOC.INC'
      REAL, DIMENSION(:,:), POINTER :: IPQ
      REAL, DIMENSION(:,:), POINTER :: QBUF

@


1.17
log
@email_health_dept
@
text
@d7 1
d13 1
a13 1
C=* Copyright 1985-2010  Health Research Inc.,                         *
d31 1
a31 2
C   AF(MAXDIM,LUN1,LUN2,LUN3,FILNAM,FILNAMO,NSAM,NROW,NSLICE,
C         MAXIM,IRTFLG)
d36 1
a36 2
      SUBROUTINE AF(MAXDIM,LUN1,LUN2,LUN3,FILNAM,FILNAMO,
     &                 NSAM,NROW,NSLICE,MAXIM,IRTFLG)
d38 1
d42 1
a42 1
      COMMON         BUF(1)
d44 2
a45 4
      INTEGER               :: ILIST(6)
      CHARACTER(LEN=*)      :: FILNAM,FILNAMO
      CHARACTER(LEN=MAXNAM) :: DOCNAM
      CHARACTER(LEN=1)      :: NULL
d51 16
a66 2
      NULL   = CHAR(0)
      IRTFLG = 1
a67 11
C     FIND MEMORY NEEED 
      K1     = 1 + NSAM * NROW
      MEMTOT = K1 + NSAM

      IF (MEMTOT .GT. MAXDIM)  THEN
C        OVERFLOW WILL OCCUR
         CALL  ERRT(6,'AF',NE)
         RETURN
      ENDIF

      IF (MAXIM .LT. 0) THEN
d72 1
a72 1
     &             'TRANSFORMATION PARAMETERS A,B',IRTFLG)
d78 1
a78 1
     &             'TRANSFORMATION PARAMETERS C,D',IRTFLG)
d84 1
a84 1
     &                'SHIFTS IN X AND Y',IRTLFG)
d87 1
a87 1
C        CHECK THAT DETERMINANT OF THE TRANSFORMATION IS NOT TOO SMALL
d89 2
a90 2
	 IF (ABS(DET) .LT. 1.0E-4)  THEN
	    CALL  ERRT(34,'AF ',NE)
d95 5
a99 4
         DO L=1,NSLICE
           LB = (L-1)*NROW
           DO J=1,NROW
              CALL  REDLIN(LUN1,BUF(1+(J-1)*NSAM),NSAM,LB+J)
d102 3
a104 3
C          ROTATE THIS SLICE
           CALL AFS(BUF,BUF(K1),NSAM,NROW,
     &		     AAA,BBB,CCC,DDD,SHXI,SHYI,LUN2,LB)
d109 1
d112 1
a112 72
      ELSE
C        WHOLE STACK OPERATION
         NUMB = 6
         CALL RDPRAI(ILIST,6,NUMB,1,6,
     &      'REG. NUMBERS FOR A,B,C,D, X, & Y SHIFT',
     &      'T',IRTFLG)
         IF (IRTFLG .NE. 0) RETURN

C        MAXX IS 1 + NUM OF REGISTERS SINCE PBUB CONTAINS KEY ALSO
         MAXX   = MAX(ILIST(1),ILIST(2),ILIST(3),
     &                ILIST(4),ILIST(5),ILIST(6)) + 1
         MAXY   = 0
         CALL GETDOCDAT('TRANSFORMATION PARAMETERS DOCUMENT',
     &                 .TRUE.,DOCNAM,LUN3,.TRUE.,MAXX, MAXY,IPQ,IRTFLG)
         IF (IRTFLG .NE. 0) RETURN
         QBUF = > IPQ

         IMGNUM = 1
         DO WHILE (IMGNUM .LE. MAXIM)

C           GET INPUT IMAGE FROM STACK            
            CALL GETOLDSTACK(LUN1,NSAM,IMGNUM,
     &                       .TRUE.,.FALSE.,.TRUE.,IRTFLG)

            IF (IRTFLG .EQ. 0) THEN
C              CREATE OUTPUT IMAGE IN STACK
               CALL GETNEWSTACK(LUN1,LUN2,.FALSE.,NSAM,IMGNUM,IRTFLG)

               IF (IRTFLG .EQ. 0) THEN
C                 OUTPUT IMAGE CREATED OK
                  AAA  = QBUF( ILIST(1) + 1, IMGNUM )
                  BBB  = QBUF( ILIST(2) + 1, IMGNUM )
                  CCC  = QBUF( ILIST(3) + 1, IMGNUM )
                  DDD  = QBUF( ILIST(4) + 1, IMGNUM )
                  SHXI = QBUF( ILIST(5) + 1, IMGNUM )
                  SHYI = QBUF( ILIST(6) + 1, IMGNUM )

C                 CHECK THAT DETERMINANT OF TRANSFORMATION IS NOT TOO SMALL
	          DET = AAA*DDD-BBB*CCC
	          IF (ABS(DET) .LT. 1.0E-4)  THEN
	             CALL  ERRT(34,'AF ',NE)
	             RETURN
	          ENDIF
C                 LOAD AND ROTATE SLICE BY SLICE
                  DO L=1,NSLICE
                     LB = (L-1)*NROW
                     DO J=1,NROW
                        CALL  REDLIN(LUN1,BUF(1+(J-1)*NSAM),NSAM,LB+J)
                     ENDDO
              
                     CALL  AFS(BUF,BUF(K1),NSAM,NROW,
     &		        AAA,BBB,CCC,DDD,SHXI,SHYI,LUN2,LB)
                  ENDDO

                  WRITE(NOUT,90) AAA,BBB,CCC,DDD,SHXI,SHYI 
90                FORMAT(' A: ',G10.3,'  B: ',G10.3,'  C: ',G10.3,
     &                   '  D:',G10.3,/,
     &                   ' SHIFTS(',G10.3,',',G10.3,')',/)

C                 RESET HEADER FOR ALTERATIONS IN STATISTICS
                  CALL SETPRMB(LUN2, 0.0,0.0, 0.0,0.0)
               ENDIF
            ENDIF
            IMGNUM = IMGNUM + 1
         ENDDO

C        DEALLOCAT DOC. FILE MEMORY
         DEALLOCATE(IPQ)
      ENDIF

      RETURN
      END
@


1.16
log
@enter
@
text
@d14 1
a14 1
C=* Email: spider@@wadsworth.org                                        *
@


1.15
log
@COPYSTAT PARAM for getnewstack
@
text
@d113 1
a113 1
     &      'ENTER REG. NUMBERS FOR A,B,C,D, X, & Y SHIFT',
@


1.14
log
@GPL_2010
@
text
@d6 1
d135 1
a135 1
               CALL GETNEWSTACK(LUN1,LUN2,NSAM,IMGNUM,IRTFLG)
@


1.13
log
@rdprmb parameters
@
text
@a7 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2009  Health Research Inc.                      *
d9 5
a13 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d15 1
a15 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d20 1
a20 1
C=* This program is distributed in the hope that it will be useful,    *
d22 1
a22 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a23 1
C=*                                                                    *
d25 1
a25 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.12
log
@GPL License fixed
@
text
@d4 2
a5 1
C                  GETNEWSTACK PARAM.             FEB 03   ARDEAN LEITH
d9 1
a9 1
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d43 1
d47 4
a50 4
      DIMENSION      ILIST(6)
      CHARACTER *(*) FILNAM,FILNAMO
      CHARACTER *81  DOCNAM
      CHARACTER      NULL
d89 3
a91 3
C        CHECK WHETHER DETERMINANT OF THE TRANSFORMATION IS NOT TOO SMALL
	 DET = AAA*DDD-BBB*CCC
	 IF (ABS(DET).LT.1.0E-4)  THEN
d102 1
d104 1
a104 1
           CALL  AFS(BUF,BUF(K1),NSAM,NROW,
d109 1
a109 1
         CALL SETPRMB(BUF,LUN2,NSAM,IDUM,0.0,0.0,0.0,'U')
d149 1
a149 1
C                 CHECK WHETHER DETERMINANT OF THE TRANSFORMATION IS NOT TOO SMALL
d172 1
a172 1
                  CALL SETPRMB(BUF,LUN2,NSAM,IDUM,0.0,0.0,0.0,'U')
@


1.11
log
@HRI GPL License used
@
text
@a1 1
C++************************************************************************
a6 2
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.    AUTHOR: J.FRANK      **
C *  SPIDER - MODULAR IMAGE PROCESSING SYSTEM.    AUTHOR: J.FRANK      *
d10 1
a10 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a29 6

C *  COPYRIGHT (C)1985, 1996 HEALTH RESEARCH INCORPORATED, ALBANY, NY. *
C * THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO HEALTH            *
C * RESEARCH INC. AND ARE NOT TO BE DISCLOSED TO OTHERS OR USED        *
C * FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF       *
C * HEALTH RESEARCH INC.                                               *
@


1.10
log
@getnewstack paramaters changed
@
text
@d1 1
d8 1
d10 24
@


1.9
log
@nloop,iloop_removed
@
text
@d4 1
d118 1
a118 1
               CALL GETNEWSTACK(LUN2,NSAM,IMGNUM,IRTFLG)
@


1.8
log
@getdocdat changed
@
text
@d53 1
a53 1
         CALL RDPRM2S(AAA,BBB,NLOOP,ILOOP,
d59 1
a59 1
         CALL RDPRM2S(CCC,DDD,NLOOP,ILOOP,
d65 1
a65 1
         CALL  RDPRM2S(SHXI,SHYI,NLOOP,ILOOP,
@


1.7
log
@'t' used in rdprai call
@
text
@a31 1
#ifdef SP_F90
d33 2
a34 6
      REAL, DIMENSION(:), POINTER :: IPQ
      REAL, DIMENSION(:), POINTER :: QBUF
#else
      DIMENSION      QBUF(1)
      POINTER        (IPQ,QBUF) 
#endif
a105 1
#ifdef SP_F90
a106 1
#endif
d121 6
a126 6
                  AAA  = QBUF((IMGNUM - 1) * MAXX + ILIST(1) + 1)
                  BBB  = QBUF((IMGNUM - 1) * MAXX + ILIST(2) + 1)
                  CCC  = QBUF((IMGNUM - 1) * MAXX + ILIST(3) + 1)
                  DDD  = QBUF((IMGNUM - 1) * MAXX + ILIST(4) + 1)
                  SHXI = QBUF((IMGNUM - 1) * MAXX + ILIST(5) + 1)
                  SHYI = QBUF((IMGNUM - 1) * MAXX + ILIST(6) + 1)
d158 1
a158 1
         CALL DEALLOCMEM_R(IPQ,IRTFLG)
@


1.6
log
@f90
@
text
@d101 1
a101 1
     &      NULL,IRTFLG)
@


1.5
log
@lunsethdr used
@
text
@a22 2
CNO_SAVE

a30 1
      LOGICAL        RUNTIME
d32 8
a39 2
      DIMENSION      PBUF(1)
      POINTER        (IPQ,PBUF) 
d109 1
a109 1
     &    .TRUE.,DOCNAM,LUN3,.TRUE.,MAXX, MAXY,IPQ,IRTFLG)
d111 3
d128 6
a133 6
                  AAA = PBUF((IMGNUM - 1) * MAXX + ILIST(1) + 1)
                  BBB  = PBUF((IMGNUM - 1) * MAXX + ILIST(2) + 1)
                  CCC  = PBUF((IMGNUM - 1) * MAXX + ILIST(3) + 1)
                  DDD  = PBUF((IMGNUM - 1) * MAXX + ILIST(4) + 1)
                  SHXI  = PBUF((IMGNUM - 1) * MAXX + ILIST(5) + 1)
                  SHYI  = PBUF((IMGNUM - 1) * MAXX + ILIST(6) + 1)
d153 3
a155 3
90                FORMAT(' a: ',G10.3,'  b: ',G10.3,'  c: ',G10.3,
     &                   '  d:',G10.3,/,
     &                   '  SHIFTS(',G10.3,',',G10.3,')',/)
d165 1
a165 2
         RUNTIME = .TRUE.
         CALL ALLOCIT(0,RUNTIME,IPQ,'AF',IRTFLG)
@


1.4
log
@need nsam as parameter
@
text
@d34 1
d113 1
a113 1
            CALL GETOLDSTACK(FILNAM,LUN1,NSAM,IMGNUM,
d118 1
a118 1
               CALL GETNEWSTACK(FILNAMO,LUN2,NSAM,IMGNUM,IRTFLG)
@


1.3
log
@uses getoldstack call now
@
text
@d117 1
a117 1
               CALL GETNEWSTACK(FILNAMO,LUN2,IMGNUM,IRTFLG)
@


1.2
log
@free memory
@
text
@d3 1
a3 1
C  AF.FOR                               
d52 2
a53 2
	AAA=1.0
	BBB=0.0
d55 1
a55 1
     &             'Transformation parameters a,b',IRTFLG)
d58 2
a59 2
	CCC=0.0
	DDD=1.0
d61 1
a61 1
     &             'Transformation parameters c,d',IRTFLG)
d64 2
a65 2
	SHXI=0.0
	SHYI=0.0
d67 1
a67 1
     &                'Shifts IN X AND Y',IRTLFG)
d69 8
a76 6
C  check whether determinant of the transformation is not too small
	DET=AAA*DDD-BBB*CCC
	IF(ABS(DET).LT.1.0E-4)  THEN
	CALL  ERRT(34,'AF ',NE)
	RETURN
	ENDIF
d85 1
a85 1
     &		AAA,BBB,CCC,DDD,SHXI,SHYI,LUN2,LB)
d96 1
a96 1
     &      'ENTER REG. NUMBERS FOR a,b,c,d, X, & Y SHIFT',
d102 1
a102 1
     &			ILIST(4),ILIST(5),ILIST(6)) + 1
d104 1
a104 1
         CALL GETDOCDAT('Transformation parameters document',
d108 2
a109 1
         DO NIMAGE = 1,MAXIM
d112 2
a113 2
            CALL NEXTIMG(BUF,FILNAM,LUN1,NSAM,NROW,NSLICE,
     &                   NIMAGE,.FALSE.,IFORM,'Z',IRTFLG)
d117 1
a117 2
               CALL NEXTIMG(BUF,FILNAMO,LUN2,NSAM,NROW,NSLICE,
     &                      NIMAGE,.FALSE.,IFORM,'U',IRTFLG)
d121 12
a132 12
                  AAA = PBUF((NIMAGE - 1) * MAXX + ILIST(1) + 1)
                  BBB  = PBUF((NIMAGE - 1) * MAXX + ILIST(2) + 1)
                  CCC  = PBUF((NIMAGE - 1) * MAXX + ILIST(3) + 1)
                  DDD  = PBUF((NIMAGE - 1) * MAXX + ILIST(4) + 1)
                  SHXI  = PBUF((NIMAGE - 1) * MAXX + ILIST(5) + 1)
                  SHYI  = PBUF((NIMAGE - 1) * MAXX + ILIST(6) + 1)

C  check whether determinant of the transformation is not too small
	          DET=AAA*DDD-BBB*CCC
	          IF(ABS(DET).LT.1.0E-4)  THEN
	          CALL  ERRT(34,'AF ',NE)
	          RETURN
d146 2
a147 1
90       FORMAT(' a: ',G10.3,'  b: ',G10.3,'  c: ',G10.3,'  d:',G10.3,/,
d154 1
d156 2
d162 1
@


1.1
log
@Initial revision
@
text
@d33 1
d152 2
@
