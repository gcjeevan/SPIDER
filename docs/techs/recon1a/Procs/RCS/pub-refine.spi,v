head	1.102;
access;
symbols
	Pre_gold:1.85
	GPL_update:1.62
	pre_rewrite_2010:1.60
	pre_more_stack:1.53
	best-code:1.51
	no-named-regs:1.44
	pre_GPL:1.44
	tag_version1_0:1.43;
locks;
comment	@# @;


1.102
date	2020.06.25.14.55.24;	author leith;	state Exp;
branches;
next	1.101;

1.101
date	2020.06.25.14.49.42;	author leith;	state Exp;
branches;
next	1.100;

1.100
date	2020.06.25.14.41.46;	author leith;	state Exp;
branches;
next	1.99;

1.99
date	2016.06.02.15.21.04;	author leith;	state Exp;
branches;
next	1.98;

1.98
date	2016.05.25.13.34.25;	author leith;	state Exp;
branches;
next	1.97;

1.97
date	2016.05.20.15.52.08;	author leith;	state Exp;
branches;
next	1.96;

1.96
date	2016.05.19.15.39.18;	author leith;	state Exp;
branches;
next	1.95;

1.95
date	2016.03.21.16.24.07;	author leith;	state Exp;
branches;
next	1.94;

1.94
date	2016.03.17.14.06.30;	author leith;	state Exp;
branches;
next	1.93;

1.93
date	2016.03.10.20.29.48;	author leith;	state Exp;
branches;
next	1.92;

1.92
date	2016.03.10.19.00.15;	author leith;	state Exp;
branches;
next	1.91;

1.91
date	2016.03.08.21.11.46;	author leith;	state Exp;
branches;
next	1.90;

1.90
date	2016.03.08.20.48.39;	author leith;	state Exp;
branches;
next	1.89;

1.89
date	2016.02.19.15.22.27;	author leith;	state Exp;
branches;
next	1.88;

1.88
date	2016.02.19.14.58.48;	author leith;	state Exp;
branches;
next	1.87;

1.87
date	2016.02.11.21.00.16;	author leith;	state Exp;
branches;
next	1.86;

1.86
date	2016.02.09.20.31.19;	author leith;	state Exp;
branches;
next	1.85;

1.85
date	2016.01.08.15.12.07;	author leith;	state Exp;
branches;
next	1.84;

1.84
date	2015.12.04.16.06.02;	author leith;	state Exp;
branches;
next	1.83;

1.83
date	2014.10.07.15.19.23;	author leith;	state Exp;
branches;
next	1.82;

1.82
date	2014.05.22.14.51.55;	author leith;	state Exp;
branches;
next	1.81;

1.81
date	2014.05.16.15.47.53;	author leith;	state Exp;
branches;
next	1.80;

1.80
date	2014.05.09.13.21.37;	author leith;	state Exp;
branches;
next	1.79;

1.79
date	2014.05.08.15.39.32;	author leith;	state Exp;
branches;
next	1.78;

1.78
date	2014.05.01.14.58.30;	author leith;	state Exp;
branches;
next	1.77;

1.77
date	2014.04.17.13.27.02;	author leith;	state Exp;
branches;
next	1.76;

1.76
date	2013.12.13.16.50.57;	author leith;	state Exp;
branches;
next	1.75;

1.75
date	2013.11.08.19.27.51;	author leith;	state Exp;
branches;
next	1.74;

1.74
date	2012.09.19.15.52.32;	author leith;	state Exp;
branches;
next	1.73;

1.73
date	2012.08.31.16.00.15;	author leith;	state Exp;
branches;
next	1.72;

1.72
date	2012.01.05.15.47.11;	author leith;	state Exp;
branches;
next	1.71;

1.71
date	2010.12.28.16.29.27;	author leith;	state Exp;
branches;
next	1.70;

1.70
date	2010.11.04.19.01.23;	author leith;	state Exp;
branches;
next	1.69;

1.69
date	2010.11.01.14.49.17;	author leith;	state Exp;
branches;
next	1.68;

1.68
date	2010.10.29.18.44.36;	author leith;	state Exp;
branches;
next	1.67;

1.67
date	2010.10.29.16.28.14;	author leith;	state Exp;
branches;
next	1.66;

1.66
date	2010.10.08.12.48.10;	author leith;	state Exp;
branches;
next	1.65;

1.65
date	2010.08.27.12.55.21;	author leith;	state Exp;
branches;
next	1.64;

1.64
date	2010.08.17.14.13.14;	author leith;	state Exp;
branches;
next	1.63;

1.63
date	2010.08.16.17.18.11;	author leith;	state Exp;
branches;
next	1.62;

1.62
date	2010.01.21.19.06.50;	author leith;	state Exp;
branches;
next	1.61;

1.61
date	2010.01.19.19.06.12;	author leith;	state Exp;
branches;
next	1.60;

1.60
date	2009.04.24.11.31.46;	author leith;	state Exp;
branches;
next	1.59;

1.59
date	2009.02.10.15.23.58;	author leith;	state Exp;
branches;
next	1.58;

1.58
date	2008.06.18.15.31.01;	author leith;	state Exp;
branches;
next	1.57;

1.57
date	2008.01.25.18.52.33;	author leith;	state Exp;
branches;
next	1.56;

1.56
date	2007.03.22.14.45.19;	author leith;	state Exp;
branches;
next	1.55;

1.55
date	2007.02.02.15.27.46;	author leith;	state Exp;
branches;
next	1.54;

1.54
date	2007.01.17.16.35.09;	author leith;	state Exp;
branches;
next	1.53;

1.53
date	2006.05.16.14.44.17;	author leith;	state Exp;
branches;
next	1.52;

1.52
date	2006.05.09.16.28.09;	author leith;	state Exp;
branches;
next	1.51;

1.51
date	2006.03.15.19.56.45;	author leith;	state Exp;
branches;
next	1.50;

1.50
date	2006.02.22.21.12.28;	author leith;	state Exp;
branches;
next	1.49;

1.49
date	2006.02.16.20.19.27;	author leith;	state Exp;
branches;
next	1.48;

1.48
date	2006.02.07.22.09.12;	author leith;	state Exp;
branches;
next	1.47;

1.47
date	2006.01.09.16.37.04;	author leith;	state Exp;
branches;
next	1.46;

1.46
date	2006.01.09.16.35.42;	author leith;	state Exp;
branches;
next	1.45;

1.45
date	2006.01.04.14.28.42;	author leith;	state Exp;
branches;
next	1.44;

1.44
date	2005.09.23.16.29.29;	author leith;	state Exp;
branches;
next	1.43;

1.43
date	2005.05.09.16.13.19;	author leith;	state Exp;
branches;
next	1.42;

1.42
date	2005.05.09.16.09.49;	author leith;	state Exp;
branches;
next	1.41;

1.41
date	2005.03.17.15.14.40;	author leith;	state Exp;
branches;
next	1.40;

1.40
date	2005.02.15.15.13.21;	author leith;	state Exp;
branches;
next	1.39;

1.39
date	2005.02.07.17.03.27;	author leith;	state Exp;
branches;
next	1.38;

1.38
date	2005.02.03.19.28.04;	author leith;	state Exp;
branches;
next	1.37;

1.37
date	2005.01.20.14.58.04;	author leith;	state Exp;
branches;
next	1.36;

1.36
date	2005.01.18.16.47.10;	author leith;	state Exp;
branches;
next	1.35;

1.35
date	2005.01.18.16.45.05;	author leith;	state Exp;
branches;
next	1.34;

1.34
date	2004.11.10.16.40.21;	author leith;	state Exp;
branches;
next	1.33;

1.33
date	2004.10.04.19.32.21;	author leith;	state Exp;
branches;
next	1.32;

1.32
date	2004.09.22.13.56.36;	author leith;	state Exp;
branches;
next	1.31;

1.31
date	2004.09.13.13.20.02;	author leith;	state Exp;
branches;
next	1.30;

1.30
date	2004.07.21.17.47.17;	author leith;	state Exp;
branches;
next	1.29;

1.29
date	2004.07.08.15.00.45;	author leith;	state Exp;
branches;
next	1.28;

1.28
date	2004.07.06.17.43.03;	author leith;	state Exp;
branches;
next	1.27;

1.27
date	2004.06.09.14.39.20;	author leith;	state Exp;
branches;
next	1.26;

1.26
date	2004.06.04.14.03.14;	author leith;	state Exp;
branches;
next	1.25;

1.25
date	2004.06.01.19.34.21;	author leith;	state Exp;
branches;
next	1.24;

1.24
date	2004.06.01.15.32.42;	author leith;	state Exp;
branches;
next	1.23;

1.23
date	2004.05.28.16.34.42;	author leith;	state Exp;
branches;
next	1.22;

1.22
date	2004.05.26.16.43.00;	author leith;	state Exp;
branches;
next	1.21;

1.21
date	2004.05.10.19.07.00;	author leith;	state Exp;
branches;
next	1.20;

1.20
date	2004.03.29.15.59.40;	author leith;	state Exp;
branches;
next	1.19;

1.19
date	2004.03.18.15.14.05;	author leith;	state Exp;
branches;
next	1.18;

1.18
date	2003.11.21.15.27.09;	author leith;	state Exp;
branches;
next	1.17;

1.17
date	2003.10.20.16.40.54;	author leith;	state Exp;
branches;
next	1.16;

1.16
date	2003.09.02.14.39.20;	author leith;	state Exp;
branches;
next	1.15;

1.15
date	2003.08.18.16.26.28;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	2003.06.13.13.06.09;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	2003.06.06.12.58.47;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	2003.05.21.13.02.38;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	2003.05.05.19.01.37;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	2003.04.24.18.53.10;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	2003.04.16.19.08.58;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	2003.03.31.16.25.25;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	2003.03.28.17.09.31;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	2003.03.10.15.34.23;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	2002.10.21.16.25.20;	author leith;	state Exp;
branches;
next	1.4;

1.4
date	2002.10.10.20.25.13;	author leith;	state Exp;
branches;
next	1.3;

1.3
date	2002.10.02.14.23.06;	author leith;	state Exp;
branches;
next	1.2;

1.2
date	2002.09.12.21.12.46;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	2002.09.09.19.32.43;	author leith;	state Exp;
branches;
next	;


desc
@@


1.102
log
@typo
@
text
@ ; <html><head><title>Controls parallel refinement</title></head><body><pre>
 ;
 ; SOURCE: spider/docs/techs/recon1a/Procs/pub-refine.spi
 ;
 ;         New                                  ArDean Leith  Nov 2000
 ;         [rn] for endmerge                    ArDean Leith  May 2005
 ;         Ampenhance                           ArDean Leith  May 2006
 ;         More stacks                          ArDean Leith  Dec 2006
 ;         Existing iter_refangs bug            ArDean Leith  Aug 2010
 ;         COG centering                        ArDean Leith  Sep 2010
 ;         Dala files removed                   ArDean Leith  Jan 2012
 ;         pixsiz, resol headers,...            ArDean Leith  Aug 2012
 ;         For CTF corrected images             ArDean Leith  Oct 2013
 ;         For gold standard reconstruction     ArDean Leith  May 2014
 ;         Reference projections parallelized   ArDean Leith  Oct 2015
 ;         Added PBS support                    ArDean Leith  Feb 2016
 ;         Removed PubSub support               ArDean Leith  Jun 2020
 ;
 ; PURPOSE: Runs on master node to control parallel refinement using cluster. 
 ;          Each data group creates one parallel process.
 ;
 ; I/O Registers & files are set in: <a href="refine-settings.spi">refine-settings.spi</a>
 ;
 ; INPUT FILES: ('***' denotes group here)
 ;   [vol_orig]              ../Reconstruction/vol_01              Initial reference volume       (one)
 ;   [sel_group_orig]        ../Reconstruction/input/sel_group     Group selection file           (one)
 ;   [sel_parts_orig]        ../Reconstruction/input/sel_part_***  Group particle selection files (one/group)
 ;   [unaligned_images_orig] ../Reconstruction/input/data_ctfd_*** Unaligned image stacks         (one/group)
 ;
 ; PROCEDURES CALLED:
 ;    refine-settings         <a href="refine-settings.spi">  refine-settings.spi</a>
 ;    show-r2                 <a href="show-r2.spi">          show-r2.spi</a>
 ;    pub-prjrefs             <a href="pub-prjrefs.spi">      pub-prjrefs.spi</a>            
 ;    .. pub-submit           <a href="pub-submit.spi">       pub-submit.spi</a>
 ;    .. memforqsub (optional)<a href="memforqsub.spi">       memforqsub.spi</a>
 ;    .. qsub                 <a href="qsub.pbs">             qsub.pbs</a>
 ;    .... pub-refine-start   <a href="pub-refine-start.spi"> pub-refine-start</a>          
 ;    ...... refine-settings  <a href="refine-settings.spi">  refine-settings.spi</a>            
 ;    ...... refine-prjloop   <a href="refine-prjloop.spi">   refine-prjloop.spi</a>            
 ;    pub-submit              <a href="pub-submit.spi">       pub-submit.spi</a>
 ;    .. memforqsub (optional)<a href="memforqsub.spi">       memforqsub.spi</a>
 ;    .. qsub                 <a href="qsub.pbs">             qsub.pbs</a>
 ;    .. pub-refine-start     <a href="pub-refine-start.spi"> pub-refine-start</a>          
 ;    .... refine-settings    <a href="refine-settings.spi">  refine-settings.spi</a>            
 ;    .... refine-loop OR     <a href="refine-loop.spi">      refine-loop.spi</a>            
 ;    .... refine-smangloop   <a href="refine-smangloop.spi"> refine-smangloop.spi</a>            
 ;    ...... refine-bp        <a href="refine-bp.spi">        refine-bp.spi</a>            
 ;    merge-fsc-filt          <a href="merge-fsc-filt.spi">   merge-fsc-filt.spi</a>
 ;    .. enhance (optional)   <a href="enhance.spi">          enhance.spi</a>
 ;
 ; -------------------------------- END BATCH HEADER ----------------------------

 MD
   TR OFF                    ; Loop info turned off
 MD
   VB OFF                    ; File info turned off
 MD
   SET MP                    ; Use only one or two processors if using master node!!
   1 

 ; Input initial parameters & file names but not angular steps
 @@refine-settings([pixsiz],[r2],[alignsh],[prj-radius],[iter1],[iter-end],[sphdecon],[smallang-yn],[qsub],[incore-yn],[gold-std],[bp-type])

 SYS
   echo ; echo -e "  Alignment shift:   {%I0%[alignsh]}   Alignment radius: {%I0%[r2]}"
 SYS
   echo    "  Projection radius: {%I0%[prj-radius]}" 

 SYS                         ; Create output directories if not present
   mkdir -p [out_dir] [work_dir]

 SD /     ITERATION     MASKED-RES    RESOLUTION
   [iter_resol]              ; Resolution doc file              (output)
 SD E     
   [iter_resol]              ; Resolution doc file              (finished)

 UD N [num-grps]             ; Find number of groups
   [sel_group]               ; Group selection file      (input)

 IF ( [iter1] == 1 ) THEN
   ; Ensure that starting input files exist
   [iter] = 1

   DO [s] = 1,2
     ; Create subset volumes from initial model 
     CP 
       [vol_orig]            ; Starting initial model == reference volume
       [vol_s]               ; Starting subset reference volume  
   ENDDO
 
   DO [grp] = 1,[num-grps]
     ; Must create odd and even particle selection lists for all groups
     DE
       [sel_parts]_s1        ; Odd  particle selection doc file    (removed)         
     DE
       [sel_parts]_s2        ; Even particle selection doc file    (removed)         

     DOC SPLIT
       [sel_parts]           ; Particle selection doc file         (input)
       [sel_parts]_s1        ; Odd  particle selection doc file    (output)         
       [sel_parts]_s2        ; Even particle selection doc file    (output)         
   ENDDO
 ENDIF

 ; Show alignment and projection radii on center slice of a reference volume
 [s] = 1
 @@show-r2([r2],[alignsh],[prj-radius])
   [vol_orig]                ; Starting initial model == reference volume


 IF ( [smallang-yn] == 1 ) THEN
   ; List desired offset angles for reference projections in a doc file.
   @@refine-setrefangles([iter],[smallang-yn],[ampenhance],[ang-step],[ang-limit],[num-angs])      
 ENDIF

 DO [iter]=[iter1],[iter-end] ; Loop over all iterations ----------------------------------

   IF ( [smallang-yn] == 0 ) THEN
     ; List desired angles ('VO EA') for reference projections in a doc file.
     @@refine-setrefangles([iter],[smallang-yn],[ampenhance],[ang-step],[ang-limit],[num-angs])      

     ; Create reference projection ('PJ 3F') stacks from both subset reference volumes 
     ; in parallel. Waits for all nodes to finish their projections. 

     @@pub-prjrefs([iter],[num-grps],[prj-radius],[qsub])

   ENDIF

   ; Process experimental images in parallel by groups of images using PBS.
   ; Find alignment parameters ('AP SHC' or 'AP REF') which align experimental images  
   ; with the most similar projection image. This is done for the two subsets of images. 
   ; Then align ('RT SF') the images and backproject ('BP 3F') to create two subset volumes.

   [task]   = [smallang-yn]   ; pub-refine-start starts: refine-loop or refine-loop-smang
   [script] = './spider $PRJEXT/$DATEXT @@pub-refine-start '  ; Script that runs refinement
   @@pub-submit([iter],[num-grps],[task],[qsub])
      [script]                ; Script that runs refinement

   ; Consolidate ('AS S') all parallel group volumes for both subsets into two subset
   ; output volumes, find resolution ('FSC') by comparing FSC of the two subsets, and
   ; filter ('FD C') the combined volumes to limit resolution. 

   @@merge-fsc-filt([pixsiz],[iter],[ampenhance],[r2],[sphdecon],[gold-std],[qsub])
 
 ; Show center slice of current volume
   [next-iter] = [iter] + 1;
   @@show-r2([r2],[alignsh],[prj-radius])
     [next_vol]               ; Filtered volume           (output)

   SYS
     echo "  Iteration: {%I0%[iter]} Finished" ; echo
   MY FL                      ; Flush results
 ENDDO                        ; End of loop over all iterations ----------------------------

 SYS                          ; Echo current time 
   echo -n "  Refinement finished after iteration: {**[iter]}   " ; date '+ Time: %x  %X' ; echo  

 EN
 ; </pre></body></html>


 
@


1.101
log
@removed sphdecon support
@
text
@d3 1
a3 1
 ; SOURCE: spider/docs/techs/recon1/Procs/pub-refine.spi
@


1.100
log
@Removed PubSub support
@
text
@a48 6
 ;    .. pub-submit (optional)<a href="pub-submit.spi">       pub-submit.spi</a>
 ;    .. memforqsub (optional)<a href="memforqsub.spi">       memforqsub.spi</a>
 ;    .. qsub                 <a href="qsub.pbs">             qsub.pbs</a>
 ;    .... pub-refine-start   <a href="pub-refine-start.spi"> pub-refine-start</a>          
 ;    ...... refine-settings  <a href="refine-settings.spi">  refine-settings.spi</a>            
 ;    ...... sphdecon         <a href="sphdecon.spi">         sphdecon.spi</a>            
@


1.99
log
@comments
@
text
@a6 1
 ;         [] from publish                      ArDean Leith  Feb 2006
d16 2
a17 1
 ;         PBS support                          ArDean Leith  Feb 2016
d36 1
a36 1
 ;    .. publish/qsub         <a href="publish.perl">         publish.perl</a>
d42 1
a42 1
 ;    .. publish/qsub         <a href="publish.perl">         publish.perl</a>
d51 1
a51 1
 ;    .. publish/qsub         <a href="publish.perl">         publish.perl</a>
d135 1
a135 1
   ; Process experimental images in parallel by groups of images using Pubsub.
@


1.98
log
@Create subset volumes of reference always
@
text
@d25 4
a28 4
 ;   [vol_orig]              ../Reconstruction/vol01                  Initial reference volume       (one)
 ;   [sel_group_orig]        ../Reconstruction/input/sel_group        Group selection file           (one)
 ;   [sel_parts_orig]        ../Reconstruction/input/bp_sel_part_***  Group particle selection files (one/group)
 ;   [unaligned_images_orig] ../Reconstruction/input/bp_data_ctfd_*** Unaligned image stacks         (one/group)
d35 1
d41 2
a42 1
 ;       publish/qsub         <a href="publish.perl">         publish.perl</a>
d45 1
a45 1
 ;    .... refine-loop OR     <a href="refine-prjloop.spi">   refine-prjloop.spi</a>            
d50 1
d93 2
a94 2
       [vol_orig]          ; Starting initial model == reference volume
       [vol_s]             ; Starting subset reference volume  
a123 1

d140 1
a140 1
   [task]   = [smallang-yn]    ; pub-refine-start starts: refine-loop or refine-loop-smang
d143 1
a143 1
      [script]                 ; Script that runs refinement
a165 2


@


1.97
log
@create odd and even particle selections
@
text
@d70 1
a70 1
   echo    "  Projection radius: {%I0%[prj-radius]}" ; echo
d88 4
a91 10
     ; Create subset volumes from initial model if not already created
     IQ FI [r-exists]
       [vol_s]               ; Reference volume

     IF ( [r-exists] <= 0) THEN
       ; Must create current starting volume from initial model/reference volume
       CP 
         [vol_orig]          ; Starting initial model == reference volume
         [vol_s]             ; Starting subset reference volume  
     ENDIF   
d96 5
d109 3
a111 3
 ![s] = 1
 !@@show-r2([r2],[alignsh],[prj-radius])
 !  [vol_s]                   ; Reference volume
d149 5
d160 1
a160 1
   echo -n "  Refinement finished after iteration: {**[iter]}   " ; date '+ TIME: %x  %X' ; echo  
@


1.96
log
@qsub in prjrefs
@
text
@a66 1
 
d72 1
a72 1
 SYS                          ; Create output directories if not present
d76 1
a76 1
   [iter_resol]               ; Resolution doc file              (output)
d78 1
a78 1
   [iter_resol]               ; Resolution doc file              (finished)
d80 2
a81 2
 UD N [num-grps]              ; Find number of groups
   [sel_group]                ; Group selection file      (input)
d84 1
a84 1
   ; Create subset volumes from initial model if not already created
d86 13
a98 10
   [s]    = 1
   IQ FI [r-exists]
     [vol_s]                  ; Reference volume

   IF ( [r-exists] <= 0) THEN
     ; Must create current starting volume from initial model/reference volume
     CP 
       [vol_orig]             ; Starting initial model == reference volume
       [vol_s]                ; Starting subset reference volume  
   ENDIF   
d100 7
a106 7
   [s] = 2
   IF ( [r-exists] <= 0) THEN
     ; Must create current starting volume from initial model/reference volume
     CP 
       [vol_orig]             ; Starting initial model == reference volume
       [vol_s]                ; Starting subset reference volume   
   ENDIF   
d112 1
a112 1
 !  [vol_s]                  ; Reference volume
@


1.95
log
@added [gold-std] toggle
@
text
@d128 1
a128 1
     @@pub-prjrefs([iter],[num-grps],[prj-radius])
@


1.94
log
@Inlined params, changed dirs
@
text
@d19 2
a20 3
 ; PURPOSE: Runs on master node to control PubSub refinement.  Master procedure for
 ;          multiple iteration refinement on parallel cluster.
 ;          Each data group uses one parallel process.
a23 5
 ; VARIABLE REGISTERS:
 ;   [r2]                     Radius of object 
 ;   [alignsh]                Translation shift allowed is +-[alignsh]
 ;   [iter-end]               Ending iteration
 ;
a24 1
 ;   [params]                ../params                                Parameter file                 (one)
d26 1
a26 1
 ;   [sel_group_orig]        ../Reconstruction/input/bp_sel_group     Group selection file           (one)
d51 1
a51 1
 ;    ...... refine-sphdecon  <a href="refine-sphdecon.spi">  refine-sphdecon.spi</a>            
d65 1
a65 1
 @@refine-settings([pixsiz],[r2],[alignsh],[prj-radius],[iter1],[iter-end],[sphdecon],[smallang-yn],[qsub],[incore-yn],[prepare-yn],[bp-type])
d67 1
d69 1
a69 1
   echo -e "  Alignment shift:   {%I0%[alignsh]}   Alignment radius: {%I0%[r2]}"
d73 2
a74 3
 ; Show alignment and projection radii on center slice of reference volume
!@@show-r2([r2],[alignsh],[prj-radius])
!   final/vol_01_s1                ; Reference volume
d84 29
d120 1
d146 1
a146 1
   @@merge-fsc-filt([pixsiz],[iter],[ampenhance],[r2],[sphdecon],[qsub])
@


1.93
log
@renamed refine-refangles --> refine-setrefangles
@
text
@a38 1
 ;    refine-prepare          <a href="refine-prepare.spi">   refine-prepare.spi</a>
a62 2
 [qsub] = 1                  ; Use PBS que

d72 1
a72 7
 @@refine-settings([pixsiz],[r2],[alignsh],[prj-radius],[iter1],[iter-end],[sphdecon],[smallang-yn],[winsiz],[incore-yn],[prepare-yn],[bp-type])
 [qsub] = 1                  ; Use PBS que

 IF ( [prepare-yn] > 0 ) THEN 
   ; Prepare input files (only needs to be done once)  
   @@refine-prepare([pixsiz],[iter1]) 
 ENDIF
d99 1
a99 1
     ; List desired angles ('VO EA' for reference projections in a doc file.
d102 1
a102 1
     ; Create reference projection stacks ('PJ 3F') from both subset reference volumes 
d110 2
a111 2
   ; Find alignment parameters ('AP SHC' or 'AP REF') to align experimental images  
   ; with optimal projection image. This is done for the two subsets of images. 
@


1.92
log
@small ang flow fixed
@
text
@d23 1
a23 1
 ; I/O Registers & files are set in: <a href="./refine-settings.spi">refine-settings.spi</a>
d102 1
a102 1
   @@refine-refangles([iter],[smallang-yn],[ampenhance],[ang-step],[ang-limit],[num-angs])      
d109 1
a109 1
     @@refine-refangles([iter],[smallang-yn],[ampenhance],[ang-step],[ang-limit],[num-angs])      
@


1.91
log
@small angle removed to own pub-refine-smang.spi
@
text
@d3 1
a3 1
 ; SOURCE: spider/docs/techs/recon1/Procs/gold/pub-refine.spi
d40 1
a40 1
 ;    refine-show-r2          <a href="refine-show-r2.spi">   refine-show-r2.spi</a>
d43 1
a43 1
 ;    .. publish              <a href="publish.perl">         publish.perl</a>
d48 1
a48 1
 ;       publish              <a href="publish.perl">         publish.perl</a>
d51 2
a52 1
 ;    .... refine-loop        <a href="refine-prjloop.spi">   refine-prjloop.spi</a>            
d56 1
a56 1
 ;    .. publish  (optional)  <a href="publish.perl">         publish.perl</a>
d100 5
d107 3
a109 1
   ; List desired angles for reference projections in a doc file.
d111 2
a112 1
   @@refine-refangles([iter],[smallang-yn],[ampenhance],[ang-step],[ang-limit],[num-angs])      
d114 1
a114 2
   ; Create stacks holding reference projections 'PJ 3F' from both subset reference volumes 
   ; in parallel. Waits for all subscribing nodes to finish their projections. 
d116 1
a116 1
   @@pub-prjrefs([iter],[num-grps],[prj-radius])
d119 1
a119 1
   ; Find alignment parameters ('AP SHC' or 'AP REF') which align experimental images  
d121 1
a121 5
   ; Then align  ('RT SF')the images ('RT SF'), and 
   ; backproject ('BP 3F') to create two subset volumes

   [task]   = 0               ; pub-refine-start starts: refine-loop
   [script] = './spider $PRJEXT/$DATEXT @@pub-refine-start '
d123 2
d126 1
a126 1
     [script]                 ; Script that runs projection parallel job
d128 1
a128 1
   ; Consolidate all parallel group volumes for both subsets ('AS S') into tow subset
d130 1
a130 1
   ; filter the combined volumes ('FD C') to limit resolution. 
d135 1
a135 1
     echo " Iteration: {%I0%[iter]} Finished" ; echo
@


1.90
log
@comments
@
text
@d111 4
a114 3
   ; Find alignment ('AP SHC' or 'AP REF') parameters for experimental images to 
   ; align with optimal projection image. This is done for two subsets of images, 
   ; Then align the images ('RT SF'), and backproject ('BP 32F') to create two subset volumes
d116 1
a116 1
   [task]   = [smallang-yn]     ; pub-refine-start starts: refine-loop or refine-smangloop
@


1.89
log
@PBS support, refine-merge --> merge-fsc-filt,  qsub parameter passed
@
text
@a51 1
 ;    .... refine-smangloop   <a href="refine-smangloop.spi"> refine-smangloop.spi</a>            
d53 1
a53 9
 ;    refine-merge            <a href="refine-merge.spi">     refine-merge.spi</a>
 ;    publish                 <a href="publish.perl">         publish.perl</a>
 ;    .. pub-refine-start     <a href="pub-refine-start.spi"> pub-refine-start</a>          
 ;    .... refine-settings    <a href="refine-settings.spi">  refine-settings.spi</a>            
 ;    ...... refine-prjloop   <a href="refine-prjloop.spi">   refine-prjloop.spi</a>            
 ;    ...... refine-loop      <a href="refine-loop.spi">      refine-loop.spi</a>            
 ;    ...... refine-smangloop <a href="refine-smangloop.spi"> refine-smangloop.spi</a>            
 ;    ........ refine-bp      <a href="refine-bp.spi">        refine-bp.spi</a>            
 ;    refine-merge            <a href="refine-merge.spi">     refine-merge.spi</a>
d71 1
a71 1
   0 
@


1.88
log
@procedures renamed
@
text
@d1 1
a1 1
 ; <html><head><title>Controls and synchronizes refinement</title></head><body><pre>
d17 1
d20 2
a21 2
 ;          multiple iteration refinement on parallel cluster using: PubSub to control
 ;          distribution of parallel jobs. Each data group uses one parallel process.
a34 1
 ;   [group_align_orig]      ../Reconstruction/input/bp_align_01_***  Alignment parameter files      (one/group)
d40 1
d72 2
d80 1
a80 1
   2 
d84 1
d97 2
a98 2
 @@show-r2([r2],[alignsh],[prj-radius])
   final/vol_01_s1                ; Reference volume
d125 3
a127 2
   [script] = 'publish ./spider $PRJEXT/$DATEXT @@pub-refine-start'
   @@pub-submit([iter],[num-grps],[task])
d134 1
a134 1
   @@refine-merge([pixsiz],[iter],[ampenhance],[r2],[sphdecon])
@


1.87
log
@*** empty log message ***
@
text
@d34 1
a39 1
 ;    refine-show-r2          <a href="refine-show-r2.spi">   refine-show-r2.spi</a>
d77 1
a77 1
   0 
a80 1
 [pubsub] = 1                ; Using PubSub
d93 1
a93 1
 @@refine-show-r2([r2],[alignsh],[prj-radius])
d129 1
a129 1
   @@pub-refine-merge([pixsiz],[iter],[ampenhance],[r2],[sphdecon],[pubsub])
@


1.86
log
@Gold_standard
@
text
@a33 1
 ;   [group_align_orig]      ../Reconstruction/input/bp_align_01_***  Alignment parameter files      (one/group)
d39 1
d81 1
d94 1
a94 1
 @@show-r2([r2],[alignsh],[prj-radius])
d130 1
a130 1
   @@refine-merge([pixsiz],[iter],[ampenhance],[r2],[sphdecon])
@


1.85
log
@Reference projections parallelized
@
text
@d3 1
a3 1
 ; SOURCE: spider/docs/techs/recon1/Procs/pub-refine.spi
d15 2
a16 1
 ;         Reference projections parallelized   ArDean Leith  Oct 2013
d24 1
a24 1
 ; INPUT REGISTERS:
a28 1
 ; 
d30 3
a32 3
 ;   [params]                ../params                                Params file           (one)
 ;   [vol_orig]              ../Reconstruction/vol_01                 Initial volume file   (one)
 ;   [sel_group_orig]        ../Reconstruction/input/bp_sel_group     Group selection file  (one)
d34 1
d38 30
a67 11
 ;    refine-settings          <a href="./refine-settings.spi">    refine-settings.spi</a>
 ;    refine-prepare           <a href="./refine-prepare.spi">     refine-prepare.spi</a>
 ;    refine-refangles         <a href="./refine-refangles.spi">   refine-refangles.spi</a>
 ;
 ;    publish                  <a href="./publish.perl">           publish.perl</a>
 ;    ... pub-refine-start     <a href="./pub-refine-start.spi">   pub-refine-start</a>          
 ;    ....... refine-settings  <a href="./refine-settings.spi">    refine-settings.spi</a>            
 ;    ....... refine-prjloop   <a href="./refine-prjloop.spi">     refine-prjloop.spi</a>            
 ;    ....... refine-loop      <a href="./refine-loop.spi">        refine-loop.spi</a>            
 ;    ....... refine-smangloop <a href="./refine-smangloop.spi">   refine-smangloop.spi</a>            
 ;    ....... refine-bp        <a href="./refine-bp.spi">          refine-bp.spi</a>            
d69 1
a69 5
 ;    refine-merge             <a href="./refine-merge.spi">       refine-merge.spi</a>
 ;    ... enhance (optional)   <a href="./enhance.spi">            enhance.spi</a>
 ;
 ; ---------------------------------------------------------------------
 ; -- END BATCH HEADER --
d76 2
a77 5
   SET MP                    ; Use only one or two processors on master node!!
  2 

 SYS
   echo -n "  Refining the reconstruction   "  ;  date '+ TIME: %x  %X' 
d80 1
a80 1
 @@refine-settings([pixsiz],[r2],[alignsh],[prj-radius],[iter1],[iter-end],[lambda],[smallang-yn],[winsiz],[incore-yn],[prepare-yn],[bp-type])
d83 2
a84 2
    ; Prepare input files (only needs to be done once)  
    @@refine-prepare([iter1]) 
d86 1
d88 1
a88 1
   echo -e '  Alignment shift:   {%I0%[alignsh]}   Alignment radius: {%I0%[r2]}'
d92 3
d96 1
a96 1
 SD / ITERATION        MASKED-RES    RESOLUTION
d104 1
d106 1
a106 1
 DO [iter]=[iter1],[iter-end] ; Loop over all iterations ----------------------------------
a107 1
   ; Set angles used for making reference projections. Creates: [iter_refangs] doc file for angles
d110 2
a111 7
   !SYS
     !echo "  Projecting: [current_vol]  Iteration: {%I0%[iter]}  Groups:{%I0%[num-grps]}  Angles:{%I0%[num-angs]} " 

    ; Generate 4 digit random number for semi-unique SYNC file numbering
   [rn]   = int(ran(0.0)*9999)

   [task] = 2                    ; pub-refine-start will start: refine-pjloop 
d113 1
a113 1
   DO [grp] = 1,[num-grps]       ; Loop over all projection groups 
d115 13
a127 5
      ; Use pub-refine-start to run: refine-pjloop  for each group
      SYS
         publish './spider $PRJEXT/$DATEXT @@pub-refine-start {%I3%[grp]} task={*[task]} iter={**[iter]} grp={***[grp]} rn={****[rn]}' 
     
   ENDDO                         ; End of: Loop over all projection groups 
d129 1
a129 21
   ; Wait for all subscribers to finish projection loop
   @@pub-refine-wait([num-grps],[iter],[rn])
      [finished_file]            ; File created when finished (one/group)


   SYS
     echo "  Merging reference projection files into single stack "

   DO [grp] = 1,[num-grps]       ; Loop over all projection groups ----------------

      MD                           
        RESULTS OFF              ; Discard further results file info
      DO                         ; Loop over all projections in group 
        UD NEXT [in],[psi],[theta],[phi],[out],[igo],[iend]
          [iter_refangs_grp]     ; Reference projection angles doc file   (input)
        IF ( [in] == 0 ) EXIT

        !  echo "  Copy: [ref_projs_grp][in] -->  [ref_projs]@@{*****[out]}"
        CP
          [ref_projs_grp][in]    ; Template for ref. projections          (input) 
          [ref_projs]@@*****[out] ; Template for ref. projections          (output)
a130 42
      ENDDO                      ; End of:  DO     Loop over all projections 
      MD                           
        RESULTS ON               ; Save further results file info

      UD NEXT END                ; Close doc file
        [iter_refangs_grp]       ; Reference projection angles doc file   (input)

   ENDDO                         ; End of: DO [grp] = 1 ---------------------------

   ; Process all groups in parallel refinement

   [task] = [smallang-yn]       ; pub-refine-start starts: refine-loop or refine-smangloop

   ; Generate 4 digit random number for semi-unique SYNC file numbering
   [rn] = int(ran(0.0)*9999)

   DO [i]=1,[num-grps]          ; Loop over all groups -----------------------------

      UD IC [i],[grp]           ; Get group number
        [sel_group]             ; Group selection file     (input)

      ; Use pub-refine-start to create parallel main loop for each group
      ; Finds alignment (AP SHC), aligns (RT SF), backprojects (BP 32F)
      SYS
        publish './spider $PRJEXT/$DATEXT @@pub-refine-start {%I3%[grp]} task={*[task]} iter={**[iter]} grp={***[grp]} rn={****[rn]}' 
     
   ENDDO                       ; End of: Loop over all groups ---------------------


   UD ICE                      ; End doc file usage
     [sel_group]               ; Group selection file     (closed)

   ; Wait for all subscribers to finish main loop

   @@pub-refine-wait([num-grps],[iter],[rn])
     [finished_file]           ; File created when finished (one/group)

   ; Consolidate group volumes (AS S) into output volumes, find resolution (FSC),
   ; filter to limit resolution (FQ), and center the filtered volumes 

   @@refine-merge([pixsiz],[iter],[ampenhance],[r2])

d132 1
a132 2
     echo "  Iteration: {%I0%[iter]} Finished" ; echo

d134 1
a134 2
 ENDDO                        ; End of loop over all iterations -------------------------

d137 1
a137 1
   echo -n "  Refinement finished after iteration: {%I0%[iter]}   " ; date '+ TIME: %x  %X' ; echo " " 
@


1.84
log
@*** empty log message ***
@
text
@d5 11
a15 10
 ;         New                              ArDean Leith  Nov 2000
 ;         [rn] for endmerge                ArDean Leith  May 2005
 ;         [] from publish                  ArDean Leith  Feb 2006
 ;         Ampenhance                       ArDean Leith  May 2006
 ;         More stacks                      ArDean Leith  Dec 2006
 ;         Existing iter_refangs bug        ArDean Leith  Aug 2010
 ;         COG centering                    ArDean Leith  Sep 2010
 ;         Dala files removed               ArDean Leith  Jan 2012
 ;         pixsiz, resol headers,...        ArDean Leith  Aug 2012
 ;         For CTF corrected images         ArDean Leith  Oct 2013
a23 1
 ;   [maxspfreq]              Maximum spatial freq (1/A) (used in prepare)
a26 1
 ;   [lambda]                 Lambda (A) (used in prepare)
d44 1
d61 1
a61 1
  1 
d71 1
a71 4
    @@refine-prepare([pixsiz],[lambda],[iter1]) 
  
    DE
      [iter_resol]            ; Resolution doc file               (removed)
d73 5
d79 1
a79 1
 SD / ITERATION     MASKED-RES    RESOLUTION
d87 1
d91 22
a112 1
   @@refine-refangles([iter],[smallang-yn],[ampenhance],[ang-step],[ang-limit],[num-ang])      
d115 3
a117 1
     echo "  Projecting: [current_vol]  Iteration: {%I0%[iter]}  Angles:{%I0%[num-ang]} " 
d119 24
a142 7
   ; Create stack holding angular reference projections from current volume.
   PJ 3F                      ; Projection operation
     [current_vol]            ; Current reference volume         (input) 
     [prj-radius]             ; Radius of object
     1-[num-ang]              ; Ref. angles used    
     [iter_refangs]           ; Ref. angles doc file             (input)
     [ref_projs]@@******       ; Template for ref. projections    (output) 
d147 1
a147 3
   ; Process all groups in parallel

   [task] = [smallang-yn]     ; pub-refine-start starts: refine-loop or refine-smangloop
d149 2
a150 3
   DO [i]=1,[num-grps]        ; Loop over all groups ---------------------------
      UD IC [i],[grp]         ; Get group number
        [sel_group]           ; Group selection file     (input)
d157 1
a157 1
   ENDDO                      ; End of: Loop over all groups -------------------
d160 2
a161 2
   UD ICE                     ; End doc file usage
     [sel_group]              ; Group selection file     (closed)
d166 1
a166 1
     [finished_file]          ; File created when finished (one/group)
d177 1
a177 1
 ENDDO                        ; End of loop over all iterations ---------------------------------
d181 1
a181 1
   echo -n "  Refinement finished after iteration: {**[iter]}   " ; date '+ TIME: %x  %X' ; echo " " 
@


1.83
log
@removed align_orig
@
text
@d64 1
a64 1
   echo -n " Refining the reconstruction   "  ;  date '+ TIME: %x  %X' 
d91 1
a91 1
     echo " Projecting: [current_vol]  Iteration: {%I0%[iter]}  Angles:{%I0%[num-ang]} " 
d134 1
a134 1
     echo " Iteration: {%I0%[iter]} Finished" ; echo
d141 1
a141 1
   echo -n " Refinement finished after iteration: {**[iter]}   " ; date '+ TIME: %x  %X' ; echo " " 
@


1.82
log
@vol_01
@
text
@a34 1
 ;   [group_align_orig]      ../Reconstruction/input/bp_align_01_***  Alignment parameter files      (one/group)
@


1.81
log
@refine-setrefangles  renamed
@
text
@d32 1
a32 1
 ;   [vol_orig]              ../Reconstruction/vol01                  Initial volume file   (one)
@


1.80
log
@header cosmetic
@
text
@d41 1
a41 1
 ;    refine-setrefangles      <a href="./refine-setrefangles.spi">     refine-setrefangles.spi</a>
d89 1
a89 1
   @@refine-setrefangles([iter],[smallang-yn],[ampenhance],[ang-step],[ang-limit],[num-ang])      
@


1.79
log
@setrefangles used
@
text
@d41 1
d48 1
a48 1
 ;    pub-refine-wait          <a href="./pub-refine-wait.spi">    pub-refine-wait.spi</a>
a74 2
      [grp_resol]             ; Resolution doc file               (removed)
    DE
d78 1
a78 1
 SD /  ITERATION       GROUP      MASKED-RES    RESOLUTION
a79 4
 SD /  ITERATION       GROUP        RESOLUTION
   [grp_resol]                ; Resolution doc file              (output)
 SD E     
   [grp_resol]                ; Resolution doc file              (finished)
d88 2
a89 2
    ; Set angles used for making reference projections. Creates: [iter_refangs] doc file for angles
   @@refine-setrefangles([iter],[smallang-yn],[ang-step-sm],[theta-sm],[ampenhance],[ang-step],[ang-limit],[num-ang])      
d114 1
a114 2
      ; Finds alignment (AP SHC), aligns (RT SF), backprojects (BP 32F), and 
      ; determines resolution (FSC)    
d117 1
a117 1
      
d124 1
a124 2

   ;  Wait for all subscribers to finish main loop
@


1.78
log
@refine-settings parameters
@
text
@d79 1
a79 1
 SD /  ITERATION        GROUP     MASKED-RES    RESOLUTION
d93 2
a94 33
   RR S [ampenhance]          ; Get amplitude enhancement setting for this iteration
     [amp-enhance-flags]
     [iter]
 
   ; Create reference angle doc file for this iteration 
   DE
     [iter_refangs]           ; Existing reference angles doc file  (removed)

   IF ( [smallang-yn] == 0 ) THEN  
      ; Usual case.  For normal angle refinement
      RR S [ang-step]         ; Get anglular step from string variable
        [ang-steps]           ; Angular step for projection angle  (varies with iteration)
        [iter]

      VO EA [num-angles]      ; Sets [num-angles] to # of reference projections
        [ang-step]            ; Theta angular step          (varies with iteration)
        0, 90.0               ; Theta range, 90 is for use with 'Check Mirrored Positions'
        0, 359.9              ; Phi range
        [iter_refangs]        ; Reference angles doc file       (output)

      RR S [ang-limit]        ; Restriction on angular search   (varies with iteration)
        [ang-limits]          ; Limits string
        [iter]                ; Iteration

   ELSE                       
      ; For small angle refinement around a determined position
      VO EA [num-angles]      ; Sets [num-angles] to # of reference projections
        [ang-step-sm]         ; Theta angular step     
        0,[theta-range]       ; Theta range 
        0, 359.9              ; Phi range
        [iter_refangs]        ; Reference angles doc file       (output)
 
   ENDIF
d97 1
a97 1
     echo " Projecting: [current_vol]  Iteration: {%I0%[iter]}  Angles:{%I0%[num-angles]} " 
d103 1
a103 1
     1-[num-angles]           ; Ref. angles used    
@


1.77
log
@SD /  ITERATION..., header, improved header comments
@
text
@d67 1
a67 1
 @@refine-settings([pixsiz],[r2],[alignsh],[prj-radius],[iter1],[iter-end],[lambda],[smallang-yn],[winsiz],[incore-yn],[prepare-yn])
@


1.76
log
@header
@
text
@d3 1
a3 1
 ; SOURCE: spider/docs/techs/recon1/procs/pub-refine.spi
d16 3
a18 1
 ; PURPOSE: Runs on master node to control PubSub refinement
d29 8
a36 8
 ; '##' denotes iteration,  '##+' denotes next iteration, and '***' denotes group
 ; INPUT FILES:
 ;   [params]                ../params                                Params file  
 ;   [vol_orig]              ../Reconstruction/vol01                  Initial volume file  
 ;   [sel_group_orig]        ../Reconstruction/input/bp_sel_group     Group selection file
 ;   [sel_parts_orig]        ../Reconstruction/input/bp_sel_part_***  Group particle selection files 
 ;   [group_align_orig]      ../Reconstruction/input/bp_align_01_***  Alignment parameter files 
 ;   [unaligned_images_orig] ../Reconstruction/input/bp_data_ctfd_*** Unaligned image stacks 
d49 2
a50 2
 ;    refine-merge             <a href="./refine-mergegroups.spi"> refine-mergegroups.spi</a>
 ;    .... enhance             <a href="./enhance.spi">            enhance.spi</a>
d53 1
a53 2

; -- END BATCH HEADER --
d79 4
a82 4
 SD //     ITERATION       GROUP        RESOLUTION
   [iter_resol]               ; Resolution doc file               (output)
 SD //     ITERATION       GROUP        RESOLUTION
   [grp_resol]                ; Resolution doc file               (output)
d101 1
a101 1
   IF ( [smallang-yn] == 0) THEN  
d103 1
a103 1
      RR S [ang-step]
d118 1
a118 1
      ; For Small angle refinement around a determined position
d158 1
a158 1
   UD ICE                     ; End doc file 'UD IC' use
d160 1
@


1.75
log
@rewrite_syntax_filenames
@
text
@d52 2
@


1.74
log
@[radius] --> [r2], cosmetic
@
text
@d1 50
a50 58
; <html><head><title>Controls and synchronizes refinement</title></head><body><pre>
;
; SOURCE: spider/docs/techs/recon/newprogs/pub_refine.pam
;
;         New                              ArDean Leith  Nov 2000
;         [rn] for endmerge                ArDean Leith  May 2005
;         [] from publish                  ArDean Leith  Feb 2006
;         Ampenhance                       ArDean Leith  May 2006
;         More stacks                      ArDean Leith  Dec 2006
;         Existing iter_refangs bug        ArDean Leith  Aug 2010
;         COG centering                    ArDean Leith  Sep 2010
;         Dala files removed               ArDean Leith  Jan 2012
;         pixsiz, resol headers,...        ArDean Leith  Aug 2012
;
; PURPOSE: Runs on master node to control PubSub refinement
;
; I/O Registers & files are set in: <a href="./refine settings.pam">refine settings.pam</a>
;
; INPUT REGISTERS:
;   [maxspfreq]              Maximum spatial freq (1/A) (used in prepare)
;   [r2]                     Radius of object 
;   [alignsh]                Translation shift allowed is +-[alignsh]
;   [iter-end]               Ending iteration
;   [lambda]                 Lambda (A) (used in prepare)
;
; '##' denotes iteration,  '##+' denotes next iteration, and '***' denotes group
; INPUT FILES:
;   [params]                ../params                             Params file  
;   [vol_orig]              ../Reconstruction/vol01               Starting volume file  
;   [sel_group_orig]        ../Reconstruction/sel_group_cclim     Group selection file
;   [sel_particles_orig]    ../Reconstruction/sel_particles_***   Particle selection files 
;   [group_align_orig]      ../Alignment/align_01_***             Initial alignment parameter files 
;   [unaligned_images]      ../Alignment/data***                  Original unaligned images stacks
;
; PROCEDURES CALLED:
;    refine_settings          <a href="./refine_settings.pam">refine_settings.pam</a>
;    prepare                  <a href="./prepare.pam">prepare.pam</a>
;
;    publish                  <a href="./publish.perl">publish</a>
;    ... pub_refine_start     <a href="./pub_refine_start.pam"> pub_refine_start</a>          
;    ....... refine_settings  <a href="./refine_settings.pam">refine_settings.pam</a>            
;    ....... grploop          <a href="./grploop.pam">grploop.pam</a>            
;    ....... smangloop        <a href="./smangloop.pam">smangloop.pam</a>            
;    ....pub_refine_doc_sync  <a href="./pub_refine_doc_sync.pam">pub_refine_doc_sync.pam</a>
;    pub_refine_wait          <a href="./pub_refine_wait.pam">pub_refine_wait.pam</a>
;
;    mergegroups              <a href="./mergegroups.pam">mergegroups.pam</a>
;    ... enhance              <a href="./enhance.pam">enhance.pam</a>
;    publish                  <a href="./publish.perl">publish</a>
;    ...  pub_refine_start    <a href="./pub_refine_start.pam">pub_refine_start</a>        
;    ...... refine_settings   <a href="./refine_settings.pam">refine_settings.pam</a>            
;    ...... endmerge          <a href="./endmerge.pam">endmerge.pam</a>
;    ....pub_refine_doc_sync  <a href="./pub_refine_doc_sync.pam">pub_refine_doc_sync.pam</a>
;    pub_refine_wait          <a href="./pub_refine_wait.pam">pub_refine_wait.pam</a>
; 
;    endrefine                <a href="./endrefine.pam">endrefine.pam</a>  
;
; ---------------------------------------------------------------------
d57 5
a61 2
   SET MP                    ; Use single processor on master node!!
   1
d64 1
a64 1
 @@refine_settings([pixsiz],[r2],[alignsh],[prj-radius],[iter1],[iter-end],[lambda],[small-ang],[winsize],[converg])
d66 1
a66 1
 IF([iter1].LE.1)THEN 
d68 6
a73 7
    @@prepare([pixsiz],[lambda],[iter1])   
    SD /     Iteration       group        resolution
      [iter_resol]          ; Resolution doc file               (output)
    SD /     Iteration       group        resolution
      [grp_resol]           ; Resolution doc file               (output)
    SD E     
      [grp_resol]           ; Resolution doc file              (finished)
d76 8
a83 2
 UD N [num-grps]             ; Find number of defocus groups
   [sel_group_sorted]        ; Defocus group selection file      (input)
d85 2
a86 1
 DO [iter]=[iter1],[iter-end]; Loop over all iterations ----------------------------------
d88 1
a88 3
   FT                        ; Fourier on volume 
     [current_vol]           ; Volume produced by previous iter. (input)  
     [iter_vft]              ; For all groups on this iter.      (output)
d90 1
a90 1
   RR S [ampenhance]         ; Amplitude enhancement reg. setting (varies with iteration)
d94 1
d96 1
a96 3
     [iter_refangs]          ; Reference angles doc file         (removed)

   ; Create reference angle doc file for this iteration 
d98 1
a98 1
    IF([small-ang] .EQ. 0) THEN  
d104 1
a104 1
      VO EA [num-angles]      ; Sets [num-angles] to number of reference projections
d111 2
a112 2
        [ang-limits] 
        [iter]
d115 2
a116 2
      ; For Small angle refinement
      VO EA [num-angles]      ; Sets [num-angles] to number of reference projections
d122 4
a125 1
    ENDIF
d127 9
a135 1
   ; Generate 4 digit random number for semi-unique DOC_SYNC file numbering
d138 3
a140 2
   ; Process all defocus groups in parallel
   [task] = [small-ang]       ; Pub_starter selector flag
d143 2
a144 2
      UD IC [i],[grp]         ; Get this defocus group number
        [sel_group_sorted]    ; Defocus group selection file     (input)
d146 5
a150 3
      ; Use pub_refine_start to create parallel grploop for each defocus group   
      VM
        publish './spider $PRJEXT/$DATEXT @@pub_refine_start {***[grp]} task={*[task]} iter={**[iter]} grp={***[grp]} rn={****[rn]}' 
d152 2
a153 1
   ENDDO
d156 1
a156 5
     [sel_group_sorted]

   ;  Wait for all subscribers to finish grploop, returns [num-big]
   [task] = 0                 ; When [task]=0, pub_refine_start starts: grploop
   @@pub_refine_wait([task],[num-big],[num-grps],[iter],[converg],[rn])
d158 1
a158 4
   ; [num-big] returns number of groups having excessive changes
   ; (this is summed in: pub_refine_wait)
   VM
     echo " After pub_refine_wait, Excessive changes in: {***[num-big]} groups"
d160 2
a161 2
   ; If angular changes were small in all groups, can stop iterating now
   IF([num-big].EQ.0) EXIT  
d163 2
a164 2
   ; Consolidate data for CTF corrections, create iteration's output volume
   @@mergegroups([pixsiz],[iter],[ampenhance],[r2])
d166 1
a166 2
   DE                         ; Delete existing iterations Fourier vol.
     [iter_vft]               ; Fourier file                          (removed)                
d168 2
a169 2
   VM
     echo " Iteration: {**[iter]} Finished"
d172 1
a172 20
 ENDDO

 VM                           ; Echo current time 
   echo -n " Alignment halting after iteration: {**[iter]}   " ; date '+ TIME: %x  %X' ; echo " " 

 ; Start up endmerge using PubSub
 DO [i]=1,[num-grps]          ; Loop over all groups ----------------------
    UD IC [i],[grp]           ; Get this defocus group number
      [sel_group_sorted]      ; Defocus group selection file  (input)

    VM                        ; When [task]=2, pub_refine_start starts: endmerge 
      publish './spider $PRJEXT/$DATEXT @@pub_refine_start {***[grp]} task=2 iter={**[iter]} grp={***[grp]} rn={****[rn]}' 
 ENDDO

 UD ICE                       ; End doc file incore use for [sel_group_sorted]
   [sel_group_sorted]

 ; Wait for all parallel endmerge tasks
 [task]=2
 @@pub_refine_wait([task],[num-big],[num-grps],[iter],[converg],[rn])
a173 2
 ; Prepare final resolution files
 @@endrefine([r2],[pixsiz],[iter])    
d175 2
a176 2
 VM                          ; Echo current time 
   echo -n " REFINEMENT FINISHED   " ; date '+ TIME: %x  %X'
d179 1
a179 1
; </body></pre></html>
@


1.73
log
@pixsiz, resol headers,...
@
text
@d21 1
a21 1
;   [radius]                 Radius of structure 
a56 1
;    ....softmask             <a href="./softmask.pam">softmask.pam</a>            
d69 1
a69 1
 @@refine_settings([pixsiz],[radius],[alignsh],[prj-radius],[iter1],[iter-end],[lambda],[small-ang],[winsize],[converg])
d158 1
a158 1
   @@mergegroups([pixsiz],[iter],[ampenhance],[radius])
d189 1
a189 1
 @@endrefine([radius],[pixsiz],[iter])    
@


1.72
log
@no dala files now
@
text
@d5 9
a13 13
;         New                                           ArDean Leith  Nov 2000
;         [rn]                                          ArDean Leith  Feb 2005
;         [rn] for endmerge                             ArDean Leith  May 2005
;         []                                            ArDean Leith  Dec 2005
;         "" on publish line                            ArDean Leith  Jan 2006
;         [] from publish                               ArDean Leith  Feb 2006
;         Ampenhance                                    ArDean Leith  May 2006
;         More stacks                                   ArDean Leith  Dec 2006
;         MP = 1                                        ArDean Leith  Jan 2008
;         File locations changed                        ArDean Leith  Oct 2009
;         Existing iter_refangs bug                     ArDean Leith  Aug 2010
;         COG centering                                 ArDean Leith  Sep 2010
;         Dala files removed                            ArDean Leith  Jan 2012
d20 1
a20 1
;   [sp_maxspfreq]           Maximum spatial freq (1/A) (used in prepare)
d22 1
a22 1
;   [alignsh]                Shift allowed is +-[alignsh]
d24 1
a24 1
;   [sp_lambda]              Lambda (A) (used in prepare)
d26 1
a26 1
;  '##' denotes iteration,  '##+' denotes next iteration, and '***' denotes group
a48 1
;    ... saveresp             <a href="./saveresp.pam">saveresp.pam</a>
a57 1
;    ... saveresp             <a href="./saveresp.pam">saveresp.pam</a>
d61 34
a94 28
MD
TR OFF                       ; Loop info turned off
MD
VB OFF                       ; File info turned off
MD
SET MP                       ; Use single OMP processor on master node!
1

; Input initial parameters & file names but not angular steps
@@refine_settings([sp_maxspfreq],[radius],[alignsh],[prj-radius],[iter1],[iter-end],[sp_lambda],[small-ang],[sp_winsize],[converg])

IF([iter1].LE.1)THEN
   ; Prepare input files (only needs to be done once)  
   @@prepare([sp_maxspfreq],[sp_lambda],[iter1])
ENDIF

UD N [num-grps]               ; Find number of defocus groups
[sel_group_sorted]            ; Defocus group selection file (input)

DO [iter]=[iter1],[iter-end]  ; Loop over all iterations ----------------------------------

   FT                         ; Fourier on volume 
   [current_vol]              ; Volume produced by previous iter.   
   [iter_vft]                 ; Used by all groups on this iter. in xoop - vft

   RR S [ampenhance]          ; Amplitude enhancement reg. setting (varies with iteration)
   ([amp-enhance-flags])
   [iter]
d97 1
a97 1
   [iter_refangs]          ; Reference angles doc file         (removed)
d101 2
a102 3
   IF([small-ang].EQ.0) THEN  

      ; For normal angle refinement
d104 2
a105 2
      ([ang-steps])        ; Angular step for projection angle  (varies with iteration)
      [iter]
d107 9
a115 10
      VO EA [num-angles]   ; Sets [num-angles] to number of reference projections
      [ang-step]           ; Theta angular step          (varies with iteration)
      (0,90.0)             ; Theta range, 90 is for use with 'Check Mirrored Positons:1'
      (0,359.9)            ; Phi range
      [iter_refangs]       ; Reference angles doc file       (output)

      RR S [ang-limit]     ; Restriction on angular search      (varies with iteration)
      ([ang-limits])
      [iter]
   ELSE                    ; Small angle refinement
d117 1
d119 5
a123 5
      VO EA [num-angles]   ; Sets [num-angles] to number of reference projections
      [ang-step-sm]        ; Theta angular step     
      (0,[theta-range])    ; Theta range 
      (0,359.9)            ; Phi range
      [iter_refangs]       ; Reference angles doc file       (output)
d131 1
a131 1
   [task]     = [small-ang]   ; Pub_starter selector flag
d133 1
a133 1
   DO [i]=1,[num-grps]        ;  Loop over all groups ---------------------------
d135 1
a135 1
      [sel_group_sorted]
d139 1
a139 1
      publish './spider $PRJEXT/$DATEXT @@pub_refine_start {***[grp]} task={*[task]} iter={**[iter]} grp={***[grp]} rn={****[rn]}' 
d144 1
a144 1
   [sel_group_sorted]
d147 1
a147 1
   [task] = 0               ; When [task]=0, pub_refine_start starts: grploop
d153 1
a153 1
   echo " After pub_refine_wait, Excessive changes in: {***[num-big]} groups"
d155 1
a155 1
   ; If angular changes were small in all groups, can stop iterations now
d159 1
a159 1
   @@mergegroups([sp_maxspfreq],[iter],[ampenhance])
d161 2
a162 2
   DE                       ; Delete existing iterations Fourier vol.
   [iter_vft]                 
d165 23
a187 24
   echo " Iteration: {**[iter]} Finished"
   MY FL   ; Flush results
ENDDO

VM                          ; Echo current time 
echo -n " Alignment halting after iteration: {**[iter]}   " ; date '+ TIME: %x  %X'
VM
echo " "

; Start up endmerge using PubSub
DO [i]=1,[num-grps]         ; Loop over all groups ----------------------
   UD IC [i],[grp]          ; Get this defocus group number
   [sel_group_sorted]       ; Defocus group selection file  (input)

   VM                       ; When [task]=2, pub_refine_start starts: endmerge 
   publish './spider $PRJEXT/$DATEXT @@pub_refine_start {***[grp]} task=2 iter={**[iter]} grp={***[grp]} rn={****[rn]}' 
ENDDO

UD ICE                      ; End doc file incore use for [sel_group_sorted]
[sel_group_sorted]

; Wait for all parallel endmerge tasks
[task]=2
@@pub_refine_wait([task],[num-big],[num-grps],[iter],[converg],[rn])
d189 2
a190 2
; Prepare final resolution files
@@endrefine([radius],[sp_maxspfreq],[iter])    
d192 2
a193 2
VM                         ; Echo current time 
echo -n " REFINEMENT FINISHED   " ; date '+ TIME: %x  %X'
d195 1
a195 1
EN
d197 5
@


1.71
log
@Wait message put in ..refine_wait...
@
text
@d5 13
a17 13
;         New                                           ArDean Leith Nov 2000
;         [rn]                                          ArDean Leith Feb 2005
;         [rn] for endmerge                             ArDean Leith May 2005
;         []                                            ArDean Leith Dec 2005
;         "" on publish line                            ArDean Leith Jan 2006
;         [] from publish                               ArDean Leith Feb 2006
;         Newdala removed                               ArDean Leith Mar 2006
;         Ampenhance                                    ArDean Leith May 2006
;         More stacks                                   ArDean Leith Dec 2006
;         MP = 1                                        ArDean Leith Jan 2008
;         File locations changed                        ArDean Leith Oct 2009
;         Existing iter_refangs bug                     ArDean Leith Aug 2010
;         COG centering                                 ArDean Leith Sep 2010
d19 1
a19 1
; PURPOSE: Runs on master node to control refinement
d32 2
a33 2
;   [params]                ../params                             Input params file  
;   [vol_orig]              ../Reconstruction/vol01               Input volume file  
d36 2
a37 3
;   [group_align_orig]      ../Alignment/align_01_***             Alignment parameter files 
;   [aligned_images_orig]   ../Alignment/input/dala01_***         Aligned image stacks 
;   [unaligned_images]      ../Alignment/data***                  Original unaligned images stack
d72 1
a72 3
() OFF                       ; No need for () in DO loops          
MD
SET MP                       ; Use single OMP processor on master node
@


1.70
log
@PRJEXT
@
text
@d24 2
a25 2
;   [sp_maxspfreq]           Maximum spatial freq[a-1] (used in prepare)
;   [radius]                 Radius of structure
d28 1
a28 1
;   [sp_lambda]              Lambda(angstroms) (used in prepare)
a149 4
   VM
   echo -n " Waiting for iteration: {**[iter]}   " ; date '+ TIME: %x  %X'
   MY FL                    ; Flush results file

a188 4

VM                          ; Echo current time 
echo -n " Waiting for endmerge for iteration: {**[iter]}  " ; date '+ TIME: %x  %X'
MY FL                       ; Flush results
@


1.69
log
@[ang-step-sm]  (0,[theta-range]) (0,359.9) ; Phi range
@
text
@d143 1
a143 1
      publish './spider pam/$DATEXT @@pub_refine_start {***[grp]} task={*[task]} iter={**[iter]} grp={***[grp]} rn={****[rn]}' 
d188 1
a188 1
   publish './spider pam/$DATEXT @@pub_refine_start {***[grp]} task=2 iter={**[iter]} grp={***[grp]} rn={****[rn]}' 
d206 1
a206 1
echo -n " SUCCESS, REFINEMENT FINISHED   " ; date '+ TIME: %x  %X'
@


1.68
log
@cosmetic labels
@
text
@d21 1
a21 1
; I/O Registers & files are set in: refine settings <a href="./refine settings.pam">refine settings.pam</a>.pam)
d99 2
a100 2
   DE                         ; Do not append to an existing file
   [iter_refangs]             ; Ref. angles doc file     (removed)
d102 7
a108 6
   ; Create reference angle doc file for this iteration
 
   IF ([small-ang].EQ.0) THEN
      ; For regular angle refinement
      RR S [ang-step]         ; Angular step (varies with iteration)
      ([ang-steps])
d111 7
a117 1
      RR S [ang-limit]        ; Restriction on ang. search degrees (varies with iteration)
d120 10
a129 14
  
      VO EA [num-angles]      ; Sets [num-angles] to number of reference projections
      [ang-step]              ; Angular step (varies with iteration)
      (0,90.0)                ; Angles
      (0,359.9)               ; Angles
      [iter_refangs]          ; Reference angles doc file    (output)
   ELSE
      ; For SMALL angle refinement
      VO EA [num-angles]      ; Sets [num-angles] to number of reference projections
      [ang-step]              ; Angular step (Always same)
      (0,[ang-limit])         ; Small Angles
      (0,0)                   ; Small Angles
      [iter_refangs]          ; Reference angles doc file    (output)
   ENDIF
@


1.67
log
@cosmetic label
@
text
@a97 2

   ; Create reference angle doc file for this iteration
d102 2
d118 1
a118 1
      [iter_refangs]          ; Create ref. angles doc file    (output)
d123 3
a125 3
      (0,[ang-limit])         ; SMALL Angles
      (0,0)                   ; SMALL Angles
      [iter_refangs]          ; Create ref. angles doc file    (output)
@


1.66
log
@comment
@
text
@d102 1
a102 1
   [iter_refangs]             ; Create ref. angles doc file    (input)
@


1.65
log
@echo " Iteration: {**[iter]} Finished"
@
text
@d17 1
@


1.64
log
@echo -n , cosmetic
@
text
@d168 2
@


1.63
log
@Existing iter_refangs bug
@
text
@d121 1
a121 1
      [ang-step]              ; Angular step 
d127 1
a127 1
   ; Generate 4 digit random number for pseudo-unique DOC_SYNC file numbering
a145 3
   VM                         ; Echo current time 
   date '+ TIME: %x  %X'

d147 1
a147 1
   echo " Waiting for iteration: {**[iter]}"
d171 2
a172 4
VM                         ; Echo current time 
date '+ TIME: %x  %X'
VM
echo " Alignment halting after iteration: {***[iter]}"
d177 3
a179 3
DO [i]=1,[num-grps]       ; Loop over all groups ----------------------
   UD IC [i],[grp]        ; Get this defocus group number
   [sel_group_sorted]     ; Defocus group selection file  (input)
d181 1
a181 1
   VM                     ; When [task]=2, pub_refine_start starts: endmerge 
d185 1
a185 1
UD ICE                    ; End doc file UD use for [sel_group_sorted]
d188 3
a190 5
VM                         ; Echo current time 
date '+ TIME: %x  %X'
VM
echo " Waiting for endmerge for iteration: {**[iter]}"
MY FL                     ; Flush results
d192 1
a192 1
; Wait for all parallel group tasks
d200 1
a200 3
date '+ TIME: %x  %X'
VM
echo " SUCCESS, REFINEMENT FINISHED"
@


1.62
log
@sp_maxspfreq
@
text
@d3 1
a3 1
; SoURCE: spider/docs/techs/recon/newprogs/pub_refine.pam
d16 1
d98 5
a102 1
   ; Create reference angle doc file for this iteration 
d109 1
a109 1
      RR S [ang-limit]        ;  Restriction on ang. search degrees (varies with iteration)
d127 1
a127 1
   ; Generate 4 digit random number for almost-unique DOC_SYNC file numbering
@


1.61
log
@simplify-rewrite
@
text
@d22 1
a22 1
;   [maxspfreq]              Maximum spatial freq[a-1] (used in prepare)
d26 1
a26 1
;   [lambda]                 Lambda(angstroms) (used in prepare)
d77 1
a77 1
@@refine_settings([maxspfreq],[radius],[alignsh],[prj-radius],[iter1],[iter-end],[lambda],[small-ang],[winsize],[converg])
d81 1
a81 1
   @@prepare([maxspfreq],[lambda],[iter1])
d116 1
a116 1
      [ang-steps]             ; Angular step 
d161 1
a161 1
   @@mergegroups([maxspfreq],[iter],[ampenhance])
d199 1
a199 1
@@endrefine([radius],[maxspfreq],[iter])    
@


1.60
log
@ang-steps & endrefine param. added
@
text
@d3 1
a3 11
; FILE: pub_refine.pam                           ArDean Leith Nov 2000
;                                                ArDean Leith Mar 2004
;                          [rn]                  ArDean Leith Feb 2005
;                          [rn] for endmerge     ArDean Leith May 2005
;                          []                    ArDean Leith Dec 2005
;                          ""on publish line     ArDean Leith Jan 2006
;                          [] from publish       ArDean Leith Feb 2006
;                          Newdala removed       ArDean Leith Mar 2006
;                          Ampenhance fixed      ArDean Leith May 2006
;                          More stacks           ArDean Leith Dec 2006
;                          MP = 1                ArDean Leith Jan 2008
d5 11
a15 1
; MASTER COPY: /net/bali/usr1/spider/docs/techs/recon/newprogs/
d17 1
a17 1
; PURPOSE: Runs on one node to control and synchronize refinement
d22 5
a26 5
;    [maxspfreq]              Maximum spatial freq[a-1] (used in prepare)
;    [radius]                 Radius of structure
;    [alignsh]                Shift allowed is +-[alignsh]
;    [iter-end]               Ending   iteration
;    [lambda]                 Lambda(angstroms) (used in prepare)
d30 7
a36 6
;    [order_select]           input/order_select        Group selection file
;    [sorted_order_select]    input/order_select_sort   Sorted group selection file
;    [unaligned_images]       input/data***             Unaligned stacked image files
;    [aligned_images]         input/dala01_***          Aligned stacked image files
;    [start_group_align]      input/align_01_***        Alignment parameter input file 
;    [start_vol]              input/vol01               Initial starting volume
a39 1
;    sort                     <a href="./sort.pam">sort.pam</a>
d73 1
a73 1
SET MP                       ; Use single OMP processor
d84 2
d87 1
a87 2
;  Loop over all iterations
DO [iter]=[iter1],[iter-end]
d93 1
a93 7
   ; Create ref. angle & ref. selection doc files for this iteration 
   DE
   [iter_ang_voea]            ; Ref. angles doc file
   DE
   [iter_select_voea]         ; Ref. angle selection doc file 

   RR S [ampenhance]          ;  Amplitude enhancement register setting (varies with iteration)
d97 1
d108 1
a108 1
      VO EA,[num-angles]      ; Sets [num-angles] to number of reference projections
d112 1
a112 1
      [iter_ang_voea]         ; Create ref. angles doc file    (output)
d115 1
a115 1
      VO EA,[num-angles]      ; Sets [num-angles] to number of reference projections
d119 1
a119 1
      [iter_ang_voea]         ; Create ref. angles doc file    (output)
d122 2
a123 8
   DOC CREATE                 ; Create ref. angle selection doc file   
   [iter_select_voea]         ; Ref. angle selection doc file  (output)
   (1)                        ; First register
   1-[num-angles]             ; Select all angles
  
   ; Find number of defocus groups
   UD N [num-grps]                
   [sorted_order_select]
d125 2
a126 2
   ; Generate 4digit random number for unique DOC_SYNC file numbering
   [rn]=int(ran(0.0)*9999)
d128 1
a128 3
   ; Process all defocus groups in parallel
   [task] = [small-ang]       ; Pub_starter selector flag
   DO [i]=1,[num-grps]
d130 1
a130 1
      [sorted_order_select]
d135 1
a135 1
      ;
d138 2
a139 2
   UD ICE                     ; End doc file UD ICE use
   [sorted_order_select]
d141 1
a141 1
   VM
d146 1
a146 1
   MY FL   ; Flush results file
d149 1
a149 1
   [task] = 0               ; Pub_starter selector flag
d163 2
a164 5
   DE                       ; Delete vft file.
   [iter_vft]               ; Used by all groups this iter.  

   DE                       ; Delete ref. angle selection file
   [iter_select_voea]       ; Ref. angle selection doc file 
d166 1
a166 1
   MY FL   ; flush results
d169 1
a169 1
VM
d177 3
a179 4

DO [i]=1,[num-grps]     
   UD S [i],[grp]       ; Get defocus group number 
   [sorted_order_select]
d181 1
a181 2
   ;By setting [task]=2 pub_refine_start starts: endmerge 
   VM
d185 2
a186 1
UD E                    ; End doc file UD use for [sorted_order_select]
d188 1
a188 1
VM
d192 1
a192 1
MY FL                   ; Flush results
d194 1
a194 1
; Wait for all subscriber group tasks
d201 1
a201 1
VM
@


1.59
log
@clone dir changes
@
text
@d61 1
a83 1
[xdum]=0.0
a97 6
   RR S [ang-step]            ; Angular step (varies with iteration)
   ([ang-steps])
   [iter]
   RR S [ang-limit]           ;  Restriction on ang. search degrees (varies with iteration)
   ([ang-limits])
   [iter]
d104 8
d120 1
a120 1
      [ang-step]              ; Angular step 
d135 2
a136 2
   ; Generate random number ([rn]) for unique DOC_SYNC files
   [rn]=int(ran([xdum])*9999)
d169 2
a170 2
   ; If angular changes were small in all groups, can stop now
   IF([num-big].EQ.0) GOTO LB71  
d172 1
a172 1
   ; Consolidate data for CTF corrections
a183 2
LB71

d202 1
a202 1
UD E                    ; End doc file UD use
d215 1
a215 1
@@endrefine([maxspfreq],[iter])    
@


1.58
log
@used RR S instead of: RR in loop
@
text
@d86 1
a86 1
DO LB1 [iter]=[iter1],[iter-end]
d138 1
a138 1
   DO LB3 [i]=1,[num-grps]
d146 1
a146 1
   LB3
d180 1
a180 1
LB1
d193 1
a193 1
DO LB11 [i]=1,[num-grps]     
d200 1
a200 1
LB11
@


1.57
log
@MP = 1
@
text
@d70 2
d98 9
a106 10
   DO LB2 I=1,[iter]
      RR [ang-step]           ; Angular step (varies with iteration)
      [ang-steps]

      RR [ang-limit]          ;  Restriction on ang. search degrees (varies with iteration)
      [ang-limits]

      RR [ampenhance]         ;  Amplitude enhancement register setting (varies with iteration)
      [amp-enhance-flags]
   LB2
@


1.56
log
@[grp] may be >99
@
text
@d13 1
d70 2
a71 2
SET MP                       ; Use all available OMP processors
0
@


1.55
log
@[iter1]
@
text
@d142 1
a142 1
      publish './spider pam/$DATEXT @@pub_refine_start {**[grp]} task={*[task]} iter={**[iter]} grp={**[grp]} rn={****[rn]}' 
d197 1
a197 1
   publish './spider pam/$DATEXT @@pub_refine_start {**[grp]} task=2 iter={**[iter]} grp={**[grp]} rn={****[rn]}' 
@


1.54
log
@added stacks, named variables
@
text
@d5 8
a12 8
;                            [rn]                ArDean Leith Feb 2005
;                            [rn] for endmerge   ArDean Leith May 2005
;                            []                  ArDean Leith Dec 2005
;                            ""on publish line   ArDean Leith Jan 2006
;                            [] from publish     ArDean Leith Feb 2006
;                            newdala removed     ArDean Leith Mar 2006
;                            ampenhance fixed    ArDean Leith May 2006
;                            more stacks         ArDean Leith Dec 2006
a23 1
;    [iter1]                  Starting iteration
d192 2
a193 2
    UD S [i],[grp]     ; Get defocus group number 
    [sorted_order_select]
d195 3
a197 3
    ;By setting [task]=2 pub_refine_start starts: endmerge 
    VM
    publish './spider pam/$DATEXT @@pub_refine_start {**[grp]} task=2 iter={**[iter]} grp={**[grp]} rn={****[rn]}' 
d206 1
a206 1
MY FL   ; flush results
@


1.53
log
@[xdum] defined for RAN call
@
text
@d12 1
d21 6
a26 6
;    [maxspfreq]                    Maximum spatial freq[a-1] (used in prepare)
;    [radius]                       Radius of structure
;    [alignsh]                      Shift allowed is +-[alignsh]
;    [iter1]                        Starting iteration
;    [iter-end]                     Ending   iteration
;    [lambda]                       Lambda(angstroms) (used in prepare)
d28 1
d30 6
a35 13
;    input/data{***grp}@@                 [unaligned_images]   Unaligned stacked image file  
;    input/dala{**iter}_{***group}@@      [aligned_images]     Aligned stacked image files
;    input/align{**iter}_{***group}      [group_align]        Original alignment parameters 
;    input/order_select                  [order_select]       Image ID doc. fil
;    input/vol{**iter}                   [initial_vol]        Initial volume
;
; OUTPUT FILES 
;    input/order_select_sort             [sorted_order_select]  Image ID doc. file (used here also)
;    final/vol{**iter+1}                 [next_vol]             Final output volume for each iter.
;    final/vft{**iter}                   [vft_for_iter]         (deleted here)  
;    final/align{**iter+1}}_{***group}   [next_group_align] 
;    final/dres{**iter+1}_{***group}     [next_group_dres]      (created dres output doc. file
;    jnkdoc{***group}                                           Sync doc file from pubsub tasks
d66 1
a66 1
TR OFF   ; Loop info turned off
d68 4
a71 1
VB OFF   ; File info turned off
a76 6
   ; Sort the group selection file 
   @@sort

   ; Mirror any old alignments (Not needed for 'AP SH' aligned images)
   ; @@newdala([iter1])

d81 2
a83 1
[xdum]=0.0
d123 1
a123 1
   DOC CREATE                 ; Create  doc file
d136 1
a136 1
   [task] = [small-ang]      ; Pub_starter selector flag
d186 3
a188 1
echo " Alignment halted after iteration: {***[iter]}"
d193 1
a193 1
    UD S,[i],[grp]     ; Get defocus group number 
d210 1
a210 1
[task]=1
@


1.52
log
@ampenhance bug
@
text
@d90 1
d140 1
a140 1
   [rn]=int(ran([x])*9999)
@


1.51
log
@removed newdala call
@
text
@d11 1
d56 2
a57 1
;    ...saveresp              <a href="./saveres.pam">saveres.pam</a>
d66 1
a66 1
;    ... saveresp             <a href="./saveres.pam">saveres.pam</a>
d108 3
d176 1
a176 1
   @@mergegroups([maxspfreq],[iter],[unused])
@


1.50
log
@{***[num-big]}
@
text
@d10 1
d80 2
a81 2
   ; Mirror any old alignments
   @@newdala([iter1])
@


1.49
log
@quotes
@
text
@d164 1
a164 1
   echo " After pub_refine_wait, Excessive changes in: {*[num-big]} groups"
@


1.48
log
@IF([iter1].LE.1) was not being run ;
@
text
@d9 1
d143 1
a143 1
      publish './spider pam/$DATEXT @@pub_refine_start {**[grp]} \"[task]={*[task]} [iter]={**[iter]} [grp]={**[grp]} [rn]={****[rn]}\"' 
d196 1
a196 1
    publish './spider pam/$DATEXT @@pub_refine_start {**[grp]} \"[task]=2 [iter]={**[iter]} [grp]={**[grp]} [rn]={****[rn]}\"' 
@


1.47
log
@[rn]
@
text
@d76 1
a76 1
;@@sort
d79 1
a79 1
;@@newdala([iter1])
d82 1
a82 1
;@@prepare([maxspfreq],[lambda],[iter1])
@


1.46
log
@[rn]
@
text
@d76 1
a76 1
   @@sort
d79 1
a79 1
   @@newdala([iter1])
d82 1
a82 1
   @@prepare([maxspfreq],[lambda],[iter1])
a130 3
[rn]=0706
GOTO LB98

a151 1
LB98
@


1.45
log
@uses named registers
@
text
@d5 2
a6 2
;                            [ran]               ArDean Leith Feb 2005
;                            [ran] for endmerge  ArDean Leith May 2005
d8 1
d98 7
d131 3
d145 1
a145 1
      publish './spider pam/$DATEXT @@pub_refine_start {**[grp]} [task]={*[task]} [iter]={**[iter]} [grp]={**[grp]} [rn]={****[rn]}' 
d155 1
d162 1
a162 1
   @@pub_refine_wait([task],[num-big],[num-grps],[iter],[converg],[ran])
d199 1
a199 1
    publish './spider pam/$DATEXT @@pub_refine_start {**[grp]} [task]=2 [iter]={**[iter]} [grp]={**[grp]} [ran]={****[ran]}' 
d212 1
a212 1
@@pub_refine_wait([task],[num-big],[num-grps],[iter],[converg],[ran])
@


1.44
log
@date date fixed
@
text
@d3 5
a7 4
; FILE: pub_refine.pam                          ArDean Leith Nov. 2000
;                                               ArDean Leith Mar. 2004
;                            x59                ArDean Leith Feb 2005
;                            x59 for endmerge   ArDean Leith May 2005
d16 6
a21 6
;    x14                        Maximum spatial freq[a-1] (used in prepare)
;    x51                        Radius of structure
;    x55                        Shift allowed is +-x55
;    x74                        Starting iteration
;    x75                        Ending   iteration
;    x71                        Lambda(angstroms) (used in prepare)
d24 5
a28 5
;    input/data{***grp}@@            [unaligned_images]   Unaligned stacked image file  
;    input/dala{**iter}_{***group}@@ [aligned_images]     Aligned stacked image files
;    input/align{**iter}_{***group} [group_align]        Original alignment parameters 
;    input/order_select             [order_select]       Image ID doc. fil
;    input/vol{**iter}              [initial_vol]        Initial volume
d71 1
a71 2
x76 = 0
@@refine_settings(x76,x11,x11,x14,x51,x55,x56,x74,x75,x71,x70,x52,x16,x90)
d73 1
a73 3
x97 = 1                    ; Beginning image number

IF(x74.LE.1)THEN
d78 1
a78 1
   @@newdala(x74)
d81 1
a81 1
   @@prepare(x14,x71,x74)
d85 1
a85 1
DO LB1 x76=x74,x75
d87 3
a89 3
   FT                      ; Fourier on volume 
   [current_vol]           ; Volume produced by previous iter.   
   [iter_vft]              ; Used by all groups on this iter. in grploop - vft
d93 1
a93 1
   [iter_ang_voea]         ; Ref. angles doc file
d95 1
a95 1
   [iter_select_voea]      ; Ref. angle selection doc file 
a96 3
   ; Update global parameters (x41 & x42 depend on x76)
   x98 = -x76
   @@refine_settings(x98,x41,x42,x14,x51,x55,x56,x74,x75,x71,x70,x52,x16,x90)
d98 1
a98 1
   IF (x70.EQ.0) THEN
d100 2
a101 2
      VO EA,x53               ; Sets x53 to number of reference projections
      x41                     ; Angular step (varies with iteration)
d107 3
a109 3
      VO EA,x53               ; Sets x53 to number of reference projections
      x41                     ; Angular step 
      (0,x42)                 ; SMALL Angles
d117 1
a117 1
   x97-x53                    ; Select all angles
d120 1
a120 1
   UD N,x22                
d123 2
a124 2
   ; Generate random number (x59) for unique DOC_SYNC files
   x59=int(ran(x11)*9999)
d127 3
a129 3
   x10 = x70               ; Pub_starter selector flag
   DO LB3 x78=1,x22
      UD IC,x78,x77         ; Get this defocus group number
d134 1
a134 1
      publish './spider pam/$DATEXT @@pub_refine_start {**x77} x10={*x10} x76={**x76} x77={**x77} x59={****x59}' 
d145 1
a145 1
   echo " Waiting for iteration: {**x76}"
d148 3
a150 3
   ;  Wait for all subscribers to finish grploop, returns x47
   x10 = 0               ; Pub_starter selector flag
   @@pub_refine_wait(x10,x47,x22,x76,x16,x59)
d152 1
a152 1
   ; x47 returns number of groups having excessive changes
d155 1
a155 1
   echo " After pub_refine_wait, Excessive changes in: {**x47} groups"
d158 1
a158 1
   IF(x47.EQ.0) GOTO LB71  
d161 1
a161 1
   @@mergegroups(x14,x76,x90)
d177 1
a177 1
echo " Alignment halted after iteration: {***x76}"
d181 2
a182 3
x86=x76+1 ;
DO LB11 x78=1,x22     
    UD S,x78,x77     ; Get defocus group number - x77
d185 1
a185 1
    ;By setting x10=2 pub_refine_start starts: endmerge 
d187 1
a187 1
    publish './spider pam/$DATEXT @@pub_refine_start {**x77} x10=2 x76={**x76} x77={**x77} x59={****x59}' 
d190 1
a190 1
UD E                     ; End doc file UD use
d195 1
a195 1
echo " Waiting for endmerge for iteration: {**x76}"
d199 2
a200 2
x10=1
@@pub_refine_wait(x10,x47,x22,x76,x16,x59)
d203 1
a203 1
@@endrefine(x14,x76)    
@


1.43
log
@duplicate comment removed
@
text
@d212 1
a212 1
date date '+ TIME: %x  %X'
@


1.42
log
@x59 for endmerge call  bug fixed
@
text
@d12 1
a12 1
; I/O Registers and files are set in: refine settings <a href="./refine settings.pam">refine settings.pam</a>.pam); INPUT REGISTERS:
@


1.41
log
@pub_refine_wait(x10,x47,x22,x76,x16,x59)
@
text
@d3 4
a6 3
; FILE: pub_refine.pam             ArDean Leith Nov. 2000
;                                  ArDean Leith Mar. 2004
;                            x59   ArDean Leith Feb 2005
a186 1
x10=2     ; Set step id to start: endmerge 
d191 1
d193 1
a193 1
    publish './spider pam/$DATEXT @@pub_refine_start {**x77} x76={**x76} x77={**x77} x10=2' 
@


1.40
log
@grploop needs x14 now
@
text
@d154 1
a154 1
   @@pub_refine_wait(x10,x47,x22,x76,x16)
d205 1
a205 1
@@pub_refine_wait(x10,x47,x22,x76,x16)
@


1.39
log
@date
@
text
@d165 1
a165 1
   @@mergegroups(x14,x52,x76,x90)
@


1.38
log
@x59 in sync name
@
text
@d146 2
a147 1
   date
d149 1
a149 1
   echo "Waiting for iteration: {**x76}"
d159 1
a159 1
   echo After pub_refine_wait, Excessive changes in: {**x47} groups 
d179 1
a179 1
date
d181 1
a181 1
echo "Alignment halted after iteration: {***x76}"
d198 1
a198 1
date
d200 1
a200 1
echo "Waiting for endmerge for iteration: {**x76}"
d211 1
a211 1
date
d213 1
a213 1
echo "SUCCESS, REFINEMENT FINISHED"
@


1.37
log
@x90 to mergegroups
@
text
@d3 3
a5 2
; FILE: pub_refine.pam        ArDean Leith Nov. 2000
;                             ArDean Leith Mar. 2004
d127 3
d138 1
a138 1
      publish './spider pam/$DATEXT @@pub_refine_start {**x77} x10={*x10} x76={**x76} x77={**x77}' 
@


1.36
log
@refine_settings passes x90 now
@
text
@d160 1
a160 1
   @@mergegroups(x14,x52,x76)
@


1.35
log
@ refine_settings passes x90 now
@
text
@d49 1
a49 1
;    ...saveres               <a href="./saveres.pam">saveres.pam</a>
d58 1
a58 1
;    ... saveres              <a href="./saveres.pam">saveres.pam</a>
d99 1
a99 1
   @@refine_settings(x98,x41,x42,x14,x51,x55,x56,x74,x75,x71,x70,x52,x16)
@


1.34
log
@newdala added
@
text
@d69 1
a69 1
@@refine_settings(x76,x11,x11,x14,x51,x55,x56,x74,x75,x71,x70,x52,x16)
@


1.33
log
@x52 from settings
@
text
@d74 6
a80 1
   @@sort
@


1.32
log
@x52 (image size) read from params now
@
text
@a78 4
FI x52         ; Query NSAM value (nrow must be = NROW)
[initial_vol]  ; Initial reference volume   
12             ; Nsam 

d112 4
a115 4
   DOC CREATE              ; Create  doc file
   [iter_select_voea]      ; Ref. angle selection doc file  (output)
   (1)                     ; First register
   x97-x53                 ; Select all angles
@


1.31
log
@@@endrefine(x14,x76)
@
text
@d69 1
a69 1
@@refine_settings(x76,x11,x11,x14,x51,x55,x56,x74,x75,x71,x70,x12,x16)
d98 1
a98 1
   @@refine_settings(x98,x41,x42,x14,x51,x55,x56,x74,x75,x71,x70,x12,x16)
@


1.30
log
@refine_settings has wrong # params
@
text
@d147 1
d202 1
a202 1
@@endrefine(x52,x76)    
@


1.29
log
@mergegroups has 3 parameters now
@
text
@d69 1
a69 1
@@refine_settings(x76,x11,x11,x14,x51,x55,x74,x75,x71,x70,x12,x16)
d98 1
a98 1
   @@refine_settings(x98,x41,x42,x14,x51,x55,x74,x75,x71,x70,x12,x16)
@


1.28
log
@[initial_vol] not [current_vol] for FI
@
text
@d3 1
a3 1
; FILE: pub_refine.pam        ArDean Leith Nov 2000
d158 1
a158 1
   @@mergegroups(x52,x76)
@


1.27
log
@x52 not passed now to prepare
@
text
@d80 1
a80 1
[current_vol]  ; Initial reference volume   
@


1.26
log
@pub_refine_wait wrong
@
text
@a72 5
x76=x74        ; [initial_vol] needs this
FI x52         ; Query NSAM value (nrow must be = NROW)
[initial_vol]  ; Initial reference volume   
12             ; Nsam 

d74 1
d76 1
a76 2
   ; Prepare input files (only needs to be done once)  
   @@prepare(x52,x14,x71,x74)
d78 4
@


1.25
log
@makeselect removed
@
text
@d199 1
a199 1
@@pub_refine_wait(x10,x47,x22,x76)
@


1.24
log
@[initial_vol} bug
@
text
@a25 1
;    input/ctfs                     [ctf_input]          CTF Starting file   
a38 1
;    ... makeselect           <a href="./makeselect.pam">makeselect.pam</a>
d207 1
a207 1
echo "HURRAH, REFINMENT FINISHED"
@


1.23
log
@[current_volume] needs x76
@
text
@d75 1
a75 1
x76=x74        ; [current_vol] needs this
d77 1
a77 1
[current_vol]  ; Initial reference volume   
a83 4
ELSE
   FI x52         ; Query NSAM value (nrow must be = NROW)
   [initial_vol]  ; Initial reference volume   
   12             ; Nsam 
d131 1
a131 1
      UD S,x78,x77         ; Get this defocus group number
d139 3
a141 1
   UD E                     ; End doc file UD use
@


1.22
log
@FI x52         ; Query NSAM value for initail vol
@
text
@d75 1
d78 1
a78 1
12             ; nsam 
@


1.21
log
@cosmetic
@
text
@d83 4
@


1.20
log
@ap ref
@
text
@d3 2
a4 1
; pub_refine.pam        ArDean Leith Nov 2000
d6 1
a6 1
; MASTER COPY: /net/bali/usr1/spider/docs/techs/recon/programs/
d12 1
a12 1
; INPUT REGISTERS):
d28 1
a28 1
; OUTPUT FILES (SET IN <a href="./refine_settings.pam">refine_settings.pam</a>):
d124 1
a124 1
   UD N,x22      ; Get this defocus group number
d130 1
a130 1
      UD S,x78,x77      ; Get this defocus group number
d138 1
a138 1
   UD E
d141 2
a143 2
   VM
   date
d147 1
a147 1
   @@pub_refine_wait(x10,x47,x22,x76x16)
d149 2
d152 1
a152 1
   echo After pub_refine_wait, Excessive changes: {**x47} 
d172 2
a174 2
VM
date
d188 1
a188 1
UD E
d191 2
a193 2
VM
date
d204 1
a204 1
echo "HURRAH, FINISHED"
d206 1
a206 1
date
@


1.19
log
@ap ref
rep pub_refine_wait.pam
ap ref
@
text
@a13 1
;    x52                        Image size
a16 2
;    x65                        Starting defocus group selector
;    x66                        Ending   defocus group selector
d70 1
a70 1
@@refine_settings(x76,x11,x11,x14,x51,x52,x55,x74,x75,x65,x66,x71,x70,x12,x16)
a71 1
x22 = x66 - x65 + 1        ; Number of groups
d74 4
d81 1
a81 1
   @@prepare(x65,x66,x52,x14,x71,x74)
d99 1
a99 1
@@refine_settings(x98,x41,x42,x14,x51,x52,x55,x74,x75,x65,x66,x71,x70,x12,x16)
d122 4
d128 1
a128 1
   DO LB3 x78=x65,x66
d146 1
a146 1
   @@pub_refine_wait(x10,x47,x65,x66,x76x16)
d149 1
a149 1
   echo After pub_refine_wait, Excessive changes: {**x47} x66: {***x66}
d160 3
d169 1
a169 1
echo "Alignment stopped after iteration: {***x76}"
d177 1
a177 1
DO LB11 x78=x65,x66     
d195 1
a195 1
@@pub_refine_wait(x10,x47,x65,x66,x76)
@


1.18
log
@align doc file used
@
text
@d23 1
a24 1
;    input/data{***grp}@@            [unaligned_images]   Unaligned stacked image file  
d30 7
a36 8
; OUTPUT FILES:
;    input/order_select_sort                [sorted_order_select]  Image ID doc. file (used here also)
;    final/vol{**iter+1}                    [next_vol]             Final output volume for each iter.
;    final/vft{**iter}                      [vft_for_iter]         (deleted here)  
;    final/align{**iter+1}_{***group}       [next_group_align] 
;    final/defgrp{***grp}/apmd{**iter+1}    [group_apmd] 
;    final/defgrp{***grp}/dres{**iter+1}    [next_group_dres]      (created dres output doc. file
;    jnkdoc{***group}                                              Sync doc file from pubsub tasks
d71 3
a73 3
; Input initial parameters & file names
x76=0
@@refine_settings(x76,x11,x11,x14,x51,x52,x55,x74,x75,x65,x66,x71,x70,x12)
d78 4
a81 5
; Prepare input files (only needs to be done once)  
@@sort
IF(x74.EQ.1)THEN
   @@firstalign(x65,x66,x74)
   ;;;;@@cpangdo(x65,x66,x74)
a82 1
@@prepare(x65,x66,x52,x14,x71,x74)
d99 1
a99 1
   @@refine_settings(x98,x41,x42,x14,x51,x52,x55,x74,x75,x65,x66,x71,x70,x12)
d142 1
a142 1
   @@pub_refine_wait(x10,x47,x65,x66,x76)
d145 1
a145 1
   echo After pub_refine_wait in pub_refine, x47: {***x47} x66: {***x66}
d148 1
a148 1
   IF(x47.EQ.x22) GOTO LB71  
@


1.17
log
@x10 set on pub_refine_wait at end
@
text
@d25 1
a25 1
;    input/trans{**iter}_{***group} [group_trans}        Original alignment offsets 
d34 2
a35 2
;    final/defgrp{***grp}/angles{**iter+1}  [next_group_angles] 
;    final/defgrp{***grp}/apmd{**iter+1}    [group_apmd]
d81 4
a85 1
;;;;@@cpangdo(x65,x66,x74)
a110 1

a171 4
IF (x70.EQ.0) THEN
   @@makealigndoc(x65,x66,x86)   ; Create align files from angles & trans
ENDIF

@


1.16
log
@< --> [
@
text
@d192 1
@


1.15
log
@never stoped befor No. of iters
@
text
@d93 1
a93 1
   <iter_ang_voea>         ; Ref. angles doc file
d95 1
a95 1
   <iter_select_voea>      ; Ref. angle selection doc file 
d107 1
a107 1
      <iter_ang_voea>         ; Create ref. angles doc file    (output)
d115 1
a115 1
      <iter_ang_voea>         ; Create ref. angles doc file    (output)
d119 1
a119 1
   <iter_select_voea>      ; Ref. angle selection doc file  (output)
@


1.14
log
@x86
@
text
@d76 1
a76 1
x12 = x66 - x65 + 1        ; Number of groups
d149 1
a149 1
   IF(x47.EQ.x12) GOTO LB71  
a172 2
x76
x86
@


1.13
log
@*** empty log message ***
@
text
@d169 1
a169 1
x76=x76+1 ; This will now use files created by last iter
d171 1
a171 1
   @@makealigndoc(x65,x66,x76)   ; Create align files from angles & trans
d173 2
@


1.12
log
@*** empty log message ***
@
text
@d50 2
a51 2
;    ....pub_doc_sync         <a href="./pub_doc_sync.pam">pub_doc_sync.pam</a>
;    pub_wait                 <a href="./pub_wait.pam">pub_wait.pam</a>
d59 2
a60 2
;    ....pub_doc_sync         <a href="./pub_doc_sync.pam">pub_doc_sync.pam</a>
;    pub_wait                 <a href="./pub_wait.pam">pub_wait.pam</a>
d143 1
a143 1
   @@pub_wait(x10,x47,x65,x66,x76)
d146 1
a146 1
   echo After pub_wait in pub_refine, x47: {***x47} x66: {***x66}
d192 1
a192 1
@@pub_wait(x10,x47,x65,x66,x76)
@


1.11
log
@update
@
text
@a82 1
;;;@@makealigndoc(x65,x66,x74)
d170 3
@


1.10
log
@; on prepare removed
@
text
@d82 2
a83 3
@@cpangdo(x65,x66,x74)

@@makealigndoc(x65,x66,x74)
@


1.9
log
@*** empty log message ***
@
text
@d80 3
a82 3
;@@sort
;@@prepare(x65,x66,x52,x14,x71,x74)
;@@cpangdo(x65,x66,x74)
d84 1
a84 1
;@@makealigndoc(x65,x66,x74)
@


1.8
log
@*** empty log message ***
@
text
@d9 3
a11 1
; INPUT REGISTERS (SET in  <a href="./refine_settings.pam">refine_settings.pam</a>)):
d18 2
a19 2
;    x65                        Starting defocus group
;    x66                        Ending   defocus group
d22 1
a22 1
; INPUT FILES (SET IN: <a href="./refine_settings.pam">refine_settings.pam</a>):
d30 1
a30 1
; OUTPUT FILES (SET IN: <a href="./refine_settings.pam">refine_settings.pam</a>):
d49 1
d74 1
a74 1
@@refine_settings(x76,x11,x11,x14,x51,x52,x55,x74,x75,x65,x66,x71,x70)
a75 1
x10 = x70                  ; Pub_starter flag
d80 5
a84 3
@@sort
@@prepare(x65,x66,x52,x14,x71,x74)
MY FL
a88 4
   ; Update global parameters (x41 & x42 depend on x76)
   x98 = -x76
   @@refine_settings(x98,x41,x42,x14,x51,x52,x55,x74,x75,x65,x66,x71,x70)

d99 20
a118 7
   VO EA,x53               ; Sets x53 to number of reference projections
   x41                     ; Angular step (varies with iteration)
   (0,90.0)                ; Angles
   (0,359.9)               ; Angles
   <iter_ang_voea>         ; Create ref. angles doc file    (output)
;  (0,x42)                 ; SMALL Angles
;  (0,0)                   ; SMALL Angles
d125 2
a126 1
   ; Process all defocus groups
d133 1
a133 1
      publish 'spider pam/$DATEXT @@pub_refine_start {**x77} x10={*x10} x76={**x76} x77={**x77}' 
d179 1
a179 1
    publish 'spider pam/$DATEXT @@pub_refine_start {**x77} x76={**x76} x77={**x77} x10=2' 
@


1.7
log
@*** empty log message ***
@
text
@d71 1
a71 1
@@refine_settings(x76,x11,x11,x14,x51,x52,x55,x74,x75,x65,x66,x71)
d73 1
a73 1
x10 = 1                    ; Pub_starter flag
d78 1
a78 1
;@@sort
d87 1
a87 1
   @@refine_settings(x98,x41,x42,x14,x51,x52,x55,x74,x75,x65,x66,x71)
d104 2
d116 1
a116 1
 
d119 1
a119 1
      publish 'spider pam/$DATEXT @@pub_refine_start {**x77} x10=1 x76={**x76} x77={**x77}' 
@


1.6
log
@*** empty log message ***
@
text
@d78 1
a78 1
@@sort
@


1.5
log
@*** empty log message ***
@
text
@d1 1
a1 1
; <html><head><title>Controls and synchronizes alignment</title></head><body><pre>
d7 1
a7 1
; PURPOSE: Runs on one node to control and synchronize alignment
a18 1
;    x72                        Lambda(angstroms) (used in prepare)
d71 1
a71 1
@@refine_settings(x76,x11,x11,x14,x51,x52,x55,x74,x75,x65,x66,x71,x72)
d79 1
a79 1
@@prepare(x65,x66,x52,x14,x71,x72,x74)
d87 1
a87 1
   @@refine_settings(x98,x41,x42,x14,x51,x52,x55,x74,x75,x65,x66,x71,x72)
@


1.4
log
@*** empty log message ***
@
text
@d3 1
a3 1
; pub_refine_master.pam        ArDean Leith Nov 2000
d9 1
a9 1
; INPUT REGISTERS (NEED TO SET in  <a href="./refine_settings.pam">refine_settings.pam</a>)):
d21 16
a36 12
; INPUT FILES (SET IN <a href="./refine_settings.pam">refine_settings.pam</a>):
;    input/dala{**iter}_{***group}          Aligned windowed image files         
;    input/data{***group}@@                  Unrotated windowed image files
;    input/trans{**iter}_{***group}         Original alignment offsets 
;    input/order_select_sort   [sorted_order_select]  Image ID doc. file (used here also)
;    input/vol{**iter}         [initial_vol]          Initial volume
;    input/ctfs                [ctf_input]            CTF Starting file   
;
; OUTPUT FILES (SET IN <a href="./refine_settings.pam">refine_settings.pam</a>):
;    final/vol{**iter+1}       [next_vol]       Final output volume for each iter.
;    final/vft{**iter}         [vft_for_iter]   (deleted here)  
;    jnkdoc{***group}                 Sync doc file from pubsub tasks
d39 4
a42 4
;    refine_settings             <a href="./refine_settings.pam">refine_settings.pam</a>
;    sort                        <a href="./sort.pam">sort.pam</a>
;    prepare                     <a href="./prepare.pam">prepare.pam</a>
;    ... makeselect              <a href="./makeselect.pam">makeselect.pam</a>
d44 2
a45 2
;    publish                 <a href="./publish.perl">publish</a>
;    ... pub_refine_start     <a href="./pub_refine_start.pam">pub_refine_start</a)          
d51 4
a54 4
;    mergegroups             <a href="./mergegroups.pam">mergegroups.pam</a>
;    saveres                 <a href="./saveres.pam">saveres.pam</a>
;    publish                 <a href="./publish.perl">publish</a>
;    ... pub_pub_refine_start <a href="./pub_refine_start.pam">pub_refine_start</a)        
d58 1
a58 1
;    pub_wait                <a href="./pub_wait.pam">pub_wait.pam</a>
d60 2
a61 2
;    endrefine               <a href="./endrefine.pam">endrefine.pam</a>  
;    saveres                 <a href="./saveres.pam">saveres.pam</a>
d65 5
d75 1
a75 1
x12 = x66-x65+1            ; Number of defocus groups
d112 1
a112 1
   DO LB3 x78=1,x12
d130 2
a131 1
   @@pub_wait(x10,x47,x12,x76)
d133 1
a133 1
   echo After pub_wait in pub_refine_master, x47: {***x47} x66: {***x66}
d135 2
a136 4
   IF(x47.EQ.x66) THEN  ; x47 equals number of defocus groups
      ;  In all groups angular changes made were small, can stop now
      GOTO LB71
   ENDIF
d139 1
a139 1
   @@mergegroups(x52,x66,x76)
d159 1
a159 1
DO LB11 x78=1,x12     
d168 1
d170 1
a170 1
echo "Waiting for endmerge after iteration: {**x76}"
d175 2
a176 2
; Wait for all subscriber defocus group tasks
@@pub_wait(x10,x47,x66,x76)
@


1.3
log
@only on master
@
text
@a0 1
(x52,x65,x66,x74,x75)
a1 1
; pub_refine.pam        ArDean Leith Nov 2000
d3 1
a3 1
; SOURCE LOCATION: <a href="./pub_refine.pam">pub_refine.pam</a>
d5 2
d9 49
a57 12
; INPUT REGISTERS (FROM CALLER):
; x52                              Image size
; x74                              Starting iteration
; x75                              Ending   iteration
; x65                              Starting defocus group
; x66                              Ending   defocus group
;
; INPUT FILES
;
; OUTPUT FILES:
;
; CALLS:
d61 12
a72 2
X11= 1            ; Pub_starter flag
x12= x66-x65+1    ; Find number of defocus groups
d77 25
a101 4
   FT                    ; Fourier on volume 
   [current_vol]         ; Volume produced by previous iter.   
   [vft_for_iter]        ; Used by all groups on this iter. in grploop - vft

d103 1
a103 1
   DO LB2 x78=1,x12
d107 1
a107 1
      ; Use pub_starter to create parallel grploop for each defocus group   
d109 1
a109 1
      publish 'spider pam/$DATEXT @@pub_starter {**x77} x11=1 x76={**x76} x77={**x77}' 
d111 1
a111 1
   LB2
d121 1
a121 1
   @@wait(x11,x47,x12,x76)
d123 1
a123 1
   echo After wait in pub_refine, x47: {***x47} x66: {***x66}
d133 2
a134 2
   DE                           ; delete vft file.
   [vft_for_iter]               ; used by all groups this iter.  
d146 1
a146 1
; Start up endmerge using pubsub
d148 1
a148 1
x76=x76+1 ; this will now use files created by last iter
d150 1
a150 1
x11=2     ; set step id to start: endmerge 
d152 1
a152 1
    UD S,x78,x77     ; get defocus group number - x77
d154 1
d156 1
a156 1
    publish 'spider pam/$DATEXT @@pub_starter {**x77} x76={**x76} x77={**x77} x11=2' 
d158 1
d161 1
a161 1
echo "Master waiting for endmerge after iteration: {**x76}"
d167 1
a167 1
@@wait(x11,x47,x66,x76)
@


1.2
log
@<>
@
text
@d1 1
d9 6
a14 26
; INPUT (SET BELOW):
; x51 (below)                      Radius of structure
; x52 (below)                      Image size
; x74 (below)                      Starting iteration
; x75 (below)                      Ending   iteration
; x65 (below)                      Starting defocus group
; x66 (below)                      Ending   defocus group
; x71 (below)                      Lambda(angstroms) (used in prepare)
; x72 (below)                      Lambda(angstroms) (used in prepare)
; x14 (below)                      Maximum spatial freq[a-1] (used in prepare)
; INPUT (SET in <a href="./where.pam">where.pam</a>):
; input/dala{**iter}_{***group}    Aligned windowed image files         
; input/data{***group}@@            Unrotated windowed image files
; input/trans{**iter}_{***group}   Original alignment offsets 
; input/order_select_sort   [sorted_order_select]  Image ID doc. file (used here also)
; input/vol{**iter}         [starting_vol]         Starting volume
; input/ctfs                [ctf_input]            CTF Starting file   
;
; The SPIDER procedure: <a href="./send.pam">send.pam</a> contains 
; sample code for copying files to the cluster directories.
:
; OUTPUT:
; final/vol{**iter+1}       [next_vol]       Final output volume for each iter.
; final/vft{**iter}         [vft_for_iter]   (deleted here)  
; jnkdoctmp{***group}              Temp. doc file for pubsub input
; jnkdoc{***group}                 Sync doc file from pubsub tasks
d16 4
a20 32
; where                <a href="./where.pam">where.pam</a>
; prepare              <a href="./prepare.pam">prepare.pam</a>
; ... makeselect       <a href="./makeselect.pam">makeselect.pam</a>
; pub_doc_put          <a href="./pub_doc_put.pam">pub_doc_put.pam</a>
; ... pubsub           <a href="./publish.perl">publish</a>
; ...... pub_starter   <a href="./pub_starter.pam">pub_starter.pam</a>            
; ......... grploop    <a href="./grploop">grploop</a>            
; ............ alirn   <a href="./alirn.pam">alirn.pam</a>
; ............ lang    <a href="./lang.pam">lang.pam</a>
; wait                 <a href="./wait.pam">wait.pam</a>
; mergegroups          <a href="./mergegroups.pam">mergegroups.pam</a>
; pub_doc_put          <a href="./pub_doc_put.pam">pub_doc_put.pam</a>
; ... pubsub           <a href="./publish.perl">publish</a>
; ...... pub_starter   <a href="./pub_starter.pam">pub_starter.pam</a>            
; ......... endmerge   <a href="./endmerge.pam">endmerge.pam</a>
; wait                 <a href="./wait.pam">wait.pam</a>
; endrefine            <a href="./endrefine.pam">endrefine.pam</a>  
;
; This refinement program assumes preliminary angular doc files exist.
; The CCF file is windowed to prevent too large shifts of projections.
;
; Modify next nine parameters!!!!
;
x51=76         ; Radius of the structure
x52=155        ; Image size
x55=6          ; Shift allowed is +-x55, input images are padded
x74=1          ; Starting alignment step (iteration)
x75=9          ; Ending alignment step (iteration)
x65=1          ; Starting defocus group
x66=43         ; Ending defocus group
x71=0.02501    ; Lambda[angstroms] (used in prepare)
x14=0.17730496 ; Maximum spatial frequency[a-1] (used in prepare)
d24 2
a25 12
MD
TR OFF    ; loop info turned off
MD
VB OFF    ; file info turned off

@@where ; Input global file name variables

; Prepare input files (only needs to be done once)  
@@sort
@@prepare(x65,x66,x52,x14,x71,x72,x74)

MY FL   ; flush results
d28 1
a28 9
X11= 1
x12= x66-x65+1
DO LB2 x76=x74,x75
   DO LB11 x21=1,x76
      RR x41      ;  Sequence of angular steps, can be modified !!!
      2.0,2.0,2.0,2.0,2.0,1.5,1.5,1.5
      RR x42      ;  Restriction on angular search
      15.0,15.0,5.0,5.0,5.0,5.0,5.0,5.0
   LB11
d30 1
a30 1
   FT
d34 2
a35 2
   ; Create doc files used to start and pass info to published tasks
   DO LB4 x78=1,x12
d38 2
a39 4
   
      ; Communicate register where via document file 
      @@pub_doc_put(x11,x41,x42,x51,x52,x55,x66,x76,x77,x74,x75)

d41 1
a41 1
      publish "cd pubsub_cwd ; spider $PRJEXT/$DATEXT @@pub_starter {**x77} x77={**x77} ; delt pubsub_jobid" 
d43 1
a43 1
   LB4
d47 1
a47 1
   echo "Master waiting for iteration: {***x76}"
d50 1
a50 1
   MY FL   ; Flush results
d55 1
a55 1
   echo "After wait in refine, x47: {***x47} x66: {***x66}"
d62 2
a63 2
   ; consolidate data for CTF corrections
   @@mergegroups(x52,x76)
d68 2
a69 2
   MY FL   ; Flush results
LB2
d80 1
a80 1
x76=x76+1 ; This will now use files created by last iter
d82 3
a84 3
x11=2     ; Set step id to start: endmerge 
DO LB14 x78=1,x12     
    UD S,x78,x77     ; Get defocus group number - x77
a85 3
   
    @@pub_doc_put(x11,x41,x42,x51,x52,x55,x66,x76,x77,x74,x75)

d87 2
a88 2
   publish "cd pubsub_cwd ; spider $PRJEXT/$DATEXT @@pub_starter {**x77} x77={**x77} ; delt pubsub_jobid" 
LB14
d91 1
a91 1
echo "Master waiting for endmerge after iteration: {***x76}"
d94 1
a94 1
MY FL   ; Flush results
d100 1
a100 1
@@endrefine(x76)    
a105 3

; Kill all subscriber tasks
;;;VM
@


1.1
log
@Initial revision
@
text
@d22 3
a24 3
; input/order_select_sort   <sorted_order_select>  Image ID doc. file (used here also)
; input/vol{**iter}         <starting_vol>         Starting volume
; input/ctfs                <ctf_input>            CTF Starting file   
d30 2
a31 2
; final/vol{**iter+1}       <next_vol>       Final output volume for each iter.
; final/vft{**iter}         <vft_for_iter>   (deleted here)  
d76 1
a76 1
@@where ; input global file name variables
d78 1
a78 1
; prepare input files (only needs to be done once)  
d80 1
a80 1
@@prepare [x65,x66,x52,x14,x71,x72,x74]
d84 1
a84 1
;  loop over all iterations
d89 1
a89 1
      RR x41      ;  sequence of angular steps, can be modified !!!
d96 2
a97 2
   <current_vol>         ; volume produced by previous iter.   
   <vft_for_iter>        ; used by all groups on this iter. in grploop - vft
d99 1
a99 1
   ; create doc files used to start and pass info to published tasks
d101 2
a102 2
      UD S,x78,x77      ; get this defocus group number
      <sorted_order_select>
d104 2
a105 2
      ; communicate register where via document file 
      @@pub_doc_put[x11,x41,x42,x51,x52,x55,x66,x76,x77,x74,x75]
d117 1
a117 1
   MY FL   ; flush results
d119 2
a120 2
   ;  wait for all subscribers to finish grploop, returns x47
   @@wait[x11,x47,x12,x76]
d122 1
a122 1
   echo After wait in refine, x47: {***x47} x66: {***x66}
d130 1
a130 1
   @@mergegroups[x52,x76]
d133 1
a133 1
   <vft_for_iter>               ; used by all groups this iter.  
d135 1
a135 1
   MY FL   ; flush results
d145 1
a145 1
; start up endmerge using pubsub
d147 1
a147 1
x76=x76+1 ; this will now use files created by last iter
d149 1
a149 1
x11=2     ; set step id to start: endmerge 
d151 2
a152 2
    UD S,x78,x77     ; get defocus group number - x77
    <sorted_order_select>
d154 1
a154 1
    @@pub_doc_put[x11,x41,x42,x51,x52,x55,x66,x76,x77,x74,x75]
d164 1
a164 1
MY FL   ; flush results
d166 2
a167 2
; wait for all subscriber defocus group tasks
@@wait[x11,x47,x66,x76]
d169 2
a170 2
; prepare final resolution files
@@endrefine[x76]    
@
