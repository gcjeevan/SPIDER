head	1.18;
access;
symbols
	Pre_gold:1.2;
locks;
comment	@# @;


1.18
date	2020.06.25.14.55.13;	author leith;	state Exp;
branches;
next	1.17;

1.17
date	2020.06.25.14.44.11;	author leith;	state Exp;
branches;
next	1.16;

1.16
date	2016.07.08.17.04.45;	author leith;	state Exp;
branches;
next	1.15;

1.15
date	2016.07.07.17.29.23;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	2016.07.07.14.46.49;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	2016.07.05.15.59.24;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	2016.07.01.18.01.57;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	2016.03.30.18.07.14;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	2016.03.29.19.59.15;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	2016.03.28.19.08.28;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	2016.03.25.18.07.26;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	2016.03.24.15.47.19;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	2016.03.21.16.28.54;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	2016.03.17.14.10.02;	author leith;	state Exp;
branches;
next	1.4;

1.4
date	2016.03.01.20.09.04;	author leith;	state Exp;
branches;
next	1.3;

1.3
date	2016.02.24.17.14.23;	author leith;	state Exp;
branches;
next	1.2;

1.2
date	2013.11.08.19.26.02;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	2012.05.23.02.54.12;	author tapu;	state Exp;
branches;
next	;


desc
@new file -- settings and filenames for alignment
@


1.18
log
@typo
@
text
@([steptype],[num-grps],[sp_pixsiz],[ang-step],[r2],[alignsh],[prj-radius],[sp_winsiz],[incore-yn],[bp-type],[qsub])
 ;
 ; <html><head><title>Sets reconstruction parameters and files</title></head><body><pre>
 ;
 ; SOURCE: spider/docs/techs/recon1a/Procs/recon_settings.spi
 ;         New                                 ArDean Leith  Jul 2002
 ;         [] variables                        ArDean Leith  Dec 2005
 ;         Rewritten, more stacks              ArDean Leith  Dec 2006
 ;         Variable assignment                 ArDean Leith  Jan 2010
 ;         Even-odd replaced                   ArDean Leith  Jan 2011
 ;         pixsiz returned, fsc                ArDean Leith  Aug 2012
 ;         For CTF corrected images            ArDean Leith  Oct 2013
 ;         For gold standard reconstruction    ArDean Leith  May 2014
 ;         Inlined params, changed dirs        ArDean Leith  Mar 2016
 ;
 ; INPUT REGISTERS:   [steptype] (0==align,  1==reconstruct, 3==restack, <1==none
 ;
 ; OUTPUT REGISTERS (SET  BELOW):
 ;   [num-grps]       Number of groups used
 ;   [sp_pixsiz]      Pixel size                        (A) 
 ;   [ang-step]       Angular step for ref. projections (degrees)
 ;   [r2]             Object alignment radius           (pixels)
 ;   [alignsh]        Alignment shift +- allowed        (pixels) 
 ;   [prj-radius]     Object projection radius          (pixels)
 ;   [sp_winsiz]      Image/window size = volume size   (pixels)
 ;   [incore-yn]      Use incore files                  (1 == true)
 ;   [bp-type]        Backprojection method  (1=='BP CG', 2=='BP 3F', 3=='BP RP', 4=='BP 3N')
 ;   [qsub]           Specifies que type     (1 == use PBS,  <0 == none)
 ;
 ;<b> ---------Set Refinement parameters from parameter file ----------</b>
 
 ; ---- Adjust these parameters for your project --------------- EDIT -----

 [num-grps]    = 10     ; Number of groups

 [qsub]        = 1      ; Specifies que (1 == use PBS,  <0 == none)

 [diam]        = 414    ; Diameter of the structure (A) used in alignment search. EDIT as needed.
 
 [sp_pixsiz]   = 1.1    ; Pixel size from  'params.spi' file (A)  

 [sp_winsiz]   = 400    ; Window size from 'params.spi' file (pixels)   

 [win-frac]    = 0.95   ; Fraction of window diameter used in projection (0.95 == 95%)

 [alignsh]     = 8      ; Alignment shift (pixels) searched is +- this value

 [ang-step]    = 15     ; Angular separation for reference projections

 [bp-type]     = 2      ; Backprojection method (1==BP CG, 2==BP 3F, 3==BP RP, 4==BP 3N)

 [rad-bp]      = -1     ; Radius of reconstructed object, pixels (<0 will use: 95% winsize / 2)

 [incore-yn]   = 1      ; Load input images into incore stack (>0 == Yes, we have enough memory)

 [max-wait]    = 600    ; Maximum delay in seconds for copying stacks before next group starts

 ; ----------------- Original input files ---  EDIT names as needed, These files must exist ------

 GLO [params]           = '../params'                             ; Parameter doc file  (one)  

 GLO [ref_vol_unfilt]   = '../ref_vol_unfilt'                     ; Initial unfiltered reference volume or reference volume (one)   
 GLO [ref_vol]          = '../ref_vol'                            ; Initial filtered   reference volume or reference volume (one)   
 GLO [vol]              = '../ref_vol'                            ; Initial starting volume (== ref vol) (one)   
 
 IF ( [steptype] <= 0) THEN
    GLO [win_dir] = '../win_0'                                    ; Dir. used for alignment
 ELSE
    GLO [win_dir] = '../win_1'                                    ; Dir. used for reconstruction or refinement
 ENDIF

 GLO [sel_group]        = '[win_dir]/sel_group'                   ; Group selection doc file         (one)

 GLO [sel_parts]        = '[win_dir]/sel_part_{***[grp]}'         ; Particle selection doc files     (one/group)

 ; The variable: [unaligned_images] must be an absolute path to images or a link to an absolute path! 
 GLO [unaligned_images] = '[win_dir]/data_{***[grp]}'             ; Original unaligned images stack  (one/group)
               
 ; OPTIONAL local dir for speeding up parallel use 
 GLO [local_work_dir]   = '/scratch'                              ; OPTIONAL local scratch dir for parallel use (one)

 ; OPTIONAL doc file needed if using symmetry                         
 GLO [symmetry_doc]     = '*'                                     ; OPTIONAL symmetry doc file for 'back projection' (one)

 ; -------------- Output files -- Usually no need to edit for default reconstruction ----------

 IF ( [steptype] <= 0) THEN
    GLO [rec_dir]          = '../rec_0/'                          ; Dir. for files from alignment
 ELSE
    GLO [rec_dir]          = '../rec_1'                           ; Dir. for files from reconstruction 
 ENDIF

 GLO [work_dir]            = 'work/'                              ; Dir. for scratch files

 GLO [aligned_images]      = '[rec_dir]/dala_01_{***[grp]}'       ; Aligned image data                 (one/group)

 GLO [vol]                 = '[rec_dir]/vol_00'                   ; Current volume == ref. volume      (one)  

 GLO [next_vol]            = '[rec_dir]/vol_01'                   ; Next volume stem   
 GLO [next_vol_s]          = '[next_vol]_s{*[s]}'                 ; Filtered, shifted volumes          (two)

 GLO [group_vol_stem]      = '[work_dir]/vol_00_{***[grp]}_***'   ; Current group volumes              (two/group) 
 GLO [next_group_vol]      = '[work_dir]/vol_01_{***[grp]}'       ; Next group volume                  (one/group)   

!GLO [next_group_vol_stem] = '[work_dir]/vol_01_***_s{*[s]}'      ; Next group volume stem
 GLO [next_group_vol_stem] = '[work_dir]/vol_{**[next-iter]}_***_s{*[s]}' ; Next subset group volume stem       
 GLO [next_group_vol_s]    = '[next_group_vol]_s{*[s]}'           ; Next group volume                  (two/group)

 GLO [next_group_align]    = '[rec_dir]/align_01_{***[grp]}'      ; Next group alignment doc file stem 

 GLO [iter_refangs]        = '[rec_dir]/ref_angs_00'              ; Reference projection angle file      (one)
 GLO [iter_refangs_grp]    = '[work_dir]/ref_angs_00_{***[grp]}'  ; Reference projection angles doc file (one/group) (deleted)

 GLO [ref_projs]           = '[rec_dir]/ref_projs_00'             ; Reference projections              (one)
 GLO [ref_view_list]       = '[rec_dir]/sel_proj'                 ; List of reference views            (one)

 GLO [fsc_mask]            = '[rec_dir]/fsc_mask'                 ; Mask for FSC                       (one) 
 GLO [next_u_fsc]          = '[rec_dir]/fscdoc_u_01'              ; Unmasked FSC curve doc file        (one)
 GLO [next_m_fsc]          = '[rec_dir]/fscdoc_m_01'              ; Masked   FSC curve doc file        (one)
 GLO [next_gm_fsc]         = '[rec_dir]/fscdoc_gm_01'             ; Masked   gold-standard FSC curve doc file (one only if legacy)
 GLO [fscplots]            = 'fsc_iter.gnu'                       ; Gnuplot script for FSC plotting    (one) 

 GLO [iter_resol]          = '[rec_dir]/resolutions'              ; Overall resolution doc file        (one)
       
 GLO [ref_rings]           = '[work_dir]/SCR_00_{***[grp]}'       ; OPTIONAL Reference rings files output     (one/group)
 GLO [wait_file]           = 'jnk_waited_***'                     ; OPTIONAL Created when local copy finished (one/group)

 GLO [part2global]         = '[win_dir]/part2glonum_***'          ; OPTIONAL Global particle lookup table     (one/group) 
 GLO [global2grp_lut]      = '[win_dir]/global2group'             ; OPTIONAL Combined global lookup table  (one)

 GLO [finished_file]       = 'jnk_sync_{****[rn]}_{***[grp]}'     ; Created when parallel segment finished     (one/group)

 ; ----------------- END BATCH HEADER -------------------------------------------

 ; ---- Usually no need to adjust following parameters 

 [r2] = INT([diam]/(2.0*[sp_pixsiz]))   ; Alignment radius (pixels) used in alignment search

 ; Ensure that sum of alignment radius + translation is within window dimensions 
 [ring-sh] = [r2] + [alignsh]           ; Last ring + translation step
 [maxrad]  = INT([sp_winsiz]/2) - 1     ; Max radius of object in window

 IF ( [ring-sh] >= [maxrad] ) THEN
   ; Must reduce radius of outer ring, not translation step
   [r2] = [maxrad] - [alignsh] - 2      ; Reduces rotational search radius 
 ENDIF

 [prj-radius] = INT(([win-frac]*[sp_winsiz])/2.0 )  ; Convert fraction to pixel radius

 RE
 ; </pre></body></html>

@


1.17
log
@Removed PubSub support
@
text
@d5 1
a5 1
 ; SOURCE: spider/docs/techs/recon1/Procs/recon_settings.spi
@


1.16
log
@[rec_dir] changes with settype
@
text
@d28 1
a28 1
 ;   [qsub]           Specifies que type     (1 == use PBS, 0 == use PubSub,  <0 == none)
d36 1
a36 1
 [qsub]        = 1      ; Specifies que (1 == use PBS, 0 == use PubSub,  <0 == none)
@


1.15
log
@/global2group missing, [iter] removed
@
text
@d87 5
a91 1
 GLO [rec_dir]             = '../rec_1/'                          ; Dir. for reconstruction files
d95 1
a95 1
 GLO [aligned_images]      = '[rec_dir]/dala_00_{***[grp]}'       ; Aligned image data                 (one/group)
d105 2
a106 1
 GLO [next_group_vol_stem] = '[work_dir]/vol_01_***_s{*[s]}'      ; Next group volume stem
d117 1
a117 1
 GLO [m_fsc]               = '[rec_dir]/fscdoc_m_00'              ; Masked   FSC curve doc file        (one)
@


1.14
log
@added part2global
steptype is now an input register
@
text
@d60 1
a60 1
 GLO [params]           = '../params'                              ; Parameter doc file  (one)  
d62 3
a64 3
 GLO [ref_vol_unfilt]   = '../ref_vol_unfilt'                      ; Initial unfiltered reference volume or reference volume (one)   
 GLO [ref_vol]          = '../ref_vol'                             ; Initial filtered   reference volume or reference volume (one)   
 GLO [vol]              = '../ref_vol'                             ; Initial starting volume (== ref vol) (one)   
d67 1
a67 1
    [win_dir] = '../win_0'                                         ; Dir. used for alignment
d69 1
a69 1
    [win_dir] = '../win_1'                                         ; Dir. used for reconstruction or refinement
d72 1
a72 1
 GLO [sel_group]        = '[win_dir]/sel_group'                    ; Group selection doc file         (one)
d74 1
a74 1
 GLO [sel_parts]        = '[win_dir]/sel_part_{***[grp]}'          ; Particle selection doc files     (one/group)
d77 1
a77 1
 GLO [unaligned_images] = '[win_dir]/data_{***[grp]}'              ; Original unaligned images stack  (one/group)
d80 1
a80 1
 GLO [local_work_dir]   = '/scratch'                               ; OPTIONAL local scratch dir for parallel use (one)
d83 1
a83 1
 GLO [symmetry_doc]     = '*'                                      ; OPTIONAL symmetry doc file for 'back projection' (one)
d87 1
a87 1
 GLO [win_dir]             = '../win_1/'                                  ; Dir. for new window files
d89 1
a89 1
 GLO [rec_dir]             = '../rec_1/'                                  ; Dir. for reconstruction files
d91 1
a91 1
 GLO [work_dir]            = 'work/'                                      ; Dir. for scratch files
d93 1
a93 1
 GLO [aligned_images]      = '[rec_dir]/dala_{**[iter]}_{***[grp]}'       ; Aligned image data                 (one/group)
d95 2
a96 1
 GLO [vol]                 = '[rec_dir]/vol_{**[iter]}'                   ; Current volume from previous iter. (two)  
d98 2
a99 2
 GLO [next_vol]            = '[rec_dir]/vol_{**[next-iter]}'              ; Next volume stem   
 GLO [next_vol_s]          = '[next_vol]_s{*[s]}'                         ; Filtered, shifted volumes          (one/iter)
d101 2
a102 2
 GLO [group_vol_stem]      = '[work_dir]/vol_{**[iter]}_{***[grp]}_***'   ; Current group volumes              (two/group/iter) 
 GLO [next_group_vol]      = '[work_dir]/vol_{**[next-iter]}_{***[grp]}'  ; Next group volume                  (one/group/iter)   
d104 1
a104 2
 GLO [next_group_vol_stem] = '[work_dir]/vol_{**[next-iter]}_***_s{*[s]}' ; Next group volume stem
 GLO [next_group_vol_s]    = '[next_group_vol]_s{*[s]}'                   ; Next group volume                  (two/group/iter)
d106 2
a107 1
 GLO [next_group_align]    = '[rec_dir]/align_{**[next-iter]}_{***[grp]}' ; Next group alignment doc file stem 
d109 2
a110 2
 GLO [iter_refangs]        = '[rec_dir]/ref_angs_{**[iter]}'              ; Reference projection angle file      (one/iter)
 GLO [iter_refangs_grp]    = '[work_dir]/ref_angs_{**[iter]}_{***[grp]}'  ; Reference projection angles doc file (one/group/iter) (deleted)
d112 5
a116 2
 GLO [ref_projs]           = '[rec_dir]/ref_projs_{**[iter]}'             ; Reference projections              (one/iter)
 GLO [ref_view_list]       = '[rec_dir]/sel_proj'                         ; List of reference views            (one)
d118 1
a118 7
 GLO [m_fsc]               = '[rec_dir]/fscdoc_m_{**[iter]}'              ; Masked   FSC curve doc file        (one/iter)
 GLO [next_u_fsc]          = '[rec_dir]/fscdoc_u_{**[next-iter]}'         ; Unmasked FSC curve doc file        (one/iter)
 GLO [next_m_fsc]          = '[rec_dir]/fscdoc_m_{**[next-iter]}'         ; Masked   FSC curve doc file        (one/iter)
 GLO [next_gm_fsc]         = '[rec_dir]/fscdoc_gm_{**[next-iter]}'        ; Masked   gold-standard FSC curve doc file (one/iter only if legacy)
 GLO [fscplots]            = 'fsc_iter.gnu'                               ; Gnuplot script for FSC plotting    (one) 

 GLO [iter_resol]          = '[rec_dir]/resolutions'                      ; Overall resolution doc file        (one)
d120 2
a121 2
 GLO [ref_rings]           = '[work_dir]/SCR_{**[iter]}_{***[grp]}'       ; OPTIONAL, Reference rings files output     (one/group/iter)
 GLO [wait_file]           = 'jnk_waited_***'                             ; OPTIONAL, Created when local copy finished (one/group)
d123 2
a124 1
 GLO [part2global]         = '[win_dir]/part2glonum_***'                  ; OPTIONAL, Global particle lookup table     (one/group) 
d126 1
a126 1
 GLO [finished_file]       = 'jnk_sync_{****[rn]}_{***[grp]}'             ; Created when parallel segment finished (one/group)
@


1.13
log
@[win_dir]= '../win_0'
@
text
@d1 1
a1 1
([num-grps],[sp_pixsiz],[ang-step],[r2],[alignsh],[prj-radius],[sp_winsiz],[incore-yn],[bp-type],[qsub])
a11 1
 ;         Skip 3.3,3...                       ArDean Leith  Sep 2012
d16 1
a16 1
 ; INPUT REGISTERS:   None
d19 1
a19 1
 ;   [num-grps]       Nuber of groups used
a45 2
 [incore-yn]   = 1      ; Load input images into incore stack (>0 == Yes, we have enough memory)

d50 1
a50 1
 [bp-type]     = 2      ; Backprojection method (1==BP CG, 2==BP 32F, 3==BP RP, 4==BP 3N)
d54 1
a54 1
 [r-fsc]       = -1     ; Object radius for FSC masking,  pixels (<0 will retrieve from PARAMS file)
d62 9
a70 1
 GLO [win_dir]          = '../win_0'                               ; Dir. for initial files
d76 1
a76 1
 ; This variable: [unaligned_images] must be an absolute path to images or a link to an absolute path! 
a77 5

 GLO [ref_vol_unfilt]   = '[win_dir]/ref_vol_unfilt'               ; Initial unfiltered reference volume or reference volume (one)   
 GLO [ref_vol]          = '[win_dir]/ref_vol'                      ; Initial filtered   reference volume or reference volume (one)   

 GLO [vol]              = '[win_dir]/ref_vol'                      ; Initial starting volume (== ref vol) (one)   
d85 1
a85 1
 ; -------------- Output files -- Usually no need to edit for default refinement ----------
d87 3
a89 1
 GLO [rec_dir]             = '../rec_0/'                                  ; Dir. for significant output files
d124 2
@


1.12
log
@cosmetic
@
text
@a10 1
 ;         Dala removal                        ArDean Leith  Jan 2012
d65 1
a65 1
 GLO [win_dir]          = '../win_1'                               ; Dir. for initial files
d74 2
a75 2
 GLO [ref_vol_unfilt]   = '[rec_dir]/ref_vol_unfilt'               ; Initial unfiltered reference volume or reference volume (one)   
 GLO [ref_vol]          = '[rec_dir]/ref_vol'                      ; Initial filtered   reference volume or reference volume (one)   
d77 1
a77 1
 GLO [vol]              = '[rec_dir]/ref_vol'                      ; Initial starting volume (== ref vol) (one)   
d91 1
a91 1
 GLO [aligned_images]      = '[rec_dir]/dala_{***[grp]}'                  ; Aligned image data                 (one/group)
d109 1
a109 1
 GLO [ref_projs]           = '[rec_dir]/ref_projS_{**[iter]}'             ; Reference projections              (one/iter)
@


1.11
log
@comments
@
text
@d71 1
a72 1

@


1.10
log
@fsc plot file added
@
text
@d52 1
a52 1
 [ang-step]    = 15     ; Angular step for creating reference projections
d66 1
a66 1
 GLO [win_dir]          = '../win_1'                               ; Dir. for starting selection files
d71 1
d117 1
a117 1
 GLO [fscplots]            = 'fsc_iter.gnu'                               ; Text file of gnuplot commands      (one) 
@


1.9
log
@refproj --> ref_projs filename
@
text
@d116 1
@


1.8
log
@file names and locations
@
text
@d109 1
a109 1
 GLO [ref_projs]           = '[rec_dir]/refproj_{**[iter]}'               ; Reference projections              (one/iter)
@


1.7
log
@file names
@
text
@d64 1
a64 1
 GLO [params]           = '../params'                                ; Parameter doc file  (one)  
d66 1
a66 1
 GLO [in_dir]           = '../win_1'                                 ; Dir. for starting selection files
d68 1
a68 1
 GLO [sel_group]        = '[in_dir]/sel_group'                       ; Group selection doc file         (one)
d70 1
a70 1
 GLO [sel_parts]        = '[in_dir]/sel_part_{***[grp]}'             ; Particle selection doc files     (one/group)
d72 1
a72 1
 GLO [unaligned_images] = '[in_dir]/data_{***[grp]}'                 ; Original unaligned images stack  (one/group)
d74 2
a75 2
 GLO [ref_vol_unfilt]   = '[in_dir]/ref_vol_unfilt'                  ; Initial unfiltered reference volume or reference volume (one)   
 GLO [ref_vol]          = '[in_dir]/ref_vol'                         ; Initial filtered   reference volume or reference volume (one)   
d77 1
a77 1
 GLO [vol]              = '[in_dir]/ref_vol'                         ; Initial starting volume (== ref vol) (one)   
d80 1
a80 1
 GLO [local_work_dir]   = '/scratch'                                 ; OPTIONAL local scratch dir for parallel use (one)
d83 1
a83 1
 GLO [symmetry_doc]     = '*'                                        ; OPTIONAL symmetry doc file for 'back projection' (one)
d87 2
a88 1
 GLO [out_dir]             = '../out_1/'                                  ; Dir. for significant output files
d91 1
a91 1
 GLO [aligned_images]      = '[out_dir]/dala_{***[grp]}'                  ; Aligned image data                 (one/group)
d93 1
a93 1
 GLO [vol]                 = '[out_dir]/vol_{**[iter]}'                   ; Current volume from previous iter. (two)  
d95 1
a95 1
 GLO [next_vol]            = '[out_dir]/vol_{**[next-iter]}'              ; Next volume stem   
d104 1
a104 1
 GLO [next_group_align]    = '[out_dir]/align_{**[next-iter]}_{***[grp]}' ; Next group alignment doc file stem 
d106 1
a106 1
 GLO [iter_refangs]        = '[out_dir]/ref_angs_{**[iter]}'              ; Reference projection angle file      (one/iter)
d109 2
a110 2
 GLO [ref_projs]           = '[out_dir]/refproj_{**[iter]}'               ; Reference projections              (one/iter)
 GLO [ref_view_list]       = '[out_dir]/sel_proj'                         ; List of reference views            (one)
d112 4
a115 4
 GLO [m_fsc]               = '[out_dir]/fscdoc_m_{**[iter]}'              ; Masked   FSC curve doc file        (one/iter)
 GLO [next_u_fsc]          = '[out_dir]/fscdoc_u_{**[next-iter]}'         ; Unmasked FSC curve doc file        (one/iter)
 GLO [next_m_fsc]          = '[out_dir]/fscdoc_m_{**[next-iter]}'         ; Masked   FSC curve doc file        (one/iter)
 GLO [next_gm_fsc]         = '[out_dir]/fscdoc_gm_{**[next-iter]}'        ; Masked   gold-standard FSC curve doc file (one/iter only if legacy)
d117 1
a117 1
 GLO [iter_resol]          = '[out_dir]/resolutions'                      ; Overall resolution doc file        (one)
@


1.6
log
@mainly cosmetic
@
text
@d62 1
a62 1
 ; ----------------- Original input files ---  May have to EDIT these names, These files must exist ------
d72 2
d77 2
a78 4
 GLO [vol]              = '[in_dir]/reference_volume_fqnp'           ; Initial reference volume         (one)   

 GLO [unaligned_images] = '[in_dir]/data_{***[grp]}'                 ; Original unaligned images stack  (one/group)
                
a102 1
 GLO [group_align]         = '[out_dir]/align_{**[iter]}_{***[grp]}'      ; Group alignment doc file stem
d105 2
a106 4
 GLO [iter_refangs]        = '[work_dir]/ang_refs_{**[iter]}'             ; Reference angle file                 (one/iter)
 GLO [iter_refangs_grp]    = '[work_dir]/ang_refs_{**[iter]}_{***[grp]}'  ; Reference projection angles doc file (one/group/iter) (deleted)

 GLO [temp_out_images]     = '[out_dir]/dala_***@@'                        ; (Created & deleted if [incore-yn] = 0 )
d108 2
a109 2
 GLO [ref_projs]           = '[work_dir]/refproj_{**[iter]}'              ; Reference projections              (one/iter)
 GLO [ref_view_list]       = '../Averages/sel_proj'                       ; List of reference views     (one)
d114 1
@


1.5
log
@Inlined params, changed dirs
@
text
@d12 1
a12 1
 ;         [pixsiz] returned, fsc, ofsc...     ArDean Leith  Aug 2012
d25 1
a25 1
 ;   [alignsh]        Alignment shift +- allowed  (pixels) 
a26 1
 ;   [smallang-yn]    Small angle refinement flag       (1 == true)
a28 1
 ;   [prepare-yn]     Prepare input files for first use (1 == true)
d85 1
a85 1
 ; -------------- Output files -- No need to edit for default refinement ----------
d106 2
a107 2
 GLO [iter_refangs]        = '[work_dir]/ang_refs_{**[iter]}'             ; Reference angle file               (one/iter)
 GLO [iter_refangs_grp]    = '[work_dir]/ang_refs_{**[iter]}_{***[grp]}'  ; Reference projection angles doc file  (one/group/iter) (deleted)
d127 1
a127 1
 ; ---- Should not need to adjust following parameters --------------------------
@


1.4
log
@for gold
@
text
@d1 1
a1 1
([num-grps],[pixsiz],[ang-step],[r2],[alignsh],[prj-radius],[winsiz],[incore-yn],[bp-type],[qsub])
d5 12
a16 11
 ; SOURCE:  spider/docs/techs/recon1/Procs/recon_settings.spi
 ;          New                                    ArDean Leith Jul 2002
 ;          [] variables                           ArDean Leith Dec 2005
 ;          Rewritten, more stacks                 ArDean Leith Dec 2006
 ;          Variable assignment                    ArDean Leith Jan 2010
 ;          Even-odd replaced                      ArDean Leith Jan 2011
 ;          Dala removal                           ArDean Leith Jan 2012
 ;          [pixsiz] returned, fsc, ofsc...        ArDean Leith Aug 2012
 ;          Skip 3.3,3...                          ArDean Leith Sep 2012
 ;          For CTF corrected images               ArDean Leith Oct 2013
 ;          For gold standard reconstruction       ArDean Leith May 2014
d18 1
a18 1
 ; INPUT REGISTERS:       None
d21 12
a32 9
 ;   [pixsiz]            Pixel size                        (A) 
 ;   [ang-step]          Angular step for ref. projections (degrees)
 ;   [r2]                Object alignment radius           (pixels)
 ;   [prj-radius]        Object projection radius          (pixels)
 ;   [smallang-yn]       Small angle refinement flag       (1 == true)
 ;   [winsiz]            Image/window size = volume size   (pixels)
 ;   [incore-yn]         Usi incore files                  (1 == true)
 ;   [prepare-yn]        Prepare input files for first use (1 == true)
 ;   [bp-type]           Prepare input files for first use (1 == true)
d42 8
a51 2
 [diam]        = 436    ; Diameter of the structure (A) used in alignment search. EDIT as needed.

a53 2
 [win-frac]    = 0.95   ; Fraction of window diameter used in projection (e.g. 0.95 == use 95% of window size)

d64 3
a66 1
 ; ----------------- Original input files ---  May have to EDIT these names ------
d68 1
a68 2
!GLO [input_orig]            = '../Reconstruction/input'                 ; Main dir. for input files
 GLO [input_orig]            = '../data'                                 ; Main dir. for input files
d70 1
a70 1
 GLO [params]                = '../data/params'                               ; Parameter doc file  (one)  
d72 1
a72 2
 GLO [ref_vol_unfilt]        = '[input_orig]/ref_vol_unfilt'             ; Initial unfiltered reference volume or reference volume (one)   
 GLO [ref_vol]               = '[input_orig]/ref_vol'                    ; Initial filtered   reference volume or reference volume (one)   
d74 2
a75 1
 GLO [sel_group_orig]        = '[input_orig]/sel_group'                  ; Group selection doc file  (one)                  
d77 1
a77 1
 GLO [sel_parts_orig]        = '[input_orig]/sel_part_{***[grp]}'        ; Particle selection doc file (one/group)
d79 4
a82 2
!GLO [unaligned_images_orig] = '[input_orig]/bp_data_ctfd_{***[grp]}'    ; Original unaligned images stack (one/group)
 GLO [unaligned_images_orig] = '/usr15/spider/EMPIAR/data/data_{***[grp]}'  ; Original unaligned images stack (one/group)
d84 2
a85 1
 GLO [symmetry_doc]          = '*'                                       ; OPTIONAL symmetry file for 'back projection' (one)
d89 2
a90 4
 GLO [input_dir]             = 'input/'                                  ; Main dir. for input files
 GLO [output_dir]            = 'output/'                                 ; Main dir. for output files
 GLO [temp_work_dir]         = 'work/'                                   ; Temp work dir
 GLO [temp_local_dir]        = '/scratch/'                               ; OPTIONAL local disk scratch dir for PubSub use
d92 1
a92 1
 GLO [sel_group]             = 'input/sel_group'                         ; Group selection doc file           (one)
d94 1
a94 1
 GLO [sel_parts]             = 'input/sel_part_{***[grp]}'               ; Particle selection doc file stem   (one/group)
d96 2
a97 1
 GLO [unaligned_images]      = 'input/data_{***[grp]}'                   ; Unaligned  image data              (one/group)
d99 2
a100 1
 GLO [aligned_images]        = 'output/dala_{***[grp]}'                  ; Aligned image data                 (one/group)
d102 2
a103 2
 GLO [ref_vol]               = '[input_orig]/ref_vol'                    ; Initial filtered   reference volume or reference volume (one)   
 GLO [ref_view_list]         = '../Averages/sel_proj'                    ; List of reference views     (one)
d105 2
a106 1
 GLO [vol]                   = 'output/vol_{**[iter]}'                   ; Current volume from previous iter. (two)  
d108 2
a109 2
 GLO [next_vol]              = 'output/vol_{**[next-iter]}'              ; Next volume stem   
 GLO [next_vol_s]            = '[next_vol]_s{*[s]}'                      ; Filtered, shifted volumes          (one/iter)
d111 1
a111 5
 GLO [group_vol_stem]        = 'work/vol_{**[iter]}_{***[grp]}_***'      ; Current group volumes              (two/group/iter) 
 GLO [next_group_vol]        = 'work/vol_{**[next-iter]}_{***[grp]}'     ; Next group volume                  (one/group/iter)   
 GLO [next_group_vol_stem]   = 'work/vol_{**[next-iter]}_***_s{*[s]}'    ; Next group volume stem
 GLO [next_group_vol]        = 'work/vol_{**[next-iter]}_{***[grp]}'     ; Next group volume                  (one/group/iter)
 GLO [next_group_vol_s]      = '[next_group_vol]_s{*[s]}'                ; Next group volume                  (two/group/iter)
d113 2
a114 2
 GLO [group_align]           = 'output/align_{**[iter]}_{***[grp]}'      ; Group alignment doc file stem
 GLO [next_group_align]      = 'output/align_{**[next-iter]}_{***[grp]}' ; Next group alignment doc file stem 
d116 3
a118 2
 GLO [iter_refangs]          = 'work/ang_refs_{**[iter]}'                ; Reference angle file               (one/iter)
 GLO [iter_refangs_grp]      = 'work/ang_refs_{**[iter]}_{***[grp]}'     ; Reference projection angles doc file  (one/group/iter) (deleted)
d120 1
a120 10
 GLO [temp_out_images]       = 'output/dala_***@@'                        ; (Created & deleted if [incore-yn] = 0 )

 GLO [ref_projs]             = 'work/refproj_{**[iter]}'                 ; Reference projections              (one/iter)
 GLO [ref_view_list]         = '../Averages/sel_proj' ; List of reference views     (one)

 GLO [m_fsc]                 = 'output/fscdoc_m_{**[iter]}'              ; Masked   FSC curve doc file        (one/iter)
 GLO [next_u_fsc]            = 'output/fscdoc_u_{**[next-iter]}'         ; Unmasked FSC curve doc file        (one/iter)
 GLO [next_m_fsc]            = 'output/fscdoc_m_{**[next-iter]}'         ; Masked   FSC curve doc file        (one/iter)

 GLO [iter_resol]            = 'output/resolutions'                      ; Overall resolution doc file        (one)
d122 2
a123 11
 GLO [ref_rings]             = 'work/SCR_{**[iter]}_{***[grp]}'          ; OPTIONAL, Reference rings files output     (one/group/iter)
 GLO [wait_file]             = 'jnk_waited_***'                          ; OPTIONAL, Created when local copy finished (one/group)

 GLO [finished_file]         = 'jnk_sync_{****[rn]}_{***[grp]}'          ; Created when parallel segment finished (one/group)

 ; ----------------- END BATCH HEADER ---------------------------------

 ; Read some reconstruction parameters from doc file

 UD 5, [pixsiz]                        ; Get pixel size (A)   
   [params]                            ; Parameter doc. file
d125 1
a125 2
 UD 17, [winsiz]                       ; Get window size (pixels), used to find projection radius 
   [params]                            ; Parameter doc. file
d127 1
a127 1
 UD E                                  ; End params doc. file usage
d131 1
a131 1
 [r2]  = INT([diam]/(2.0*[pixsiz]))    ; Alignment radius (pixels) used in alignment search
d134 2
a135 2
 [ring-sh] = [r2] + [alignsh]          ; Last ring + translation step
 [maxrad]  = INT([winsiz]/2) - 1       ; Max. radius of object in window
d139 1
a139 1
   [r2] = [maxrad] - [alignsh] - 2     ; Reduces rotational search radius 
d142 1
a142 1
 [prj-radius] = INT(([win-frac]*[winsiz])/2.0 )  ; Convert fraction to pixel radius
@


1.3
log
@rewrite
@
text
@d1 1
a1 1
  ([pixsiz],[ang-step],[r2],[alignsh],[prj-radius],[winsiz],[incore-yn],[prepare-yn],[bp-type],[qsub])
d34 1
a34 1
 [qsub]        = 1      ; Specifies que (1 == use PBS, 0 == use PubSub)
d36 1
a36 3
 [prepare-yn]  = 0;;;1      ; Prepare input images   (>0 == Yes,  only needs to be done once)
 
 [incore-yn]   = 1      ; Load input images into incore stack (>0 == Yes we have enough memory)
d38 1
a38 1
 [bp-type]     = 2      ; Backprojection method (1==BP CG, 2==BP 32F, 3==BP RP, 4==BP 3N)
d41 3
d46 1
a46 1
 [r-fsc]       = -1     ; Object radius for FSC masking, pixels (<0 will retrieve from PARAMS file)
d48 1
a48 1
 [rad-bp]      = -1     ; (For 'BP CG' or 'BP RP') radius of reconstructed volume, pixels (use -1 for 95% winsize / 2)
d50 1
a50 1
 [max-wait]    = 600    ; Maximum headstart in seconds for copying stacks before next group starts
d52 1
a52 1
 [ang-step]    = 15     ; Angular step for creating reference projections
d54 1
a55 1
 ;<b> ============== DO NOT COPY FROM WEB BROWSER ==============</b>
d58 2
a59 2
!GLO [input_orig]            = '../Reconstruction/input'                    ; Main dir. for input files
 GLO [input_orig]            = '../data'                                    ; Main dir. for input files
d61 1
a61 2
 GLO [params]                = '../params'                                  ; Parameter doc file  (one)  
 GLO [params]                = '[input_orig]/params'                        ; Parameter doc file  (one)  
d63 2
a64 6
 GLO [ref_vol_unfilt]        = '[input_orig]/ref_vol_unfilt'                ; Initial unfiltered reference volume or reference volume (one)   

!GLO [vol_orig]              = '../Reconstruction/vol{**[iter]}'            ; Initial reconstructed volume or reference volume (one)   
                 
!GLO [sel_group_orig]        = '[input_orig]/bp_sel_group'                  ; Group selection doc file  (one)                  
 GLO [sel_group_orig]        = '[input_orig]/sel_group'                     ; Group selection doc file  (one)                  
d66 1
a66 1
!GLO [sel_parts_orig]        = '[input_orig]/sel_part_{***[grp]}'           ; Particle selection doc file (one/group)
d68 1
a68 1
 GLO [sel_parts_orig]        = '[input_orig]/sel_part_{***[grp]}'           ; Particle selection doc file (one/group)
d70 1
a70 1
!GLO [unaligned_images_orig] = '[input_orig]/bp_data_ctfd_{***[grp]}'       ; Original unaligned images stack (one/group)
d73 1
a73 1
 GLO [symmetry_doc]          = '*'                                          ; OPTIONAL symmetry file for 'back projection' (one)
a84 1
 GLO [sel_parts_s]           = '[sel_parts]_s{*[s]}'                     ; Particle selection doc file        (one/group)
d87 1
d91 1
a93 3
 GLO [vol_s]                 = '[vol]_s{*[s]}'                           ; Current volume from previous iter. (two)  

 GLO [ref_vol_orig]          = '[input_orig]/ref_vol'                    ; Initial filtered   reference volume or reference volume (one)   
d99 4
a102 1
 GLO [group_vol_s]           = 'work/vol_{**[iter]}_{***[grp]}_s{*[s]'   ; Current group volumes              (two/group/iter) 
a103 3
 GLO [next_group_vol_stem]   = 'work/vol_{**[next-iter]}_***_s{*[s]}'    ; Next group volume stem   
 GLO [next_group_vol]        = 'work/vol_{**[next-iter]}_{***[grp]}'     ; Next group volume                  (one/group/iter)   
 GLO [next_group_vol_s]      = '[next_group_vol]_s{*[s]}'                ; Next group volume                  (two/group/iter) 
a104 1
 GLO [group_align_s]         = '[group_align]_s{*[s]}'                   ; Group alignment doc file stem  
a105 1
 GLO [next_group_align_s]    = '[next_group_align]_s{*[s]}'              ; Next group alignment doc file stem 
d112 2
a113 2
 GLO [ref_projs_s]           = 'work/refproj_{**[iter]}_s{*[s]}'         ; Reference projections              (one/iter)
 GLO [ref_projs_s_grp]       = '[ref_projs_s]_{***[grp]}@@'               ; Group reference projections        (one/group/iter) (deleted)
d115 3
a117 3
 GLO [m_fsc]                 = 'output/fscdoc_m_{**[iter]}'               ; Masked   FSC curve doc file        (one/iter)
 GLO [next_u_fsc]            = 'output/fscdoc_u_{**[next-iter]}'          ; Unmasked FSC curve doc file        (one/iter)
 GLO [next_m_fsc]            = 'output/fscdoc_m_{**[next-iter]}'          ; Masked   FSC curve doc file        (one/iter)
d119 1
a119 1
 GLO [iter_resol]            = 'output/resolutions'                       ; Overall resolution doc file        (one)
@


1.2
log
@rewrite_syntax_filenames
@
text
@d1 55
a55 1
([doalign],[shrange],[step],[r1],[r2],[apply-yn],[local-yn],[incore-yn],[max-wait])
d57 2
a58 10
; <html><head><title>Compute alignment parameters and optionally apply them</title></head><body><pre>
;
; SOURCE: spider/docs/techs/recon1/Procs/apsh-settings.spi   
;
; PURPOSE: Multi-reference alignment of an image series. 
;          Sample images are aligned with reference projections via
;          shifts (translations) and rotations.  
;          FOR PROJECTS WITH MULTIPLE GROUPS- WITH OR WITHOUT PUBSUB.
;
;<b>------------ Edit next 7 Input parameters ------------------------------ 
d60 2
a61 1
 [apply-yn]     = 1   ; Apply alignment to images            (>0 == yes apply alignment)
d63 1
a63 2
 [local-yn]     = 1   ; Copy input images onto local disk    (>0 == yes we have local disks)
 [incore-yn]    = 1   ; Load input images into incore stack  (>0 == yes we have enough memory)
d65 4
a68 2
 [shrange]      = 8   ; Translation search range (must be divisible by step size)
 [step]         = 2   ; Translation step size
d70 1
a70 2
 [diam]         = 276 ; Diameter of object (Angstroms) for alignment search. (OPTIONAL)
                      ; Only used to find last rotational alignment ring radius.
d72 1
a72 2
 [r1]           = 5   ; First rotation alignment ring,  radii > this used for rotational alignment
 [r2]           = 0   ; Last rotation ring    (If == 0, compute from object diameter)
d74 2
a75 1
 [max-wait]     = 600 ; Maximum delay (seconds) for copying stacks before next group starts
d77 1
a77 1
 ; ----------------- Input files --------------------------------------------
d79 1
a79 1
 GLO [outdir]           = 'output'                  ; Input/output directory (one)
d81 4
a84 1
 GLO [params]           = '../params'               ; Parameter settings file  (one)
d86 1
a86 1
 GLO [sel_group]        = 'sel_group'               ; Group selection doc file (one)
d88 2
a89 1
 GLO [ref_images]       = 'prj_01@@'                 ; Reference image stack    (one)
d91 2
a92 1
 GLO [ref_image_angles] = 'refangles'               ; Reference images angles doc file (one)
d94 1
a94 2
!GLO [unaligned_images] = 'data***'                 ; Unaligned particles image stack  (one/group)
 GLO [unaligned_images] = 'data_ctfd_***'           ; Unaligned particles image stack  (one/group)
d96 2
a97 1
 GLO [sel_particles]    = 'sel_part_***'            ; Particle selection doc file (one/group)
d99 1
a99 1
 GLO [temp_local_dir]   = '/scratch'                ; Local directory on compute node ('' == none) 
d101 2
a102 1
 ; ----------------- Output files ------------------------------------------------
d104 2
a105 1
 GLO [align_parameters] = '[outdir]/align_01_***'   ; Alignment parameters doc file (one/group) 
d107 7
a113 1
 GLO [align_params_all] = '[outdir]/align_01_all'   ; Combined alignment parameters (one/group)
d115 2
a116 1
 GLO [aligned_images]   = '[outdir]/dala_01_***'    ; Rotated, shifted (aligned) particles (one/group)
d118 1
a118 1
 GLO [wait_file]        = 'jnk_waited_***'          ; File created when finished local copy (one/group)
d120 2
a121 1
 GLO [finished_file]    = 'jnk_finished_***'        ; File created when finished (one/group)
d123 3
a125 1
 ; ----------------- END BATCH HEADER ------------------------------------------- </b>
d127 26
a152 7
; Get rotational alignment radius from object size if needed 
 IF ( [r2] <= 0 ) THEN                       
    UD 5,[sp_pixsiz]                     ; Get pixel size (A) 
      [params]                           ; Reconstruction parameter file   (input)
 
    UD 17,[sp_winsiz]                    ; Get window size (pixels) 
      [params]                           ; Reconstruction parameter file   (input)
d154 3
a156 7
    [r2] = INT([diam]/(2.0*[sp_pixsiz])) ; Object radius (pixels) for last alignment ring
    [ring-sh] = [r2] + [shrange]         ; Last ring + translation range
    [maxrad]  = INT([sp_winsiz]/2) - 2   ; Max. radius of object in window

    IF ( [ring-sh] >= [maxrad] ) THEN
       [r2] = [maxrad] - [shrange] - 1   ; Reduce radius of outer ring to fit window
    ENDIF
d159 2
a161 1

@


1.1
log
@Initial revision
@
text
@d1 2
a2 1
([doalign],[shrange],[step],[diam],[r1],[r2],[max-wait])
d5 1
a5 7
; SOURCE: spider/docs/techs/recon/newprogs/apshgrp.spi   
;                   New                                 Nov 2004 ArDean Leith
;                   Rewritten                           Feb 2005 ArDean Leith
;                   Added alignment option & stack op   Nov 2006 ArDean Leith
;                   SET MP location                     Feb 2008 ArDean Leith
;                   VAR name                            Feb 2010 ArDean Leith
;                   VAR names changed                   Dec 2010 ArDean Leith
d14 15
a28 1
[doalign]  = 1     ; If >0 apply alignment to images
d30 1
a30 2
[shrange]  = 8     ; Translation search range (must be divisible by step size)
[step]     = 2     ; Translation step size
d32 1
a32 2
[diam]     = 276   ; Diameter of object (Angstroms) for alignment search.
                   ;   (EDIT as needed!) Used to find last rotational alignment radius.
d34 1
a34 2
[r1]       = 5     ; First rotation alignment ring, only radii > this will be analyzed
[r2]       = 0     ; Last rotation ring (If zero, compute from object diameter)
d36 1
a36 1
[max-wait] = 600   ; maximum headstart in seconds for copying stacks before next group starts
d38 1
a38 1
; ----------------- Input files --------------------------------------------
d40 1
a40 1
GLOBAL [params]              = '../params'                  ; Parameter setting file
d42 2
a43 1
GLOBAL [group_list]          = 'sel_group'                  ; List of defocus groups (doc. file)
d45 1
a45 1
GLOBAL [ref_images]          = 'projs/prj_001@@'             ; Reference images  
d47 1
a47 1
GLOBAL [ref_images_angles]   = 'refangles'                  ; Reference images angles doc. file
d49 1
a49 1
GLOBAL [unaligned_images]    = 'data{***[grp]}@@'            ; Unaligned particles images 
d51 1
a51 1
GLOBAL [group_particle_list] = 'apsh_grp_particles***'      ; Group particle list
d53 1
a53 1
; ----------------- Output files ------------------------------------------------
d55 1
a55 2
GLOBAL [temp_images]         = '_8@@'                        ; Local stacks (if fits in memory)
;GLOBAL [temp_images]         = '/var/tmp/data{***[grp]}@@'   ; Local stacks (if doesn't fit in memory)
d57 1
a57 1
GLOBAL [align_parameters]    = 'align_01_***'               ; Alignment parameters doc. file 
d59 1
a59 1
GLOBAL [align_params_all]    = 'align_01_all'               ; Combined alignment parameters
d61 1
a61 1
GLOBAL [aligned_images]      = 'dala01_{***[grp]}@@'         ; Rotated, shifted (aligned) particles
d63 7
a69 1
GLOBAL [dummy_wait_file]     = 'jnk_apshwait***'            ; Dummy file created when finished copying
d71 3
a73 1
GLOBAL [finished_flag]       = 'flag-apsh-done_{***[grp]}'  ; Dummy file created when finished
d75 4
a78 1
; ----------------- END BATCH HEADER ------------------------------------------- </b>
d80 1
a80 1
RE
d82 1
a82 1
; </body></pre></html>
@
