head	1.80;
access;
symbols
	Pre_gold:1.72
	GPL_update:1.51
	pre_rewrite_2010:1.49
	pre_more_stack:1.42
	best-code:1.41
	no-named-regs:1.39
	pre_GPL:1.39
	tag_version1_0:1.39;
locks;
comment	@# @;


1.80
date	2020.06.25.14.58.28;	author leith;	state Exp;
branches;
next	1.79;

1.79
date	2020.06.25.14.50.17;	author leith;	state Exp;
branches;
next	1.78;

1.78
date	2016.05.19.15.38.05;	author leith;	state Exp;
branches;
next	1.77;

1.77
date	2016.03.25.18.45.34;	author leith;	state Exp;
branches;
next	1.76;

1.76
date	2016.03.21.16.25.22;	author leith;	state Exp;
branches;
next	1.75;

1.75
date	2016.03.10.20.24.26;	author leith;	state Exp;
branches;
next	1.74;

1.74
date	2016.02.11.21.00.03;	author leith;	state Exp;
branches;
next	1.73;

1.73
date	2016.02.09.20.31.34;	author leith;	state Exp;
branches;
next	1.72;

1.72
date	2014.09.15.17.52.20;	author leith;	state Exp;
branches;
next	1.71;

1.71
date	2014.05.22.14.52.04;	author leith;	state Exp;
branches;
next	1.70;

1.70
date	2014.05.16.15.47.08;	author leith;	state Exp;
branches;
next	1.69;

1.69
date	2014.05.12.14.25.23;	author leith;	state Exp;
branches;
next	1.68;

1.68
date	2014.05.09.13.21.21;	author leith;	state Exp;
branches;
next	1.67;

1.67
date	2014.05.09.12.36.50;	author leith;	state Exp;
branches;
next	1.66;

1.66
date	2014.05.08.15.38.35;	author leith;	state Exp;
branches;
next	1.65;

1.65
date	2014.05.01.14.59.16;	author leith;	state Exp;
branches;
next	1.64;

1.64
date	2014.04.18.15.30.56;	author leith;	state Exp;
branches;
next	1.63;

1.63
date	2014.04.17.13.26.14;	author leith;	state Exp;
branches;
next	1.62;

1.62
date	2013.12.13.16.52.30;	author leith;	state Exp;
branches;
next	1.61;

1.61
date	2013.11.08.19.28.05;	author leith;	state Exp;
branches;
next	1.60;

1.60
date	2012.09.19.15.40.29;	author leith;	state Exp;
branches;
next	1.59;

1.59
date	2012.09.12.18.15.52;	author leith;	state Exp;
branches;
next	1.58;

1.58
date	2012.09.06.18.09.42;	author leith;	state Exp;
branches;
next	1.57;

1.57
date	2012.08.31.15.58.26;	author leith;	state Exp;
branches;
next	1.56;

1.56
date	2012.01.05.15.46.59;	author leith;	state Exp;
branches;
next	1.55;

1.55
date	2010.11.05.16.04.58;	author leith;	state Exp;
branches;
next	1.54;

1.54
date	2010.11.01.14.47.07;	author leith;	state Exp;
branches;
next	1.53;

1.53
date	2010.10.29.18.42.28;	author leith;	state Exp;
branches;
next	1.52;

1.52
date	2010.08.17.15.15.03;	author leith;	state Exp;
branches;
next	1.51;

1.51
date	2010.01.21.19.05.10;	author leith;	state Exp;
branches;
next	1.50;

1.50
date	2010.01.19.19.07.33;	author leith;	state Exp;
branches;
next	1.49;

1.49
date	2009.10.02.17.14.18;	author leith;	state Exp;
branches;
next	1.48;

1.48
date	2009.04.24.11.27.13;	author leith;	state Exp;
branches;
next	1.47;

1.47
date	2009.04.16.11.20.41;	author leith;	state Exp;
branches;
next	1.46;

1.46
date	2009.02.10.15.24.27;	author leith;	state Exp;
branches;
next	1.45;

1.45
date	2007.02.02.15.27.53;	author leith;	state Exp;
branches;
next	1.44;

1.44
date	2007.01.19.14.41.04;	author leith;	state Exp;
branches;
next	1.43;

1.43
date	2007.01.17.16.35.11;	author leith;	state Exp;
branches;
next	1.42;

1.42
date	2006.05.09.16.28.02;	author leith;	state Exp;
branches;
next	1.41;

1.41
date	2006.01.09.16.42.34;	author leith;	state Exp;
branches;
next	1.40;

1.40
date	2006.01.04.14.28.58;	author leith;	state Exp;
branches;
next	1.39;

1.39
date	2005.02.16.19.14.32;	author leith;	state Exp;
branches;
next	1.38;

1.38
date	2005.02.15.15.13.57;	author leith;	state Exp;
branches;
next	1.37;

1.37
date	2005.02.07.17.04.50;	author leith;	state Exp;
branches;
next	1.36;

1.36
date	2005.02.01.16.24.16;	author leith;	state Exp;
branches;
next	1.35;

1.35
date	2005.01.20.14.58.39;	author leith;	state Exp;
branches;
next	1.34;

1.34
date	2005.01.18.16.43.59;	author leith;	state Exp;
branches;
next	1.33;

1.33
date	2005.01.06.15.30.43;	author leith;	state Exp;
branches;
next	1.32;

1.32
date	2004.11.10.16.40.39;	author leith;	state Exp;
branches;
next	1.31;

1.31
date	2004.09.28.18.39.58;	author leith;	state Exp;
branches;
next	1.30;

1.30
date	2004.09.22.13.58.09;	author leith;	state Exp;
branches;
next	1.29;

1.29
date	2004.08.09.15.50.00;	author leith;	state Exp;
branches;
next	1.28;

1.28
date	2004.07.21.16.32.33;	author leith;	state Exp;
branches;
next	1.27;

1.27
date	2004.07.12.16.26.42;	author leith;	state Exp;
branches;
next	1.26;

1.26
date	2004.06.29.15.40.45;	author leith;	state Exp;
branches;
next	1.25;

1.25
date	2004.06.09.14.39.38;	author leith;	state Exp;
branches;
next	1.24;

1.24
date	2004.06.02.14.27.50;	author leith;	state Exp;
branches;
next	1.23;

1.23
date	2004.05.28.16.35.06;	author leith;	state Exp;
branches;
next	1.22;

1.22
date	2004.05.10.19.07.14;	author leith;	state Exp;
branches;
next	1.21;

1.21
date	2004.03.29.19.44.53;	author leith;	state Exp;
branches;
next	1.20;

1.20
date	2004.03.29.16.10.09;	author leith;	state Exp;
branches;
next	1.19;

1.19
date	2004.03.18.15.13.03;	author leith;	state Exp;
branches;
next	1.18;

1.18
date	2003.11.24.15.13.54;	author bbaxter;	state Exp;
branches;
next	1.17;

1.17
date	2003.09.02.14.48.55;	author leith;	state Exp;
branches;
next	1.16;

1.16
date	2003.08.18.17.32.21;	author leith;	state Exp;
branches;
next	1.15;

1.15
date	2003.08.18.16.26.50;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	2003.04.24.19.15.52;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	2003.04.24.18.58.24;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	2003.04.01.14.51.22;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	2003.03.31.16.25.26;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	2003.03.10.15.34.24;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	2002.10.29.14.39.58;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	2002.10.18.15.19.18;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	2002.10.10.20.38.33;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	2002.10.04.18.45.31;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	2002.10.02.14.33.52;	author leith;	state Exp;
branches;
next	1.4;

1.4
date	2002.10.02.14.30.37;	author leith;	state Exp;
branches;
next	1.3;

1.3
date	2002.09.27.15.45.43;	author leith;	state Exp;
branches;
next	1.2;

1.2
date	2002.09.12.20.26.43;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	2002.09.09.19.32.43;	author leith;	state Exp;
branches;
next	;


desc
@@


1.80
log
@typo
@
text
@ ; <html><head><title>Controls serial reconstruction refinement</title></head><body><pre>
 ;
 ; SOURCE: spider/docs/techs/recon1a/Procs/refine.spi    
 ;         New                               ArDean Leith Nov 2000
 ;         Rewritten                         ArDean Leith Mar 2004
 ;         [] variables                      ArDean Leith Dec 2005
 ;         Ampenhance                        ArDean Leith May 2006
 ;         More stacks                       ArDean Leith Dec 2006
 ;         Small angles limits               ArDean Leith Oct 2010
 ;         pixsiz, resol headers,r2,...      ArDean Leith Aug 2012
 ;         For CTF corrected images          ArDean Leith Oct 2013
 ;         For gold standard reconstruction  ArDean Leith May 2014
 ;
 ; PURPOSE: Controls serial reconstruction refinement.  This is master procedure for
 ;          serial refinement over several iterations. Data may be in one or more groups.
 ;
 ; USAGE:   clean ; ./spider spi/dat @@refine
 ;
 ; I/O Registers and files are set in: <a href="refine-settings.spi">refine-settings.spi</a>
 ;
 ; VARIABLE REGISTERS:
 ;   [pixsiz]                Pixel size 
 ;   [r2]                    Radius of object
 ;   [alignsh]               Shift allowed is +- this value
 ;   [prj-radius]            Radius of object for projection
 ;   [iter1]                 Starting iteration
 ;   [iter-end]              Ending   iteration
 ;   [smallang-yn]           Small angle refinement flag (1 == true) 
 ;
 ; INPUT FILES: ('***' denotes group here)
 ;   [vol_orig]              ../Reconstruction/vol_01                 Initial volume file   (one)
 ;   [sel_group_orig]        ../Reconstruction/input/bp_sel_group     Group selection file  (one)
 ;   [sel_parts_orig]        ../Reconstruction/input/bp_sel_part_***  Group particle selection files (one/group)
 ;   [unaligned_images_orig] ../Reconstruction/input/bp_data_ctfd_*** Unaligned image stacks         (one/group)
 ;
 ; PROCEDURES CALLED:
 ;    refine-settings        <a href="refine-settings.spi">     refine-settings.spi</a>
 ;    refine-show-r2         <a href="refine-show-r2.spi">      refine-show-r2.spi</a>
 ;    refine-setrefangles    <a href="refine-setrefangles.spi"> refine-setrefangles.spi</a>            
 ;    pub-prjrefs            <a href="pub-prjrefs.spi">         pub-prjrefs.spi</a>            
 ;    refine-loop            <a href="refine-loop.spi">         refine-loop.spi</a>            
 ;    refine-smangloop       <a href="refine-smangloop.spi">    refine-smangloop.spi</a>            
 ;    refine-bp              <a href="refine-bp.spi">           refine-bp.spi</a>            
 ;    merge-fsc-filt         <a href="merge-fsc-filt.spi">      merge-fsc-filt.spi</a>
 ;    .. enhance (optional)  <a href="enhance.spi">             enhance.spi</a>
 ;
 ; --------------------------------- END BATCH HEADER --------------------------

 MD
   TR OFF                    ; Loop info turned off
 MD
   VB OFF                    ; File info turned off
 MD
   SET MP                    ; Use only one or two processors if using master node!!
   0 

 ; Input initial parameters & file names but not angular steps
 @@refine-settings([pixsiz],[r2],[alignsh],[prj-radius],[iter1],[iter-end],[sphdecon],[smallang-yn],[qsub],[incore-yn],[gold-std],[bp-type])

 SYS
   echo -e "  Alignment shift:   {%I0%[alignsh]}   Alignment radius: {%I0%[r2]}"
 SYS
   echo    "  Projection radius: {%I0%[prj-radius]}" ; echo

 ; Show alignment and projection radii on center slice of reference volume
 !@@refine-show-r2([r2],[alignsh],[prj-radius])
 !  final/vol_01_s1            ; Reference volume

 SD /     ITERATION     MASKED-RES    RESOLUTION
   [iter_resol]               ; Resolution doc file              (output)
 SD E     
   [iter_resol]               ; Resolution doc file              (finished)

 UD N [num-grps]              ; Find number of groups
   [sel_group]                ; Group selection file      (input)

 IF ( [smallang-yn] == 1 ) THEN
   ; List desired offset angles for reference projections in a doc file.
   @@refine-setrefangles([iter],[smallang-yn],[ampenhance],[ang-step],[ang-limit],[num-angs])      
 ENDIF

 DO [iter]=[iter1],[iter-end] ; Loop over all iterations ----------------------------------

   IF ( [smallang-yn] == 0 ) THEN
     ; List desired angles ('VO EA') for reference projections in a doc file.
     @@refine-setrefangles([iter],[smallang-yn],[ampenhance],[ang-step],[ang-limit],[num-angs])      

     ; Create reference projection stacks ('PJ 3F') from both subset reference volumes. 
     @@pub-prjrefs([iter],1,[prj-radius],[qsub])

   ENDIF

   DO [s] = 1,2               ; Loop over resolution subsets ------------------

     SYS
       echo  " Iteration: {%I0%[iter]}  Projecting: [vol_s]   From: {%I0%[num-ang]} angles" 

     ; Create stacks holding angular reference projections from both current reference volumes.
     PJ 3F                    ; Projection operation
       [vol_s]                ; Vol from previous iteration      (input) 
       [prj-radius]           ; Radius of object
       1-[num-ang]            ; Number of ref. angles used    
       [iter_refangs]         ; Ref. angles doc file             (input)
       [ref_projs_s]@@*****    ; Template for ref. projections    (output) 
   ENDDO

   ; Process all groups serially one-by-one

   DO [grp] = 1,[num-grps]    ; Loop over all  groups  -----------------

      SYS
        echo ; echo -n " Iteration: {%I0%[iter]}  Refining group: {%I4%[grp]}   " ; date  '+ TIME: %x  %X' ; echo

      MY FL                   ; Flush results file

      IF ( [smallang-yn] == 0 ) THEN
        ; For regular angle alignment
        @@refine-loop([ang-step],[ang-limit],[r2],[alignsh],[prj-radius],[iter],[grp],[pixsiz],[incore-yn],[bp-type],[iter-end])
      ELSE
        ; For small angle alignment around a determined position
        @@refine-smangloop([ang-step],[r2],[alignsh],[prj-radius],[iter],[grp]],[pixsiz],[bp-type],[iter-end])
      ENDIF
     
      MY FL                   ; Flush results file

   ENDDO                      ; End of: Loop over all groups -------------------

   UD E                       ; Finished with incore doc file

   ; Merge ('AS S') the group volumes into two subset output volumes,
   ; find resolution ('FSC') by comparing FSC of the two subsets,
   ; filter ('FD C')  the combined volumes using FSC curve to limit resolution, 
   ; merge ('AS S') the two subset output volumes into single overall output volume.

   @@merge-fsc-filt([pixsiz],[iter],[ampenhance],[r2],[sphdecon],[gold-std],[qsub])

   SYS
     echo " Iteration: {%I0%[iter]} Finished" ; echo
   MY FL                      ; Flush results
 ENDDO                        ; End of loop over all iterations ----------------------------

 SYS                          ; Echo current time 
   echo -n "  Refinement finished after iteration: {**[iter]}   " ; date '+ TIME: %x  %X' ; echo  

 EN
 ; </pre></body></html>
@


1.79
log
@removed sphdecon reference
@
text
@d3 1
a3 1
 ; SOURCE: spider/docs/techs/recon1/Procs/refine.spi    
@


1.78
log
@qsub in settings & prjrefs
@
text
@a44 1
 ;    .. sphdecon            <a href="sphdecon.spi">            sphdecon.spi</a>            
@


1.77
log
@[iter-end] parameter
@
text
@d40 1
d59 1
a59 1
 @@refine-settings([pixsiz],[r2],[alignsh],[prj-radius],[iter1],[iter-end],[sphdecon],[smallang-yn],[winsiz],[incore-yn],[gold-std],[bp-type])
d90 1
a90 1
     @@pub-prjrefs([iter],1,[prj-radius])
@


1.76
log
@added gold std toggle
@
text
@a113 5
      [bp-typet] = [bp-type]     
      IF ( [iter] == [iter-end] ) THEN
        [bp-typet] = 1        ; Use 'BP CG' on last iteration if not already
      ENDIF

d118 1
a118 1
        @@refine-loop([ang-step],[ang-limit],[r2],[alignsh],[prj-radius],[iter],[grp],[pixsiz],[incore-yn],[bp-typet])
d121 1
a121 1
        @@refine-smangloop([ang-step],[r2],[alignsh],[prj-radius],[iter],[grp]],[pixsiz],[bp-type])
@


1.75
log
@for gold, renamed from refine-inseries, rewrite
@
text
@d15 1
a15 1
 ;          serial refinement over many iterations. Data may be in one or more groups.
d21 8
a28 9
 ; INPUT REGISTERS:
 ;   [pixsiz]              Pixel size 
 ;   [r2]                  Radius of object
 ;   [alignsh]             Shift allowed is +- this value
 ;   [prj-radius]          Radius of object for projection
 ;   [iter1]               Starting iteration
 ;   [iter-end]            Ending   iteration
 ;   [lambda]              Lambda (A)            (Used in prepare)
 ;   [smallang-yn]         Small angle refinement flag (1 == true) 
d31 1
a31 2
 ;   [params]                ../params                                Params file           (one)
 ;   [vol_orig]              ../Reconstruction/vol01                  Initial volume file   (one)
d37 9
a45 11
 ; 
 ;    refine-settings        <a href="refine-settings.spi">    refine-settings.spi</a>
 ;    refine-prepare         <a href="refine-prepare.spi">     refine-prepare.spi</a>
 ;    refine-show-r2         <a href="refine-show-r2.spi">     refine-show-r2.spi</a>
 ;    refine-setrefangles    <a href="refine-setrefangles.spi">refine-setrefangles.spi</a>            
 ;    refine-loop            <a href="refine-loop.spi">        refine-loop.spi</a>            
 ;    refine-smangloop       <a href="refine-smangloop.spi">   refine-smangloop.spi</a>            
 ;    refine-bp              <a href="refine-bp.spi">          refine-bp.spi</a>            
 ;    merge-fsc-filt         <a href="merge-fsc-filt.spi">     merge-fsc-filt.spi</a>
 ;    .. refine-sphdecon     <a href="refine-sphdecon.spi">    refine-sphdecon.spi</a>            
 ;    .. enhance (optional)  <a href="enhance.spi">            enhance.spi</a>
d58 1
a58 6
 @@refine-settings([pixsiz],[r2],[alignsh],[prj-radius],[iter1],[iter-end],[sphdecon],[smallang-yn],[winsiz],[incore-yn],[prepare-yn],[bp-type])

 IF ( [prepare-yn] > 0 ) THEN 
   ; Prepare input files (only needs to be done once)  
   @@refine-prepare([pixsiz],[iter1]) 
 ENDIF
d140 1
a140 1
   @@merge-fsc-filt([pixsiz],[iter],[ampenhance],[r2],[sphdecon],[qsub])
@


1.74
log
@*** empty log message ***
@
text
@d3 1
a3 1
 ; SOURCE: spider/docs/techs/recon1/Procs/refine-inseries.spi    
d17 1
a17 1
 ; USAGE:   clean ; ./spider spi/dat @@refine-inseries
d19 1
a19 1
 ; I/O Registers and files are set in: <a href="./refine-settings.spi">refine-settings.spi</a>
d40 10
a49 10
 ;    refine-settings        <a href="refine-settings.spi">  refine-settings.spi</a>
 ;    refine-prepare         <a href="refine-prepare.spi">   refine-prepare.spi</a>
 ;    refine-show-r2         <a href="refine-show-r2.spi">   refine-show-r2.spi</a>
 ;    refine-refangles       <a href="refine-refangles.spi"> refine-refangles.spi</a>            
 ;    refine-loop            <a href="refine-loop.spi">      refine-loop.spi</a>            
 ;    refine-smangloop       <a href="refine-smangloop.spi"> refine-smangloop.spi</a>            
 ;    refine-bp              <a href="refine-bp.spi">        refine-bp.spi</a>            
 ;    refine-merge           <a href="refine-merge.spi">     refine-merge.spi</a>
 ;    .. refine-sphdecon     <a href="refine-sphdecon.spi">  refine-sphdecon.spi</a>            
 ;    .. enhance (optional)  <a href="enhance.spi">          enhance.spi</a>
a63 2
 [pubsub] = 0                ; Not using PubSub

d75 2
a76 2
 @@refine-show-r2([r2],[alignsh],[prj-radius])
   final/vol_01_s1            ; Reference volume
d86 5
d93 3
a95 1
   ; List desired angles for reference projections in a doc file.
d97 4
a100 1
   @@refine-refangles([iter],[smallang-yn],[ampenhance],[ang-step],[ang-limit],[num-angs])      
d118 1
a118 3
   DO [i]=1,[num-grps]        ; Loop over all groups --------------------------
      UD S [i],[grp]          ; Get group number from list  
        [sel_group]           ; Group selection file            (input)
d129 4
a132 3
 
      IF ( [smallang-yn] == 0 ) THEN  ; Runs main refinement loop tasks
         @@refine-loop([ang-step],[ang-limit],[r2],[alignsh],[prj-radius],[iter],[grp],[pixsiz],[incore-yn],[bp-typet])
d134 2
a135 1
         @@refine-smangloop([ang-step-sm],[r2],[alignsh],[prj-radius],[iter],[grp],[pixsiz],[bp-typet])
d137 1
a137 1

d144 4
a147 3
   ; Consolidate all group volumes for both subsets ('AS S') into tow subset
   ; output volumes, find resolution ('FSC') by comparing FSC of the two subsets, and
   ; filter the combined volumes ('FD C') to limit resolution. 
d149 1
a149 1
   @@refine-merge([pixsiz],[iter],[ampenhance],[r2],[sphdecon],[pubsub])
@


1.73
log
@Gold_standard
@
text
@d28 2
a29 2
 ;   [sphdecon]            Spherical deconvolutin sigma (0 == none)
 ;   [smallang-yn]         Small angle refinement flag  (1 == true) 
a35 1
 ;   [group_align_orig]      ../Reconstruction/input/bp_align_01_***  Alignment parameter files      (one/group)
d39 11
a49 6
 ;    refine-settings       <a href="./refine-settings.spi">  refine-settings.spi</a>
 ;    refine-prepare        <a href="./refine-prepare.spi">   refine-prepare.spi</a>
 ;
 ;    refine-loop           <a href="./refine-loop.spi">      refine-loop.spi</a>    OR           
 ;    refine-smangloop      <a href="./refine-smangloop.spi"> refine-smangloop.spi</a>            
 ;       refine-bp          <a href="./refine-bp.spi">        refine-bp</a>
a50 3
 ;    refine-merge          <a href="./refine-merge.spi">     refine-merge.spi</a>
 ;    ...enhance (optional) <a href="./enhance.spi">          enhance.spi</a>
 ; 
d58 2
a59 2
   SET MP                    ; Use all available OMP processors
   0
d64 1
a64 2
 ; Redefine [temp_local_dir] location to current work directory for non-PubSub run
 GLO [temp_local_dir] = '[temp_work_dir]'
d66 1
a66 1
 IF ( [prepare-yn]  == 1 ) THEN
d76 4
d88 1
a88 1
 MY FL
d90 1
a90 1
 DO [iter]=[iter1],[iter-end] ; Loop over all iterations -----------------------------
a91 1
   ; List desired angles for reference projections in a doc file.
d94 13
a106 4
   ; Create stacks holding reference projections 'PJ 3F' from both subset reference volumes 
   ; in series.
   [num-parallel] = 1  
   @@pub-prjrefs([iter],[num-parallel],[prj-radius])
d110 3
a112 1
   DO [grp]=1,[num-grps]        ; Loop over all groups --------------------------
d115 1
a115 1
        echo ; echo -n " Iteration: {%I0%[iter]}  Group: {%I4%[grp]}   " ; date  '+ TIME: %x  %X' ; echo
d124 4
a127 4
      IF ( [smallang-yn] == 0 ) THEN  ; Runs main refinement  tasks
        @@refine-loop([ang-step],[ang-limit],[r2],[alignsh],[prj-radius],[iter],[grp],[pixsiz],[incore-yn],[bp-typet])
      ELSE                            ; Runs small angle refinement  tasks
        @@refine-smangloop([ang-step-sm],[r2],[alignsh],[prj-radius],[iter],[grp],[pixsiz],[bp-typet])
d136 3
a138 3
   ; Consolidate all parallel group volumes for both subsets ('AS S') into two subset output volumes, 
   ; find resolution ('FSC') using the two subsets and
   ; filter the combined volumes to limit resolution ('FD C') 
d140 1
a140 1
   @@refine-merge([pixsiz],[iter],[ampenhance],[r2],[sphdecon])
d144 2
a145 3
   MY FL                      ; Flush results file

 ENDDO                        ; End of loop over all iterations ------------------------
d148 1
a148 1
   echo -n " Refinement finished after iteration: {%I0%[iter]}   " ; date '+ TIME: %x  %X' ; echo " " 
@


1.72
log
@UD N [num-grps]            ; Find number of groups
>   [sel_group]
@
text
@d4 9
a12 8
 ;         New                              ArDean Leith Nov 2000
 ;         Rewritten                        ArDean Leith Mar 2004
 ;         [] variables                     ArDean Leith Dec 2005
 ;         Ampenhance                       ArDean Leith May 2006
 ;         More stacks                      ArDean Leith Dec 2006
 ;         Small angles limits              ArDean Leith Oct 2010
 ;         pixsiz, resol headers,r2,...     ArDean Leith Aug 2012
 ;         For CTF corrected images         ArDean Leith Oct 2013
d28 2
a29 2
 ;   [lambda]              Lambda (A)            (Used in prepare)
 ;   [smallang-yn]         Small angle refinement flag (1 == true) 
d33 1
a33 1
 ;   [vol_orig]              ../Reconstruction/vol_01                 Initial volume file   (one)
d40 2
a41 7
 ;    refine-settings       <a href="./refine-settings.spi">     refine-settings.spi</a>
 ;    refine-prepare        <a href="./refine-prepare.spi">      refine-prepare.spi</a>
 ;    refine-refangles      <a href="./refine-refangles.spi">    refine-refangles.spi</a>
 ;
 ;    refine-loop           <a href="./refine-loop.spi">         refine-loop.spi</a>    OR           
 ;    refine-smangloop      <a href="./refine-smangloop.spi">    refine-smangloop.spi</a>            
 ;    ... refine-bp         <a href="./refine-bp.spi">           refine-bp.spi</a>            
d43 6
a48 2
 ;    refine-merge          <a href="./refine-merge.spi">        refine-merge.spi</a>
 ;    ...enhance (optional) <a href="./enhance.spi">             enhance.spi</a>
d50 1
a50 1
 ; ---------------------------- -- END BATCH HEADER -- ----------------------------
d60 2
a61 2
 ; Input initial parameters & file names
 @@refine-settings([pixsiz],[r2],[alignsh],[prj-radius],[iter1],[iter-end],[lambda],[smallang-yn],[winsize],[incore-yn],[prepare-yn],[bp-type])
d67 2
a68 5
   ; Prepare input files  (only needs to be done once) 
   @@refine-prepare([pixsiz],[lambda],[iter1])

   DE
     [iter_resol]           ; Resolution doc file           (removed)
d71 9
a79 1
 MY FL
d81 2
a82 2
 SD /      ITERATION       GROUP     MASKED-RES    RESOLUTION
   [iter_resol]             ; Resolution doc file              (output)
d84 1
a84 2
 UD N [num-grps]            ; Find number of groups
  [sel_group]               ; Group selection file      (input)
d86 1
a86 1
 DO [iter]=[iter1],[iter-end] ; Loop over all iterations ----------------------------------
d88 2
a89 2
   ; Set angles used for making reference projections. Creates: [iter_refangs] doc file for angles
   @@refine-refangles([iter],[smallang-yn],[ampenhance],[ang-step],[ang-limit],[num-ang])      
d91 4
a94 10
   SYS
     echo  " Projecting: [current_vol]  Iteration: {%I0%[iter]}  Angles:{%I0%[num-ang]} " 

   ; Create stack holding angular reference projections from current volume.
   PJ 3F                    ; Projection operation
     [current_vol]          ; Vol from previous reconstruction iteration (input) 
     [prj-radius]           ; Radius of object
     1-[num-ang]            ; Ref. angles used    
     [iter_refangs]         ; Ref. angles doc file             (input)
     [ref_projs]@@******     ; Template for ref. projections    (output) 
d98 1
a98 3
   DO [i]=1,[num-grps]      ; Loop over all groups ---------------------
      UD S [i],[grp]        ; Get group number from list  
        [sel_group]         ; Group selection file            (input)
d101 1
a101 1
        echo -n " Processing group: {%I4%[grp]}   " ; date  '+ TIME: %x  %X' ; echo
d103 4
a106 5
        ; Switch to 'BP CG' on last iteration if not already
        [bp-typet] = [bp-type]     ; 
        IF ( [iter] == [iter-end] ) THEN
          [bp-typet] = 1           ; Switch to 'BP CG' 
        ENDIF
d108 1
a108 1
      MY FL                 ; Flush results file
d110 4
a113 4
      IF ( [smallang-yn] == 0 ) THEN  ; Runs main refinement loop tasks
         @@refine-loop([ang-step],[ang-limit],[r2],[alignsh],[prj-radius],[iter],[grp],[pixsiz],[incore-yn],[bp-typet])
      ELSE
         @@refine-smangloop([ang-step],[r2],[alignsh],[prj-radius],[iter],[grp],[pixsiz],[bp-typet])
d116 1
a116 2
      MY FL                 ; Flush results file
   ENDDO                    ; End of: Loop over all groups -------------------
d118 1
a118 1
   UD E                     ; Finished with incore doc file
d120 1
a120 2
   ; Consolidate group volumes (AS S) into output volumes, find resolution (FSC),
   ; filter to limit resolution (FQ), and center the filtered volumes 
d122 5
a126 1
   @@refine-merge([pixsiz],[iter],[ampenhance],[r2])
d130 3
a132 2
   MY FL                    ; Flush results file
 ENDDO                      ; End of loop over all iterations ---------------------------------
d134 2
a135 2
 SYS                        ; Echo current time 
   echo -n " Refinement finished after iteration: {**[iter]}   " ; date '+ TIME: %x  %X' ; echo " " 
@


1.71
log
@vol_01
@
text
@d79 3
@


1.70
log
@refine-setrefangles  renamed
@
text
@d32 1
a32 1
 ;   [vol_orig]              ../Reconstruction/vol01                  Initial volume file   (one)
@


1.69
log
@last BP is CG
@
text
@d41 1
a41 1
 ;    refine-setrefangles   <a href="./refine-setrefangles.spi"> refine-setrefangles.spi</a>
d82 1
a82 1
   @@refine-setrefangles([iter],[smallang-yn],[ampenhance],[ang-step],[ang-limit],[num-ang])      
@


1.68
log
@header cosmetic
@
text
@d104 5
a108 4
      [bp-typet] = [bp-type]     ; Switch to 'BP CG' on last iteration if not already
      IF ( [iter] == [iter-end] ) THEN
        [bp-typet] = 2           ; Switch to 'BP CG' on last iteration if not already
      ENDIF
@


1.67
log
@ang-step to loop
@
text
@d39 3
a41 2
 ;    refine-settings       <a href="./refine-settings.spi">  refine-settings.spi</a>
 ;    refine-prepare        <a href="./refine-prepare.spi">   refine-prepare.spi</a>
d43 3
a45 2
 ;    refine-loop           <a href="./refine-loop.spi">      refine-loop.spi</a>    OR           
 ;    refine-smangloop      <a href="./refine-smangloop.spi"> refine-smangloop.spi</a>            
d47 2
a48 2
 ;    refine-merge          <a href="./refine-merge.spi">     refine-merge.spi</a>
 ;    ...enhance (optional) <a href="./enhance.spi">          enhance.spi</a>
d50 1
a50 2
 ; ---------------------------------------------------------------------
 ; -- END BATCH HEADER --
@


1.66
log
@setrefangles
@
text
@a70 2
   DE                                                                   
     [grp_resol]            ; Resolution doc file           (removed)
a76 5
 SD /      ITERATION       GROUP        RESOLUTION
   [grp_resol]              ; Resolution doc file              (output)

 UD N [num-grps]            ; Get number of  groups
   [sel_group]              ; Group selection doc file         (input)
d81 1
a81 1
   @@refine-setrefangles([iter],[smallang-yn],[ang-step-sm],[theta-sm],[ampenhance],[ang-step],[ang-limit],[num-ang])      
d113 1
a113 1
         @@refine-smangloop([r2],[alignsh],[prj-radius],[iter],[grp],[pixsiz],[bp-typet])
@


1.65
log
@refine-settings parameters
/
@
text
@d77 1
a77 1
 SD /  ITERATION        GROUP     MASKED-RES    RESOLUTION
d87 2
a88 35
   RR S [ampenhance]        ; Amplitude enhancement flag (varies with iteration)
     [amp-enhance-flags]    ; Global string variable
     [iter]

   DE
     [iter_refangs]         ; Reference angles doc file         (removed)

   ; Create reference angle doc file for this iteration 

   IF ( [smallang-yn] == 0 ) THEN  

      ; For normal angle refinement
      RR S [ang-step]
        [ang-steps]         ; Angular step for projection angle  (varies with iteration)
        [iter]

      VO EA [num-angles]    ; Sets [num-angles] to number of reference projections
        [ang-step]          ; Theta angular step          (varies with iteration)
        0, 90               ; Theta range, 90 is for use with 'Check Mirrored Positions'
        0, 359.9            ; Phi range
        [iter_refangs]      ; Reference angles doc file       (output)

      RR S [ang-limit]      ; Restriction on angular search   (varies with iteration)
        [ang-limits]        ; Limits string
        [iter]              ; Iteration

   ELSE                     ; Small angle refinement

      ; For Small angle refinement around a determined position
      VO EA [num-angles]    ; Sets [num-angles] to number of reference projections
        [ang-step-sm]       ; Theta angular step          (varies with iteration)    
        0, [theta-range]    ; Theta range 
        0, 359.9            ; Phi range
        [iter_refangs]      ; Reference angles doc file       (output)
   ENDIF
d91 1
a91 1
     echo  " Projecting: [current_vol]  Iteration: {%I0%[iter]}  Angles:{%I0%[num-angles]} " 
d97 1
a97 1
     1-[num-angles]         ; Ref. angles used    
@


1.64
log
@refine-smangloop([r2],[alignsh],[prj-radius],[iter],[grp],[pixsiz])
@
text
@d60 1
a60 1
 @@refine-settings([pixsiz],[r2],[alignsh],[prj-radius],[iter1],[iter-end],[lambda],[smallang-yn],[winsize],[incore-yn],[prepare-yn])
d143 5
d151 1
a151 1
         @@refine-loop([ang-step],[ang-limit],[r2],[alignsh],[prj-radius],[iter],[grp],[pixsiz],[incore-yn],[iter-end])
d153 1
a153 1
         @@refine-smangloop([r2],[alignsh],[prj-radius],[iter],[grp],[pixsiz])
@


1.63
log
@SD /         ITERATION... formatting , cosmetic
@
text
@d148 1
a148 1
         @@refine-smangloop([r2],[alignsh],[prj-radius],[iter],[grp],[pixsiz],[incore-yn],[iter-end])
@


1.62
log
@header
@
text
@d3 1
a3 1
 ; SOURCE: spider/docs/techs/recon1/procs/refine-inseries.spi    
d13 2
a14 1
 ; PURPOSE: Controls serial reconstruction refinement 
d30 7
a36 7
 ; INPUT FILES:
 ;   [params]              ../params                                 Params file  
 ;   [vol_orig]            ../Reconstruction/vol01                   Initial volume file  
 ;   [sel_group_orig]      ../Reconstruction/input/bp_sel_group      Group selection file
 ;   [sel_part_orig]       ../Reconstruction/input/bp_sel_part_***   Particle selection files 
 ;   [group_align_orig]    ../Reconstruction/input/bp_align_01_***   Alignment parameter files 
 ;   [unaligned_images]    ../Reconstruction/input/bp_data***        Unaligned image stacks
a46 1
 ;    refine-endmerge       <a href="./refine-endmerge.spi">  refine-endmerge.spi</a>
a47 2
 ;    refine-end            <a href="./refine-end.spi">       refine-end.spi</a>  
 ;
d49 1
a49 2

; -- END BATCH HEADER --
d57 1
a57 1
   4;; 0
d77 4
a80 4
 SD /         ITERATION       GROUP        RESOLUTION 
   [iter_resol]           ; Resolution doc file              (output)
 SD /         ITERATION       GROUP        RESOLUTION 
   [grp_resol]            ; Resolution doc file              (output)
d96 1
a96 1
   IF ([smallang-yn] == 0) THEN  
d145 1
a145 2
      IF ( [smallang-yn] == 0) THEN  ; Runs main refinement loop tasks

a146 1

@


1.61
log
@rewrite_syntax_filenames
@
text
@d52 2
@


1.60
log
@comment
@
text
@d1 50
a50 48
; <html><head><title>Controls serial reconstruction refinement</title></head><body><pre>
;
; SOURCE: spider/docs/techs/recon/newprogs/refine.pam    
;         New                              ArDean Leith Nov 2000
;         Rewritten                        ArDean Leith Mar 2004
;         [] variables                     ArDean Leith Dec 2005
;         Ampenhance                       ArDean Leith May 2006
;         More stacks                      ArDean Leith Dec 2006
;         Small angles limits              ArDean Leith Oct 2010
;         pixsiz, resol headers,r2,...     ArDean Leith Aug 2012
;
; PURPOSE: Controls serial reconstruction refinement 
;
; I/O Registers and files are set in: <a href="./refine settings.pam">refine settings.pam</a>
;
; INPUT REGISTERS:
;   [pixsiz]                 Pixel size 
;   [r2]                     Radius of object
;   [alignsh]                Shift allowed is +- this value
;   [prj-radius]             Radius of object for projection
;   [iter1]                  Starting iteration
;   [iter-end]               Ending   iteration
;   [lambda]                 Lambda (A)            (Used in prepare)
;   [small-ang]              Small angle refinement flag (1 is true) 
;   [converg]                Convergence criterion percentage
;
; INPUT FILES:
;   [params]                ../params                             Input params file  
;   [vol_orig]              ../Reconstruction/vol01               Input volume file  
;   [sel_group_orig]        ../Reconstruction/sel_group_cclim     Group selection file
;   [sel_particles_orig]    ../Reconstruction/sel_particles_***   Particle selection files 
;   [group_align_orig]      ../Alignment/align_01_***             Alignment parameter files 
;   [unaligned_images]      ../Alignment/data***                  Original unaligned images stack
;
; PROCEDURES CALLED:
;    refine_settings          <a href="./refine_settings.pam">refine_settings.pam</a>
;    prepare                  <a href="./prepare.pam">prepare.pam</a>
;
;    grploop                  <a href="./grploop.pam">grploop.pam</a>    OR           
;    smangloop                <a href="./smangloop.pam">smangloop.pam</a>            
;
;    mergegroups              <a href="./mergegroups.pam">mergegroups.pam</a>
;    ... enhance (optional)   <a href="./enhance.pam">enhance.pam</a>
;    endmerge                 <a href="./endmerge.pam">endmerge.pam</a>
; 
;    endrefine                <a href="./endrefine.pam">endrefine.pam</a>  
;
; ---------------------------------------------------------------------
d53 1
a53 1
   TR OFF                     ; Loop info turned off
d55 1
a55 1
   VB OFF                     ; File info turned off
d57 2
a58 2
   SET MP                     ; Use all available OMP processors
   0
d61 1
a61 1
 @@refine_settings([pixsiz],[r2],[alignsh],[prj-radius],[iter1],[iter-end],[lambda],[small-ang],[winsize],[converg])
d66 8
a73 7
 IF ([iter1].LE.1) THEN
   ; Prepare input files (only needs to be done once) 
   @@prepare([pixsiz],[lambda],[iter1])
   SD /     Iteration       group        resolution 
     [iter_resol]          ; Resolution doc file              (output)
   SD /     Iteration       group        resolution 
     [grp_resol]           ; Resolution doc file              (output)
d76 1
d78 4
a81 1
 MY FL
d83 1
a83 1
 UD N [num-grps]            ; Get number of defocus groups
d88 2
a89 2
   RR S [ampenhance]       ; Amplitude enhancement flag (varies with iteration)
     [amp-enhance-flags]   ; Global string variable
a91 4
   FT                      ; Fourier on volume 
     [current_vol]         ; Volume produced by previous iter. (input)  
     [iter_vft]            ; For all groups on this iter.      (output)

d93 1
a93 1
     [iter_refangs]        ; Reference angles doc file         (removed)
d97 1
a97 1
   IF([small-ang].EQ.0) THEN  
d101 1
a101 1
        [ang-steps]        ; Angular step for projection angle  (varies with iteration)
d104 22
a125 5
      VO EA [num-angles]   ; Sets [num-angles] to number of reference projections
        [ang-step]         ; Theta angular step          (varies with iteration)
        0, 90              ; Theta range, 90 is for use with 'Check Mirrored Positions'
        0, 359.9           ; Phi range
        [iter_refangs]     ; Reference angles doc file       (output)
d127 13
a139 4
      RR S [ang-limit]     ; Restriction on angular search      (varies with iteration)
        [ang-limits]
        [iter]
   ELSE                    ; Small angle refinement
d141 2
a142 7
      ; For Small angle refinement
      VO EA [num-angles]   ; Sets [num-angles] to number of reference projections
        [ang-step-sm]      ; Theta angular step     
        0, [theta-range]   ; Theta range 
        0, 359.9           ; Phi range
        [iter_refangs]     ; Reference angles doc file       (output)
   ENDIF
d144 1
a144 9
   ; Process all defocus groups one by one
   [num-big] = 0           ; Number of large proj. angle displacements
   DO [i]=1,[num-grps]
      UD S [i],[grp]       ; Get defocus group number from list  
        [sel_group]        ; Group selection file            (input)

      VM
        echo -n " Processing group: {***[grp]}   " ; date  '+ TIME: %x  %X'
      MY FL                ; Flush results file
d146 4
a149 3
      ; grploop/smangloop returns [stop] 
      IF([small-ang].EQ.0)THEN  ; Runs main refinement grploop tasks
         @@grploop([ang-step],[ang-limit],[r2],[alignsh],[prj-radius],[iter],[grp],[stop],[pixsiz])
d151 1
a151 1
         @@smangloop([r2],[alignsh],[prj-radius],[iter],[grp],[stop],[pixsiz])
d154 2
a155 7
      ; Check size of projection angular changes
      ; [stop] returns % of images whose proj. angle moved by >1.5*[ang-step]
      IF([stop].GT.[converg])  [num-big]=[num-big]+1  ; Excessive ang. change for this group  

      MY FL                ; Flush results file
   ENDDO
   UD E                    ; Finished with incore doc file
d157 1
a157 5
   VM
     echo " Iteration: {**[iter]} Excessive proj. ang. changes in: {***[num-big]} groups"
 
   ; If projection angular changes small in all groups, can stop now
   IF([num-big].EQ.0) EXIT  
d159 2
a160 2
   ; Consolidate data for CTF corrections
   @@mergegroups([pixsiz],[iter],[ampenhance],[r2])
d162 1
a162 2
   DE                       ; Delete vft file.
     [iter_vft]             ; Current iteration Fourier vol   (removed)
d164 2
d167 1
a167 17
 ENDDO

 VM
   echo ' ' ; echo -n " Alignment halting after iteration: {**[iter]}  " ; date '+ TIME: %x  %X' ; echo ' '

 DO [i]=1,[num-grps]     
   UD IC [i], [grp]         ; Get defocus group number from list
     [sel_group]            ; Group selection doc file         (input)

   @@endmerge([prj-radius],[grp],[iter],[pixsiz],[r2])
 ENDDO

 UD ICE                     ; End doc file 'UD IC' use
  [sel_group]               ; Group selection doc file        (finished)

 ; Prepare final resolution files
 @@endrefine([r2],[pixsiz],[iter])    
d169 2
a170 2
 VM
   echo " " ; echo -n  " FINISHED REFINEMENT    " ; date '+ TIME: %x  %X'
d173 1
a173 1
; </body></pre></html>
@


1.59
log
@r2 for endmerge
@
text
@d18 1
a18 1
;   [r2]                     Radius of structure
d20 1
a20 1
;   [prj-radius]             Radius of structure for projection
@


1.58
log
@comment
@
text
@d10 1
a10 1
;         pixsiz, resol headers,...        ArDean Leith Aug 2012
d18 1
a18 1
;   [radius]                 Radius of structure
a46 1
;    ....softmask             <a href="./softmask.pam">softmask.pam</a>            
d59 1
a59 1
 @@refine_settings([pixsiz],[radius],[alignsh],[prj-radius],[iter1],[iter-end],[lambda],[small-ang],[winsize],[converg])
d67 1
a67 1
   SD /     Iteration       group        resolution
d69 1
a69 1
   SD /     Iteration       group        resolution
d132 1
a132 1
         @@grploop([ang-step],[ang-limit],[radius],[alignsh],[prj-radius],[iter],[grp],[stop],[pixsiz])
d134 1
a134 1
         @@smangloop([radius],[alignsh],[prj-radius],[iter],[grp],[stop],[pixsiz])
d152 1
a152 1
   @@mergegroups([pixsiz],[iter],[ampenhance],[radius])
d167 1
a167 1
   @@endmerge([prj-radius],[grp],[iter],[pixsiz])
d174 1
a174 1
 @@endrefine([radius],[pixsiz],[iter])    
@


1.57
log
@pixsiz, resol headers,...
@
text
@d124 1
a124 1
      UD S [i],[grp]       ; Get defocus group number from unsorted list  
@


1.56
log
@no dala files
@
text
@d1 1
a1 1
; <html><head><title>Controls refinement of a reconstruction</title></head><body><pre>
d7 1
a7 1
;         Ampenhance fixed                 ArDean Leith May 2006
a8 2
;         [temp_local_dir] def.            ArDean Leith Oct 2009
;         File locations changed           ArDean Leith Oct 2009
d10 1
d12 1
a12 1
; PURPOSE: Controls serial refinement 
d17 1
a17 1
;   [sp_maxspfreq]           Maximum spatial freq. (used in prepare)
d23 1
a23 1
;   [sp_lambda]              Lambda                (used in prepare)
a43 1
;    ... saveresp             <a href="./saveresp.pam">saveresp.pam</a>
a47 1
;    ... saveresp             <a href="./saveresp.pam">saveresp.pam</a>
d51 7
a57 7
MD
TR OFF                       ; Loop info turned off
MD
VB OFF                       ; File info turned off
MD
SET MP                       ; Use all available OMP processors
0
d59 2
a60 2
; Input initial parameters & file names
@@refine_settings([sp_maxspfreq],[radius],[alignsh],[prj-radius],[iter1],[iter-end],[sp_lambda],[small-ang],[sp_winsize],[converg])
d62 2
a63 2
; Redefine [temp_local_dir] location to current work directory for non-PubSub
GLO [temp_local_dir] = '[temp_work_dir]'
d65 1
a65 1
IF ([iter1].LE.1) THEN
d67 6
a72 2
   @@prepare([sp_maxspfreq],[sp_lambda],[iter1])
ENDIF
a73 1
MY FL
d75 1
a75 2
UD N [num-grps]            ; Get number of defocus groups
[sel_group]
d77 4
a80 1
DO [iter]=[iter1],[iter-end] ; Loop over all iterations ----------------------------------
d83 2
a84 2
   ([amp-enhance-flags])   ; Global string variable
   [iter]
d86 3
a88 3
   FT                      ; Fourier on current volume 
   [current_vol]           ; Volume from previous iter. or reconstruction  (input) 
   [iter_vft]              ; Fourier of volume (used by all groups on this iter. in grploop) 
d91 1
a91 1
   [iter_refangs]          ; Reference angles doc file         (removed)
d99 2
a100 2
      ([ang-steps])        ; Angular step for projection angle  (varies with iteration)
      [iter]
d103 4
a106 4
      [ang-step]           ; Theta angular step          (varies with iteration)
      (0,90.0)             ; Theta range, 90 is for use with 'Check Mirrored Positons:1'
      (0,359.9)            ; Phi range
      [iter_refangs]       ; Reference angles doc file       (output)
d109 3
a111 3
      ([ang-limits])
      [iter]
    ELSE                    ; Small angle refinement
d115 4
a118 5
      [ang-step-sm]        ; Theta angular step     
      (0,[theta-range])    ; Theta range 
      (0,359.9)            ; Phi range
      [iter_refangs]       ; Reference angles doc file       (output)
 
d125 1
a125 1
      [sel_group]          ; Group selection file            (input)
d128 1
a128 1
      echo -n " Processing group: {***[grp]}   " ; date  '+ TIME: %x  %X'
d133 1
a133 1
         @@grploop([ang-step],[ang-limit],[radius],[alignsh],[prj-radius],[iter],[grp],[stop],[sp_maxspfreq])
d135 1
a135 1
         @@smangloop([radius],[alignsh],[prj-radius],[iter],[grp],[stop])
d142 1
a142 1
      MY FL                  ; Flush results file
d144 1
a144 1
   UD E                      ; Finished with incore doc file
d147 1
a147 1
   echo " Iteration: {**[iter]} Excessive proj. ang. changes in: {***[num-big]} groups"
d153 1
a153 1
   @@mergegroups([sp_maxspfreq],[iter],[ampenhance])
d156 1
a156 1
   [iter_vft]               ; Current iteration Fourier vol      (removed)
d159 1
a159 1
ENDDO
d161 2
a162 2
VM
echo ' ' ; echo -n " Alignment halting after iteration: {**[iter]}  " ; date '+ TIME: %x  %X' ; echo ' '
d164 3
a166 3
DO [i]=1,[num-grps]     
  UD IC [i], [grp]         ; Get defocus group number from list
  [sel_group]
d168 2
a169 2
  @@endmerge([prj-radius],[grp],[iter])
ENDDO
d171 2
a172 2
UD ICE                     ; End doc file 'UD IC' use
[sel_group]
d174 2
a175 2
; Prepare final resolution files
@@endrefine([radius],[sp_maxspfreq],[iter])    
d177 2
a178 2
VM
echo " " ; echo -n  " SUCCESS, FINISHED REFINEMENT    " ; date '+ TIME: %x  %X'
d180 1
a180 1
EN
@


1.55
log
@ SUCCESS, FINISHED REFINEMENT msg
@
text
@a10 1
;         Echo format                      ArDean Leith Oct 2010
a33 1
;   [aligned_images_orig]   ../Alignment/input/dala01_***         Aligned image stacks 
a57 2
MD
() OFF                       ; No need for () in DO loops          
@


1.54
log
@[ang-step-sm], (0,[theta-range])
@
text
@d181 1
a181 1
echo -n  " SUCCESS, FINISHED REFINEMENT    " ; date '+ TIME: %x  %X'
@


1.53
log
@Small angles limits wrong, cosmetic labels
@
text
@d12 1
a12 1
;         Small angles limits wrong        ArDean Leith Oct 2010
d16 1
a16 1
; I/O Registers and files are set in: refine settings <a href="./refine settings.pam">refine settings.pam</a>.pam)
d19 1
a19 1
;   [sp_maxspfreq]           Maximum spatial freq. [a-1] (used in prepare)
d25 1
a25 1
;   [sp_lambda]              Lambda(angstroms) (used in prepare)
d92 2
a93 2
   DE                      ; Delete file
   [iter_refangs]          ; Ref. angles doc file           (removed)
d97 1
a97 2
   IF([small-ang].EQ.0)THEN 
      ; Regular angle refinement
d99 1
d103 8
a110 1
      RR S [ang-limit]     ; Restriction on angular search (varies with iteration)
d113 1
d115 1
d117 5
a121 12
      [ang-step]           ; Angular step  (varies with iteration)
      (0,90.0)             ; Angles
      (0,359.9)            ; Angles
      [iter_refangs]       ; Reference angles doc file     (output)

   ELSE                     
      ; Small angle refinement
      VO EA [num-angles]   ; Sets number of reference projections
      [ang-step]           ; Angular step  (same over all iterations)
      (0,[ang-limit])      ; Small angles
      (0,0)                ; Small angles
      [iter_refangs]       ; Reference angles doc file     (output)
@


1.52
log
@Echo format
@
text
@d4 9
a12 8
;         New                              ArDean Leith Nov  2000
;         Rewritten                        ArDean Leith Mar  2004
;         [] variables                     ArDean Leith Dec  2005
;         Ampenhance fixed                 ArDean Leith May  2006
;         More stacks                      ArDean Leith Dec  2006
;         [temp_local_dir] def.            ArDean Leith Oct  2009
;         File locations changed           ArDean Leith Oct  2009
;         Echo format                      ArDean Leith Oct  2010
d16 1
a16 1
; I/O Registers and files are set in: refine settings <a href="./refine settings.pam">refine settings.pam</a>.pam); INPUT REGISTERS:
d82 1
a82 2
;  Loop over all iterations
DO [iter]=[iter1],[iter-end]
d89 1
a89 1
   [current_vol]           ; Volume produced by previous iter. or reconstruction   
d92 3
a95 2
   DE
   [iter_refangs]          ; Ref. angles doc file
d97 3
a99 1
   IF([small-ang].EQ.0)THEN ; Regular angle refinement
d108 1
a108 1
      [ang-step]           ; Angular step (varies with iteration)
d111 1
a111 1
      [iter_refangs]       ; Create ref. angles doc file    (output)
d113 7
a119 6
   ELSE                    ; Small angle refinement
      VO EA [num-angles]   ; Sets [num-angles] to number of reference projections
      [ang-steps]          ; Angular step  (same over all iterations)
      (0,[ang-limits])     ; Small Angles
      (0,0)                ; Small Angles
      [iter_refangs]       ; Create ref. angles doc file    (output)
d126 1
a126 1
      [sel_group]
d157 1
a157 1
   [iter_vft]               ; Used by all groups this iter.  
@


1.51
log
@smangloop parameter
@
text
@d11 1
d13 1
a13 1
; PURPOSE: Controls refinement 
d112 1
a112 1
      [ang-steps]          ; Angular step 
d125 1
a125 3
      date  '+ TIME: %x  %X'
      VM
      echo " Processing group: {***[grp]}"
d159 1
a159 5
echo ' ' ; echo " Alignment halting after iteration: {***[iter]}"
VM
date '+ TIME: %x  %X'
VM
echo ' '
d175 1
a175 6
date '+ TIME: %x  %X'
VM
echo ' '

VM
echo " SUCCESS, FINISHED REFINEMENT"
@


1.50
log
@simplify-rewrite
@
text
@d4 7
a10 7
;                       New                              ArDean Leith Nov  2000
;                       Rewritten                        ArDean Leith Mar  2004
;                       [] variables                     ArDean Leith Dec  2005
;                       Ampenhance fixed                 ArDean Leith May  2006
;                       More stacks                      ArDean Leith Dec  2006
;                       [temp_local_dir] def.            ArDean Leith Oct  2009
;                       File locations changed           ArDean Leith Oct  2009
d17 1
a17 1
;   [maxspfreq]              Maximum spatial freq[a-1] (used in prepare)
d23 1
a23 1
;   [lambda]                 Lambda(angstroms) (used in prepare)
d65 1
a65 1
@@refine_settings([maxspfreq],[radius],[alignsh],[prj-radius],[iter1],[iter-end],[lambda],[small-ang],[winsize],[converg])
d72 1
a72 1
   @@prepare([maxspfreq],[lambda],[iter1])
d84 1
a84 1
   ([amp-enhance-flags])
d130 2
a131 2
      IF([small-ang].EQ.0)THEN  ; Runs main refinement smangloop tasks
         @@grploop([ang-step],[ang-limit],[radius],[alignsh],[prj-radius],[iter],[grp],[stop],[maxspfreq])
d133 1
a133 1
         @@smangloop([ang-steps],[radius],[alignsh],[prj-radius],[iter],[grp],[stop],[maxspfreq])
d147 1
a147 1
   ; If projection angular changes were small in all groups, can stop now
d151 1
a151 1
   @@mergegroups([maxspfreq],[iter],[ampenhance])
d177 1
a177 1
@@endrefine([radius],[maxspfreq],[iter])    
@


1.49
log
@[temp_local_dir] redefined
@
text
@d3 9
a11 6
; SOURCE: refine.pam    New                      ArDean Leith Nov  2000
;                       Rewritten                ArDean Leith Mar  2004
;                       [] variables             ArDean Leith Dec  2005
;                       Ampenhance fixed         ArDean Leith May  2006
;                       More stacks              ArDean Leith Dec  2006
;                       [temp_local_dir] def.    ArDean Leith Oct  2009
a13 2
; MASTER COPY: /net/bali/usr1/spider/docs/techs/recon/newprogs/
;
d17 9
a25 9
;    [maxspfreq]              Maximum spatial freq[a-1] (used in prepare)
;    [radius]                 Radius of structure
;    [alignsh]                Shift allowed is +- this value
;    [prj-radius]             Radius of structure for projection
;    [iter1]                  Starting iteration
;    [iter-end]               Ending   iteration
;    [lambda]                 Lambda(angstroms) (used in prepare)
;    [small-ang]              Small angle refinement flag (1 is true) 
;    [converg]                Convergence criterion percentage
d28 7
a34 7
;    [params]                 input/params           Parameter doc. file
;    [order_select]           input/order_select     Group selection file
;    [start_vol]              input/vol01            Initial starting volume
;    [sel_particles]          input/select_***       Particle selection files 
;    [start_group_align]      input/align_01_***     Alignment parameter input file 
;    [unaligned_images]       input/data***          Unaligned stacked image files
;    [start_aligned_images]   input/dala01_***       Aligned stacked image files
d44 1
a44 1
;    ... enhance              <a href="./enhance.pam">enhance.pam</a>
d67 2
a68 3
; Redefine [temp_local_dir] to current directory for non-PubSub
FR G
[temp_local_dir]./
d70 1
a70 1
IF([iter1].LE.1) THEN
d77 3
d88 1
a88 1
   [current_vol]           ; Volume produced by previous iter.   
d91 1
a91 3
   ; Create reference angle & ref. selection doc files for this iteration 
   DE
   [iter_ang_voea]         ; Ref. angles doc file
d93 1
a93 1
   [iter_select_voea]      ; Ref. angle selection doc file 
d95 1
a95 1
   IF ([small-ang].EQ.0) THEN ; Regular angle refinement
d97 1
a97 1
      ([ang-steps])        ; Angular step for projection angle for iteration
d99 1
a99 1
      RR S [ang-limit]     ; Restriction on angular degree search for iteration
d107 1
a107 1
      [iter_ang_voea]      ; Create ref. angles doc file    (output)
d112 1
a112 1
      (0,[ang-limit])      ; Small Angles
d114 1
a114 1
      [iter_ang_voea]      ; Create ref. angles doc file    (output)
a116 8
   DOC CREATE              ; Create ref. angle selection doc file   
   [iter_select_voea]      ; Ref. angle selection doc file  (output)
   (1)                     ; First register
   1-[num-angles]          ; Select all angles

   UD N [num-grps]         ; Get number of defocus groups
   [order_select]

d121 1
a121 1
      [order_select]
d133 1
a133 1
         @@smangloop([ang-step],[radius],[alignsh],[prj-radius],[iter],[grp],[stop],[maxspfreq])
a155 3
   DE                       ; Delete ref. angle selection file
   [iter_select_voea]       ; Ref. angle selection doc file 

d168 1
a168 1
  [order_select]
d173 2
a174 2
UD ICE
[order_select]
@


1.48
log
@ang-steps & endrefine parameter added
@
text
@d3 6
a8 6
; SOURCE: refine.pam        New                  ArDean Leith Nov  2000
;                           Rewritten            ArDean Leith Mar  2004
;                           [] variables         ArDean Leith Dec  2005
;                           Ampenhance fixed     ArDean Leith May  2006
;                           More stacks          ArDean Leith Dec  2006
;
d66 4
@


1.47
log
@Smangloop param iter1, enddo
@
text
@d8 1
a8 1
;                           Smangloop param.     ArDean Leith Apr  2009
d48 1
a75 6
   RR S [ang-step]
   ([ang-steps])           ; Angular step for projection angle (varies with iteration)
   [iter]
   RR S [ang-limit]        ; Restriction on angular degree search (varies with iteration)
   ([ang-limits])
   [iter]
d91 7
d106 1
a106 1
      [ang-step]           ; Angular step 
d151 1
a151 1
   IF([num-big].EQ.0) EXIT
a164 1

d183 1
a183 1
@@endrefine([maxspfreq],[iter])    
@


1.46
log
@clone dir changes
@
text
@d8 1
a8 1
;
d73 1
a73 1
DO LB1 [iter]=[iter1],[iter-end]
d120 1
a120 1
   DO LB3 [i]=1,[num-grps]
d134 1
a134 1
         @@smangloop([ang-step],[radius],[alignsh],[prj-radius],[iter],[grp],[stop],[iter1],[maxspfreq])
d142 1
a142 1
   LB3
d149 1
a149 1
   IF([num-big].EQ.0) GOTO LB71  
d161 2
a162 2
LB1
LB71
@


1.45
log
@[iter1]
@
text
@d57 2
@


1.44
log
@removed test goto lb99
@
text
@d1 1
a1 1
; <html><head><title>Controls and synchronizes refinement</title></head><body><pre>
d3 5
a7 5
; SOURCE: refine.pam          new                 ArDean Leith Nov  2000
;                             rewritten           ArDean Leith Mar  2004
;                                           []    ArDean Leith Dec  2005
;                             ampenhance fixed    ArDean Leith May  2006
;                             more stacks         ArDean Leith Dec  2006
d112 1
a112 1
  
d130 1
a130 1
         @@grploop([ang-step],[ang-limit],[radius],[alignsh],[prj-radius],[iter],[grp],[stop],[iter1],[maxspfreq])
d169 3
a171 3
DO LB4 [i]=1,[num-grps]     
    UD IC [i], [grp]       ; Get defocus group number from list
    [order_select]
d173 2
a174 2
    @@endmerge([prj-radius],[grp],[iter])
LB4
@


1.43
log
@added stacks, named variables
@
text
@a62 8
[iter]=1
UD N [num-grps]         ; Get number of defocus groups
[order_select]
goto lb99




a168 4


lb99

@


1.42
log
@ampenhance bug
@
text
@d3 5
a7 4
; SOURCE: refine.pam                      ArDean Leith Nov  2000
;                                         ArDean Leith Mar  2004
;                                   []    ArDean Leith Dec  2005
;                     ampenhance fixed    ArDean Leith May  2006
d9 1
a9 1
; PURPOSE: Controls refinement
d16 9
a24 9
;    [maxspfreq]                Maximum spatial freq[a-1] (used in prepare)
;    [radius]                   Radius of structure
;    [alignsh]                  Shift allowed is +-[alignsh]
;    [prj-radius]               Radius of structure for projection
;    [iter1]                    Starting iteration
;    [iter-end]                 Ending   iteration
;    [lambda]                   Lambda(angstroms) (used in prepare)
;    [small-ang]                Small angle refinement flag (1 is true) 
;    [converg]                  Convergence criterion percentage
d27 7
a33 12
;    input/dala{**iter}_{***group}@@     [aligned_images]     Aligned stacked image files
;    input/data{***grp}@@                [unaligned_images]   Unaligned stacked image file  
;    input/align{**iter}_{***group}     [group_align}        Initial alignment parameters 
;    input/order_select                 [order_select]       Image selection doc. file
;    input/vol{**iter}                  [initial_vol]        Initial volume
;
; OUTPUT FILES:
;    input/order_select_sort            [sorted_order_select]  Image ID doc. file (used here also)
;    final/vol{**iter+1}                [next_vol]             Final output volume for each iter.
;    final/vft{**iter}                  [vft_for_iter]         (Deleted here)  
;    final/align{**iter+1}}_{***group}  [next_group_align] 
;    final/dres{**iter+1}_{***group}    [next_group_dres]      (Created dres output doc. file
a36 1
;    sort                     <a href="./sort.pam">sort.pam</a>
d39 1
a39 1
;    grploop                  <a href="./grploop.pam">grploop.pam</a>            
d53 1
a53 1
TR OFF   ; Loop info turned off
d55 3
a57 4
VB OFF   ; File info turned off

MD   ; Set OMP processors
SET MP
d63 5
a67 3
IF([iter1].LE.1) THEN
   VM                   ; Dir. for temporary files - work & final dir
   mkdir -p [temp_work_dir] final 
a68 2
   ; Sort the group selection file 
   @@sort
a69 2
   ; Mirror any old alignments
   @@newdala([iter1])
d71 2
a72 1
   ; Prepare input files (only needs to be done once)  
a77 1

d81 9
a89 10
   DO LB2 I=1,[iter]
      RR [ang-step]        ; Angular step for projection angle (varies with iteration)
      [ang-steps]

      RR [ang-limit]       ; Restriction on angular degree search (varies with iteration)
      [ang-limits]

      RR [ampenhance]      ; Amplitude enhancement flag (varies with iteration)
      [amp-enhance-flags]
   LB2
d101 1
a101 2
   IF ([small-ang].EQ.0) THEN
      ; For regular angle refinement
d108 1
a108 2
   ELSE
      ; For Small angle refinement
d116 1
a116 1
   DOC CREATE              ; Create ref. angle selection doc file for this iteration
d121 2
a122 2
   UD N,[num-grps]         ; Get number of defocus groups
   [sorted_order_select]
d125 4
a128 4
   [num-big] = 0
   DO LB3 i=1,[num-grps]
      UD S i,[grp]        ; Get defocus group number from sorted list  
      [sorted_order_select]
d134 1
a134 1
      MY FL              ; Flush results file
d138 1
a138 1
         @@grploop([ang-step],[ang-limit],[radius],[winsize],[alignsh],[prj-radius],[iter],[grp],[stop],[iter1],[maxspfreq])
d140 1
a140 1
         @@smangloop([ang-step],[radius],[winsize],[alignsh],[prj-radius],[iter],[grp],[stop],[iter1],[maxspfreq])
d147 1
a147 1
      MY FL                      ; Flush results file
d149 1
a149 1
   UD E                          ; Finished with incore doc file
d152 1
a152 1
   echo " Iteration: {**[iter]} excessive proj. ang. changes in: {***[num-big]} groups"
a167 1

d171 2
d175 2
a176 1
echo " Alignment stopped after iteration: {***[iter]}"
a177 3
DO LB4 i=1,[num-grps]     
    UD IC,i,[grp]     ; Get defocus group number - [grp]
    [sorted_order_select]
d179 6
a184 2
    VM
    echo " Final merge for group: {***[grp]}"
d189 1
a189 1
[sorted_order_select]
d196 2
@


1.41
log
@cosmetic
@
text
@d3 4
a6 3
; SOURCE: refine.pam        ArDean Leith Nov  2000
;                           ArDean Leith Mar  2004
;                        [] ArDean Leith Dec  2005
d22 2
a23 2
;    [small-ang]                SMALL angle refinement flag (1 is true) 
;    x16                        Convergence criterion percentage
d48 2
a49 1
;    ...saveresp              <a href="./saveresp.pam">saveresp.pam</a>
d53 1
a53 1
;    ...saveresp              <a href="./saveresp.pam">saveresp.pam</a>
d90 1
a90 1
      RR [ang-step]      ; Angular step (varies with iteration)
d93 1
a93 1
      RR [ang-limit]     ;  Restriction on ang. search degrees (varies with iteration)
d95 3
d100 1
a100 1
   FT                      ; Fourier on volume 
d102 1
a102 1
   [iter_vft]              ; Used by all groups on this iter. in grploop - vft
d104 1
a104 1
   ; Create ref. angle & ref. selection doc files for this iteration 
d119 1
a119 1
      ; For SMALL angle refinement
d122 2
a123 2
      (0,[ang-limit])      ; SMALL Angles
      (0,0)                ; SMALL Angles
d145 1
a145 1
      MY FL   ; Flush results file
d156 1
a156 1
      IF([stop].GT.x16)  [num-big]=[num-big]+1  ; Excessive ang. change for this group  
d160 1
a160 1
   UD E                          ; Finished with doc file
d169 1
a169 1
   @@mergegroups([maxspfreq],[iter],[converg])
d177 1
a177 1
   MY FL   ; flush results
@


1.40
log
@uses named registers
@
text
@d47 1
a47 1
;    ...saveres               <a href="./saveres.pam">saveres.pam</a>
d51 1
a51 1
;    ...saveres               <a href="./saveres.pam">saveres.pam</a>
@


1.39
log
@x14 to smanglooop
@
text
@d3 3
a5 2
; SOURCE: refine.pam        ArDean Leith Nov. 2000
;                           ArDean Leith Mar. 2004
d14 8
a21 9
;    x14                        Maximum spatial freq[a-1] (used in prepare)
;    x51                        Radius of structure
;    x55                        Shift allowed is +-x55
;    x56                        Radius of structure for projection
;    x74                        Starting iteration
;    x75                        Ending   iteration
;    x71                        Lambda(angstroms) (used in prepare)
;    x70                        SMALL angle refinement flag (1 is true) 
;    x12                        Number of OMP processes
d25 5
a29 5
;    input/dala{**iter}_{***group}@@ [aligned_images]     Aligned stacked image files
;    input/data{***grp}@@            [unaligned_images]   Unaligned stacked image file  
;    input/align{**iter}_{***group} [group_align}        Initial alignment parameters 
;    input/order_select             [order_select]       Image selection doc. file
;    input/vol{**iter}              [initial_vol]        Initial volume
d32 5
a36 5
;    input/order_select_sort             [sorted_order_select]  Image ID doc. file (used here also)
;    final/vol{**iter+1}                 [next_vol]             Final output volume for each iter.
;    final/vft{**iter}                   [vft_for_iter]         (Deleted here)  
;    final/align{**iter+1}}_{***group}   [next_group_align] 
;    final/dres{**iter+1}_{***group}     [next_group_dres]      (Created dres output doc. file
a59 4
; Input initial parameters & file names but not angular steps
x76 = 0        ; Flag for initial refine_settings call
@@refine_settings(x76,x11,x11,x14,x51,x55,x56,x74,x75,x71,x70,x52,x16,x90)

d64 2
a65 1
x97 = 1        ; Beginning image number
d67 1
a67 1
IF(x74.LE.1)THEN
d75 1
a75 1
   @@newdala(x74)
d78 1
a78 1
   @@prepare(x14,x71,x74)
d83 1
d85 1
a85 1
DO LB1 x76=x74,x75
d87 7
a93 3
   ; Update global parameters (x41 & x42 depend on x76) but not names
   x98 = -x76
   @@refine_settings(x98,x41,x42,x14,x51,x55,x56,x74,x75,x71,x70,x52,x16,x90)
d105 1
a105 1
   IF (x70.EQ.0) THEN
d107 2
a108 2
      VO EA,x53            ; Sets x53 to number of reference projections
      x41                  ; Angular step (varies with iteration)
d115 3
a117 3
      VO EA,x53            ; Sets x53 to number of reference projections
      x41                  ; Angular step 
      (0,x42)              ; SMALL Angles
d125 1
a125 1
   x97-x53                 ; Select all angles
d127 1
a127 1
   UD N,x22                ; Get number of defocus groups
d131 3
a133 3
   x48 = 0
   DO LB3 x78=1,x22
      UD S,x78,x77        ; Get defocus group number from sorted list  
d139 1
a139 1
      echo " Processing group: {***x77}"
d142 3
a144 3
      ; grploop/smangloop returns x47 
      IF(x70.EQ.0)THEN  ; Runs main refinement smangloop tasks
         @@grploop(x41,x42,x51,x52,x55,x56,x76,x77,x47,x74,x14)
d146 1
a146 1
         @@smangloop(x41,x42,x51,x52,x55,x56,x76,x77,x47,x74,x14)
d150 2
a151 2
      ; x47 returns % of images whose proj. angle moved by >1.5*x41
      IF(x47.GT.x16)  x48=x48+1  ; Excessive ang. change for this group  
d158 1
a158 1
   echo " Iteration: {**x76} excessive proj. ang. changes in: {***x48} groups"
d161 1
a161 1
   IF(x48.EQ.0) GOTO LB71  
d164 1
a164 1
   @@mergegroups(x14,x76,x90)
d180 1
a180 1
echo " Alignment stopped after iteration: {***x76}"
d182 2
a183 2
DO LB11 x78=1,x22     
    UD IC,x78,x77     ; Get defocus group number - x77
d187 3
a189 3
    echo " Final merge for group: {***x77}"
    @@endmerge(x56,x77,x76)
LB11
d195 1
a195 1
@@endrefine(x14,x76)    
@


1.38
log
@grploop needs x14 now
@
text
@d144 1
a144 1
         @@smangloop(x41,x42,x51,x52,x55,x56,x76,x77,x47,x74)
@


1.37
log
@date
@
text
@d142 1
a142 1
         @@grploop(x41,x42,x51,x52,x55,x56,x76,x77,x47,x74)
d162 1
a162 1
   @@mergegroups(x14,x52,x76,x90)
@


1.36
log
@echo formatting changed again
@
text
@d135 1
a135 1
      date
d176 1
a176 1
date
d196 2
a197 1
date
@


1.35
log
@x90 to mergegroups
/
@
text
@d137 1
a137 1
      echo "Processing group: {***x77}"
d156 1
a156 1
   echo "Iteration: {**x76} excessive proj. ang. changes in: {***x48} groups"
d178 1
a178 1
echo "Alignment stopped after iteration: {***x76}"
d185 1
a185 1
    echo "Final merge for group: {***x77}"
@


1.34
log
@refine_settings passes x90 now
@
text
@d162 1
a162 1
   @@mergegroups(x14,x52,x76)
@


1.33
log
@   mkdir -p [temp_work_dir] final
@
text
@d62 1
a62 1
@@refine_settings(x76,x11,x11,x14,x51,x55,x56,x74,x75,x71,x70,x52,x16)
d91 1
a91 1
   @@refine_settings(x98,x41,x42,x14,x51,x55,x56,x74,x75,x71,x70,x52,x16)
@


1.32
log
@newdala call added
@
text
@d71 2
a72 2
   VM                   ; Dir. for temporary files - work
   mkdir -p [temp_work_dir]
@


1.31
log
@smangloop parameters
 .
@
text
@d74 1
d76 4
@


1.30
log
@ x52 (image size) got from refine_settings
@
text
@d139 1
a139 1
         @@smangloop(x41,x51,x52,x55,x56,x76,x77,x47,x74)
@


1.29
log
@use inital_volume for size determination at start
@
text
@d62 1
a62 1
@@refine_settings(x76,x11,x11,x14,x51,x55,x56,x74,x75,x71,x70,x12,x16)
d66 1
a66 1
x12
a69 1

a78 4
FI x52         ; Query NSAM value (NROW must be = NSAM)
[initial_vol]  ; Initial reference volume   
12             ; Label position for: nsam 

d86 1
a86 1
   @@refine_settings(x98,x41,x42,x14,x51,x55,x56,x74,x75,x71,x70,x12,x16)
@


1.28
log
@grploop & smangloop have 10 params.
@
text
@d81 1
a81 1
[current_vol]  ; Initial reference volume   
@


1.27
log
@x56 for proj. radius
@
text
@d142 1
a142 1
         @@grploop(x41,x42,x51,x52,x55,x56,x76,x77,x47,x74,x75)
d144 1
a144 1
         @@smangloop(x41,x51,x52,x55,x56,x76,x77,x47,x74,x75)
@


1.26
log
@x14 passed to mergegroups & endrefine
@
text
@d4 1
a4 1
;                         ArDean Leith Mar. 2004
d16 1
d62 1
a62 1
@@refine_settings(x76,x11,x11,x14,x51,x55,x74,x75,x71,x70,x12,x16)
d91 1
a91 1
   @@refine_settings(x98,x41,x42,x14,x51,x55,x74,x75,x71,x70,x12,x16)
d142 1
a142 1
         @@grploop(x41,x42,x51,x52,x55,x76,x77,x47,x74,x75)
d144 1
a144 1
         @@smangloop(x41,x51,x52,x55,x76,x77,x47,x74,x75)
d186 1
a186 1
    @@endmerge(x51,x77,x76)
@


1.25
log
@x52 not passed now to prepare
@
text
@d161 1
a161 1
   @@mergegroups(x52,x76)
d192 1
a192 1
@@endrefine(x52,x76)    
@


1.24
log
@ap sh
@
text
@a68 3
FI x52         ; Query NSAM value (nrow must be = NROW)
[initial_vol]  ; Initial reference volume   
12             ; Label position for: nsam 
d76 1
a76 1
   @@prepare(x52,x14,x71,x74)
d78 4
@


1.23
log
@[current_volume] needs x76
@
text
@d3 1
a3 1
; FILE: refine.pam        ArDean Leith Nov. 2000
d6 2
a9 2
; PURPOSE: Controls refinement
;
d26 1
a26 1
;    input/align{**iter}_{***group} [group_align}        Original alignment parameters 
a28 1
;    input/ctfs                     [ctf_input]          CTF Starting file   
d30 1
a30 1
; OUTPUT FILES):
a40 1
;    ... makeselect           <a href="./makeselect.pam">makeselect.pam</a>
d60 1
a60 1
x76 = 0
d69 4
a79 5
ELSE
   x76 = x74
   FI x52         ; Query NSAM value (nrow must be = NROW)
   [initial_vol]  ; Initial reference volume   
   12             ; nsam 
d103 5
a107 5
      VO EA,x53               ; Sets x53 to number of reference projections
      x41                     ; Angular step (varies with iteration)
      (0,90.0)                ; Angles
      (0,359.9)               ; Angles
      [iter_ang_voea]         ; Create ref. angles doc file    (output)
d111 5
a115 5
      VO EA,x53               ; Sets x53 to number of reference projections
      x41                     ; Angular step 
      (0,x42)                 ; SMALL Angles
      (0,0)                   ; SMALL Angles
      [iter_ang_voea]         ; Create ref. angles doc file    (output)
d129 1
a129 1
      UD S,x78,x77      ; Get defocus group number from sorted list  
d196 1
a196 1
echo "HURRAH, FINISHED REFINEMENT"
@


1.22
log
@cosmetic & x47 fixes
@
text
@d79 1
@


1.21
log
@needed work dir to start sort
@
text
@d5 1
a5 1

d10 3
a12 1
; INPUT REGISTERS (SET in  <a href="./refine_settings.pam">refine_settings.pam</a>)):
d23 1
a23 1
; INPUT FILES (SET IN <a href="./refine_settings.pam">refine_settings.pam</a>):
d31 1
a31 1
; OUTPUT FILES (SET IN <a href="./refine_settings.pam">refine_settings.pam</a>):
d45 1
d128 1
a128 1
   ; Process all defocus groups
d131 1
a131 1
      UD IC,x78,x77      ; Get this defocus group number from sorted list of groups
d135 2
a137 2
      VM
      date
d148 4
a151 3
      ; If fewer than x16% moved by more than x17* current ang. step size can stop
      IF(x47.GT.x16)  x48=x48+1       ; Excessive ang. change for this group  
      MY FL   ; Flush results file
d153 1
a153 1
   UD E
a154 1
   ; If projection angular changes were small in all groups, can stop now
d157 3
a159 1
;;;;;   IF(x48.EQ.0) GOTO LB71  
a169 1

d176 2
a178 2
VM
date
d189 2
a190 1
UD E
d196 1
a196 1
echo "HURRAH, FINISHED"
d198 1
a198 1
date
@


1.20
log
@ap sh
@
text
@d3 3
a5 2
; FILE: refine.pam        ArDean Leith Nov 2000
;
d69 3
@


1.19
log
@ap ref
@
text
@a11 1
;    x52                        Image size
a14 2
;    x65                        Starting defocus group
;    x66                        Ending   defocus group
d16 1
a16 1
;    x70                        SMALL angle refinement flag (1 is true) (unused)
d31 1
a31 1
;    final/vft{**iter}                   [vft_for_iter]         (deleted here)  
d33 1
a33 1
;    final/dres{**iter+1}_{***group}     [next_group_dres]      (created dres output doc. file
d59 1
a59 1
@@refine_settings(x76,x11,x11,x14,x51,x52,x55,x74,x75,x65,x66,x71,x70,x12,x16)
d65 1
a65 2
x22 = x66 - x65 + 1        ; Number of groups
x97 = 1                    ; Beginning image number
d70 5
a74 1
   @@prepare(x65,x66,x52,x14,x71,x74)
d84 1
a84 1
@@refine_settings(x98,x41,x42,x14,x51,x52,x55,x74,x75,x65,x66,x71,x70,x12,x16)
d118 3
d123 2
a124 2
   DO LB3 x78=x65,x66
      UD S,x78,x77      ; Get this defocus group number from sorted list of groups
d158 4
d172 2
a173 2
DO LB11 x78=x65,x66     
    UD S,x78,x77     ; Get defocus group number - x77
@


1.18
log
@*** empty log message ***
@
text
@d21 1
d32 5
a36 6
;    input/order_select_sort                [sorted_order_select]  Image ID doc. file (used here also)
;    final/vol{**iter+1}                    [next_vol]             Final output volume for each iter.
;    final/vft{**iter}                      [vft_for_iter]         (deleted here)  
;    final/align{**iter+1}}_{***group}      [next_group_align] 
;    final/defgrp{***grp}/apmd{**iter+1}    [next_group_apmd] 
;    final/defgrp{***grp}/dres{**iter+1}    [next_group_dres]      (created dres output doc. file
d62 1
a62 1
@@refine_settings(x76,x11,x11,x14,x51,x52,x55,x74,x75,x65,x66,x71,x70,x12)
d71 6
a76 3
; Prepare input files (only needs to be done once)  
@@sort
@@prepare(x65,x66,x52,x14,x71,x74)
d84 1
a84 1
   @@refine_settings(x98,x41,x42,x14,x51,x52,x55,x74,x75,x65,x66,x71,x70,x12)
d113 1
a113 2

   DOC CREATE              ; Create  doc file
d121 1
a121 1
      UD S,x78,x77      ; Get this defocus group number
d137 3
a139 1
      x48=x48+x47
d144 1
a144 1
   ; If angular changes were small in all groups, can stop now
d146 2
a147 2
   echo "For iteration: {***x76} Angular change counter x48: {***x48}"
   IF(x48.EQ.x22) GOTO LB71  
a174 1

@


1.17
log
@for small angle
@
text
@d5 1
a5 1
; MASTER COPY: /net/bali/usr1/spider/docs/techs/recon/programs/
d25 1
a25 1
;    input/trans{**iter}_{***group} [group_trans}        Original alignment offsets 
d34 1
a34 1
;    final/defgrp{***grp}/angles{**iter+1}  [next_group_angles] 
d64 3
a66 5
if (x12.GT.1) THEN 
   MD   ; Set OMP processors
   SET MP
   x12
ENDIF
a159 4

; Create align doc files from angles & trans doc files
x86=x76+1
@@makealigndoc(x65,x66,x86)
@


1.16
log
@x86 for makealigndoc
@
text
@d95 7
a101 5
   VO EA,x53               ; Sets x53 to number of reference projections
   x41                     ; Angular step (varies with iteration)
   (0,90.0)                ; Angles
   (0,359.9)               ; Angles
   [iter_ang_voea]         ; Create ref. angles doc file    (output)
d103 10
d130 7
a136 1
      @@grploop(x41,x42,x51,x52,x55,x76,x77,x47,x74,x75)
d143 2
@


1.15
log
@never stoped befor No. of iters
@
text
@a142 2
x76=x76+1 ; This will now use files created by last iter

d144 2
a145 1
@@makealigndoc(x65,x66,x76)
@


1.14
log
@makealign
@
text
@d35 1
a35 1
;    final/defgrp{***grp}/apmd{**iter+1}    [group_apmd]
a36 1
;    jnkdoc{***group}                                              Sync doc file from pubsub tasks
d70 1
a70 1
x12 = x66 - x65 + 1        ; Number of groups
d125 1
a125 1
   IF(x48.EQ.x12) GOTO LB71  
d144 2
a153 1

@


1.13
log
@x12
@
text
@d145 1
@


1.12
log
@x48 bug fixed
@
text
@d19 2
d63 1
a63 1
@@refine_settings(x76,x11,x11,x14,x51,x52,x55,x74,x75,x65,x66,x71,x70)
d65 6
d84 1
a84 1
   @@refine_settings(x98,x41,x42,x14,x51,x52,x55,x74,x75,x65,x66,x71)
@


1.11
log
@*** empty log message ***
@
text
@d100 1
d112 1
d118 1
a118 1
   IF(x47.EQ.x12) GOTO LB71  
@


1.10
log
@*** empty log message ***
@
text
@d61 1
a61 1
@@refine_settings(x76,x11,x11,x14,x51,x52,x55,x74,x75,x65,x66,x71)
d84 1
a84 1
   <iter_ang_voea>         ; Ref. angles doc file
d86 1
a86 1
   <iter_select_voea>      ; Ref. angle selection doc file 
d92 1
a92 1
   <iter_ang_voea>         ; Create ref. angles doc file    (output)
d95 1
a95 1
   <iter_select_voea>      ; Ref. angle selection doc file  (output)
@


1.9
log
@*** empty log message ***
@
text
@d1 1
a1 1
; <html><head><title>Controls and synchronizes alignment</title></head><body><pre>
d7 1
a7 1
; PURPOSE: Controls alignment
a18 1
;    x72                        Lambda(angstroms) (used in prepare)
d24 1
a24 1
;    input/order_select             [order_select]       Image ID doc. fil
d61 1
a61 1
@@refine_settings(x76,x11,x11,x14,x51,x52,x55,x74,x75,x65,x66,x71,x72)
d68 1
a68 1
@@prepare(x65,x66,x52,x14,x71,x72,x74)
d76 1
a76 1
   @@refine_settings(x98,x41,x42,x14,x51,x52,x55,x74,x75,x65,x66,x71,x72)
@


1.8
log
@*** empty log message ***
@
text
@d3 1
a3 1
;refine.pam        ArDean Leith Nov 2000
d7 1
a7 1
; PURPOSE: Runs on one node to control and synchronize alignment
a43 1
;    refine_settings          <a href="./refine_settings.pam">refine_settings.pam</a>            
@


1.7
log
@*** empty log message ***
@
text
@d1 1
a1 3

; <html><head><title>Runs defocus group loop & endmerge</title></head><body><pre>
; refine.pam --  Runs defocus group loop & endmerge  ArDean Leith Feb. 2002
d3 1
a3 1
; MASTER COPY: /net/bali/usr1/spider/docs/techs/recon/programs/refine.pam
d5 1
a5 1
; PURPOSE: Refines structure  
d7 1
a7 1
; CALLED FROM:   Main procedure 
d9 28
a36 23
; INPUT REGISTERS (NEED TO SET BELOW):
; x51                        Radius of structure
; x52                        Image size
; x55                        Shift allowed is +-x55
; x74                        Starting iteration
; x75                        Ending   iteration
; x65                        Starting defocus group
; x66                        Ending   defocus group
; x71                        Lambda(angstroms) (used in prepare)
; x72                        Lambda(angstroms) (used in prepare)
; x14                        Maximum spatial freq[a-1] (used in prepare)
;
; INPUT FILES(SET IN <a href="./where.pam">where.pam</a>.pam):
; input/dala{**iter}_{***group}          Aligned windowed image files         
; input/data{***group}@@                  Unaligned windowed image files
; input/trans{**iter}_{***group}         Original alignment offsets 
; input/order_select_sort   [sorted_order_select]  Image ID doc. file (used here also)
; input/vol{**iter}         [starting_vol]         Starting volume
; input/ctfs                [ctf_input]            CTF Starting file   
;
; OUTPUT FILES(SET IN <a href="./where.pam">where.pam</a>.pam):
; final/vol{**iter+1}       [next_vol]       Final output volume for each iter.
; final/vft{**iter}         [iter_vft]      (deleted here)  
d39 16
a54 29
; where                    <a href="./where.pam">where.pam</a>            
; sort                     <a href="./sort.pam">sort.pam</a>
; prepare                  <a href="./prepare.pam">prepare.pam</a>
; ... makeselect           <a href="./makeselect.pam">makeselect.pam</a>
; grploop                  <a href="./grploop.pam">grploop.pam</a>            
; mergegroups              <a href="./mergegroups.pam">mergegroups.pam</a>
; endmerge                 <a href="./endmerge.pam">endmerge.pam</a>
; endrefine                <a href="./endrefine.pam">endrefine.pam</a>  
;
; -------------------------------------------------------------
; This refinement program assumes preliminary angular doc files exist.
; The CCF file is windowed to prevent too large shifts of projections.
;
; Modify next nine parameters!!!!
;
x51=76         ; Radius of the structure
x52=155        ; Image size
x55=6          ; Shift allowed is +-x55, input images are padded
x74=1          ; Starting alignment step (iteration)
x75=9          ; Ending alignment step (iteration)
x65=1          ; Starting defocus group
x66=43         ; Ending defocus group
x66=3

x14=0.17730496 ; Maximum spatial frequency[a-1] (used in prepare)
x71=0.02501    ; Lambda[angstroms] (used in prepare 1..36)
x72=0.03701    ; Lambda[angstroms] (used in prepare 37....)

@@where         ; Input global file name variables
d61 6
a66 1
MY FL
a70 1

d73 2
a74 5
x12= x66-x65+1           ; Number of defocus groups
x78=1.0                  ; Beginning image number

DO LB1 x76=x74,x75       ; Loop over all iterations
   x47=0                 ; Counter for convergence
d76 7
a82 11
   FT                    ; Fourier on volume 
   [current_vol]         ; Volume produced by previous iter.   
   [iter_vft]        ; Used by all groups on this iter. - vft

   ; Set registers 41 & 42 for current iteration
   DO LB3 x21=1,x76
      RR x41      ;  Sequence of angular steps, can be modified 
      2.0,2.0,2.0,2.0,2.0,1.5,1.5,1.5
      RR x42      ;  Restriction on angular search
      15.0,15.0,5.0,5.0,5.0,5.0,5.0,5.0
   LB3
d85 4
d97 3
a99 3
   <iter_select_voea>      ; ref. angle selection doc file  (output)
   1                       ; First register
   x78-x53                 ; Select all angles
d101 4
a104 1
   DO LB2 x78=x65,x66    ; Loop over all defocus groups
d106 5
a110 2
      UD S,x78,x77       ; Get this defocus group number
      [sorted_order_select]
d112 4
a115 2
;     Run defocus group loop.  Returns x17 
      @@grploop(x41,x42,x51,x52,x55,x76,x77,x17,x74,x75)
a116 4
      x47 = x47 + x17
   LB2

 
d118 1
a118 1
   IF(x47.EQ.x66) GOTO LB71
d120 2
a121 2
   ; Consolidate data for CTF corrections over all groups
   @@mergegroups(x52,x66,x76)
d123 1
a123 1
   DE                           ; Delete vft file.
d138 1
a138 1
DO LB11 x78=1,x12     
d142 3
d148 4
a151 1
; Prepare final volume and resolution files
d155 1
a155 1
echo "REFINEMENT FINISHED"
a160 1

@


1.6
log
@loop changed x65,x66
@
text
@d33 1
a33 1
; final/vft{**iter}         [vft_for_iter]   (deleted here)  
a40 1
; ... lang                 <a href="./lang.pam">lang.pam</a>
d80 1
d87 1
a87 1
   [vft_for_iter]        ; Used by all groups on this iter. - vft
d96 13
d121 1
d129 1
a129 1
   [vft_for_iter]               ; Used by all groups this iter.  
@


1.5
log
@works
@
text
@d5 1
a5 1
; MASTER COPY: 
d9 1
a9 1
; CALLED FROM:   Run directly 
d97 1
a97 1
   DO LB2 x78=1,x12      ; Loop over all defocus groups
d140 1
a140 1
echo "HURRAH, FINISHED"
@


1.4
log
@after test
@
text
@d25 1
a25 1
; input/data{***group}@@                  Unrotated windowed image files
a33 1
; jnkdoc{***group}                 Sync doc file from pubsub tasks
d37 1
d40 4
a43 18
; pub_refine               <a href="./pub_refine.pam">pub_refine</a)
; ... sort                 <a href="./sort.pam">sort.pam</a>
; ... publish              <a href="./publish.perl">publish</a>
; ...... pub_starter       <a href="./pub_starter.pam">pub_starter.pam</a>            
; .......... where         <a href="./where.pam">where.pam</a>            
; .......... grploop       <a href="./grploop.pam">grploop.pam</a>            
; ............. alirn      <a href="./alirn.pam">alirn.pam</a>
; ............. lang       <a href="./lang.pam">lang.pam</a>
; .......pub_doc_sync      <a href="./pub_doc_sync.pam">pub_doc_sync.pam</a>
; ... wait                 <a href="./wait.pam">wait.pam</a>
; ... mergegroups          <a href="./mergegroups.pam">mergegroups.pam</a>
; ... publish              <a href="./publish.perl">publish</a>
; ...... pub_starter       <a href="./pub_starter.pam">pub_starter.pam</a>            
; ......... where          <a href="./where.pam">where.pam</a>            
; ......... endmerge       <a href="./endmerge.pam">endmerge.pam</a>
; .......pub_doc_sync      <a href="./pub_doc_sync.pam">pub_doc_sync.pam</a>
; ... wait                 <a href="./wait.pam">wait.pam</a>
; wait                     <a href="./wait.pam">wait.pam</a>
a66 2
; ---------------------------------------------------------------------

d108 2
a109 4
   IF(x47.EQ.x66) THEN  ; x47 equals number of defocus groups
      ;  In all groups angular changes made were small, can stop now
      GOTO LB71
   ENDIF
a135 3
; Wait for all subscriber defocus group tasks
@@wait(x11,x47,x66,x76)

d137 1
a137 1
@@endrefine(x76)    
@


1.3
log
@x47 bug
@
text
@d1 3
a3 2
; <html><head><title>Controls refinement</title></head><body><pre>
; refine.pam        ArDean Leith Nov 2000
d5 1
a5 1
; SOURCE LOCATION: <a href="./refine.pam">refine.pam</a>
d7 1
a7 1
; PURPOSE: Runs on one node to control and synchronize refinement
d9 1
a9 17
; INPUT (SET BELOW):
; x51 (below)                      Radius of structure
; x52 (below)                      Image size
; x74 (below)                      Starting iteration
; x75 (below)                      Ending   iteration
; x65 (below)                      Starting defocus group
; x66 (below)                      Ending   defocus group
; x71 (below)                      Lambda(angstroms) (used in prepare)
; x72 (below)                      Lambda(angstroms) (used in prepare)
; x14 (below)                      Maximum spatial freq[a-1] (used in prepare)
; INPUT (SET in <a href="./where.pam">where.pam</a>):
; input/dala{**iter}_{***group}    Aligned windowed image files         
; input/data{***group}@@            Unrotated windowed image files
; input/trans{**iter}_{***group}   Original alignment offsets 
; input/order_select        [order_select]   Image ID doc. file (used here also)
; input/vol{**iter}         [starting_vol]   Starting volume
; input/ctfs                [ctf_input]      CTF Starting file   
d11 16
a26 1
; OUTPUT:
d28 4
d34 1
d36 23
a58 10
; CALLS:
; where                <a href="./where.pam">where.pam</a>
; prepare              <a href="./prepare.pam">prepare.pam</a>
; ... makeselect       <a href="./makeselect.pam">makeselect.pam</a>
; ......... grploop    <a href="./grploop.pam">grploop.pam</a>            
; ............ alirn   <a href="./alirn.pam">alirn.pam</a>
; ............ lang    <a href="./lang.pam">lang.pam</a>
; mergegroups          <a href="./mergegroups.pam">mergegroups.pam</a>
; ......... endmerge   <a href="./endmerge.pam">endmerge.pam</a>
; endrefine            <a href="./endrefine.pam">endrefine.pam</a>  
d60 1
d72 2
a73 1
x66=3         ; Ending defocus group
a74 1
x71=0.02501    ; Lambda[angstroms] (used in prepare)
d76 5
a80 1
;
d84 1
a84 1
TR OFF     ; loop info turned off
d86 1
a86 1
VB OFF     ; file info turned off
d88 1
a88 1
@@where     ; input global parameters & file name variables
d90 1
a90 1
; prepare sorted group definition file (only needs to be done once)  
d92 3
d96 4
a99 2
; Prepare input files (only needs to be done once)  
@@prepare [x65,x66,x52,x14,x71,x72,x74]
d101 3
a103 1
MY FL   ; flush results file
d105 3
a107 5
;  Loop over all iterations
x12= x66-x65+1
DO LB2 x76=x74,x75
   DO LB11 x21=1,x76
      RR x41      ;  sequence of angular steps, can be modified !!!
d111 3
a113 1
   LB11
d115 1
a115 8
   FT
   [current_vol]         ; volume produced by previous iter.   
   [vft_for_iter]        ; used by all groups on this iter. in grploop - vft

   ;  Loop over all defocus groups
   x47= 0               ; Iteration convergence flag
   DO LB4 x78=1,x12
      UD S,x78,x77      ; get this defocus group number -- x77
d117 3
a119 7
   
      ; returns x17
      @@grploop[x41,x42,x51,x52,x55,x76,x77,x17,x74,x75]

      VM
      date
      MY FL   ; flush results
d122 1
a122 2
   LB4
   UD E
d129 2
a130 2
   ; consolidate data for CTF corrections
   @@mergegroups[x52,x66,x76]
d132 2
a133 2
   DE                           ; delete vft file.
   [vft_for_iter]               ; used by all groups this iter.  
d136 1
a136 1
LB2
d145 1
a145 1
; start up endmerge 
d147 3
a149 1
x76=x76+1 ; this will now use files created by last iter
d151 2
a152 5
DO LB14 x78=1,x12     
    UD S,x78,x77     ; get defocus group number --] x77
    [sorted_order_select]
   
    @@endmerge[x51,x77,x76]
d154 2
a155 4
    MY FL   ; flush results
    VM
    date
LB14
d157 2
a158 2
; prepare final resolution files
@@endrefine[x76]    
a164 1

d167 1
@


1.2
log
@*** empty log message ***
@
text
@d53 2
a54 1
x66=43         ; Ending defocus group
d70 1
a70 1
; prepare input files (only needs to be done once)  
d75 1
a75 1
;  loop over all iterations
d89 2
a90 1
   ;  loop over all defocus groups
d95 2
a96 2
      ; returns x47
      @@grploop[x41,x42,x51,x52,x55,x76,x77,x47,x74,x75]
d101 2
d112 1
a112 1
   @@mergegroups[x52,x76]
@


1.1
log
@Initial revision
@
text
@d22 3
a24 3
; input/order_select        <order_select>   Image ID doc. file (used here also)
; input/vol{**iter}         <starting_vol>   Starting volume
; input/ctfs                <ctf_input>      CTF Starting file   
d27 3
a29 3
; input/order_select_sort   <sorted_order_select>  Image ID doc. file (used here also)
; final/vol{**iter+1}       <next_vol>       Final output volume for each iter.
; final/vft{**iter}         <vft_for_iter>   (deleted here)  
d85 2
a86 2
   <current_vol>         ; volume produced by previous iter.   
   <vft_for_iter>        ; used by all groups on this iter. in grploop - vft
d90 2
a91 2
      UD S,x78,x77      ; get this defocus group number --> x77
      <sorted_order_select>
d111 1
a111 1
   <vft_for_iter>               ; used by all groups this iter.  
d128 2
a129 2
    UD S,x78,x77     ; get defocus group number --> x77
    <sorted_order_select>
@
