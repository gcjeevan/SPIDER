; REALIGNS IMAGES
; 
; Adapted from pairwise.rct

; ------------------ Parameter ------------------

[progressInterval] = 1000  ; progress message written every Nth particle

; ----------------- Input files -----------------
FR L
[selection_list]listparticles                     ; particle list
FR L
[final_align_doc]Zerodegr/Pairwise/docalign   ; final, reference-based alignment doc
FR L
[unaligned_image]Zerodegr/stk2-winrot@*****         ; particle template

; ----------------- Output files -----------------
FR L
[aligned_dir]Zerodegr             ; output directory
FR L
[aligned_stack][aligned_dir]/stk3-aligned     ; aligned-image stack (w/o "@")
FR L
[aligned_images][aligned_stack]@*****   ; aligned-image template

; --------------- END BATCH HEADER ---------------

FR L
[temp_mirrored]_31

SYS
mkdir [aligned_dir]

DE 
[aligned_stack]@

; get #particles
UD N [numParts]
[selection_list]

; loop through particles
DO LB3 [partKey] = 1,[numParts]
    UD IC [partKey],[part]
    [selection_list]
    
    IF ( INT([partKey]/[progressInterval]) .EQ. [partKey]/[progressInterval] ) THEN
        SYS
        echo "Working on {%I0%[partKey]}th particle out of {%I0%[numParts]}"
    ENDIF

    ; read alignment parameters
    UD IC [part], x81,x82,x83,x84,x85,[angle],[xshift],[yshift],x89,x90,x91,x92,x93,x94,[mirrorFlag]
    [final_align_doc]

    ; if necessary, mirror after shift+rotate
    IF ( [mirrorFlag] .LT. 0 ) THEN
        RT SQ
        [unaligned_image][part]
        [temp_mirrored]  ; OUTPUT
        [angle]
        [xshift],[yshift]

        MR
        [temp_mirrored]  ; INPUT: rotated, shifted image
        [aligned_images][part]
        Y                ; mirror around y-axis
    ELSE
        RT SQ
        [unaligned_image][part]
        [aligned_images][part]
        [angle]  ; in-plane angle
        [xshift],[yshift]
    ENDIF
LB3
; end particle-loop

; close docs
UD ICE
[final_align_doc]
UD ICE
[selection_list]

SYS
echo "Done"; date

EN D

; Modified 2018-02-07
;    2014-04-02 (trs & mp) -- uses stacks
