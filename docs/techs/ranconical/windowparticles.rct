; WINDOWS PARTICLES FROM TILTED AND UNTILTED MICROGRAPHS

; ----------------------- Parameters -----------------------
[shrinkFactor]   = 5    ; downsampling factor applied to micrographs
[revContrastYN]  = 0    ; reverse contrast? (1==Yes)
[noiseRefNum]    = -1   ; noise-reference to use (-1: automatically selected image)
[firstParticle]  = 1    ; first-particle number
[excludeEdgesYN] = 1    ; exclude particles on micrograph edge (0==Keep)

; ------------------------- Inputs -------------------------
FR L
[parameter_doc]params                                       ; parameter doc file
FR L 
[mic_pair_doc]docmicpairs                                   ; micrograph-pairing list
FR L
[noise_ref_random]noise                                     ; noise reference (see [noiseRefNum])
FR L
[noise_ref_stack]tmpnoise/noi@                              ; noise-reference stack (if manually selected, see [noiseRefNum])
FR L
[mic_dir]Micrographs                                        ; directory with micrographs and coordinate files
FR L
[input_micros][mic_dir]/mic***                              ; micrographs
FR L
[untilted_coords_doc][mic_dir]/dcu***                       ; untilted coords template
;               PARTNUM     X_COORD      Y_COORD
;                             used         used
FR L
[tilted_coords_doc][mic_dir]/dct***                         ; tilted coords template
;                           X_COORD      Y_COORD
;                             used         used
FR L
[tilt_params_doc][mic_dir]/dcb***                           ; tilt-parameter doc file template
;             THETA        GAMMA         PHI

; ------------------------- Outputs -------------------------
FR L
[untilted_dir]Zerodegr                                      ; output untilted-image directory
FR L
[untilted_unrot_stack][untilted_dir]/stk0-unrot             ; untilted, unrotated image stack (w/o "@")
FR L
[untilted_backup][untilted_dir]/stk1-winrot_backup          ; backup untilted-image stack (w/o "@")
FR L
[untilted_stack][untilted_dir]/stk2-winrot                  ; untilted-image template (w/o "@")
FR L
[tilted_dir]Tilted                                          ; output tilted-image directory
FR L
[tilted_unrot_stack][tilted_dir]/stk0-unrot                 ; untilted, unrotated image stack (w/o "@")
FR L
[tilted_backup][tilted_dir]/stk1-winrot_backup              ; backup tilted-image stack (w/o "@")
FR L
[tilted_stack][tilted_dir]/stk2-winrot                      ; tilted-image stack (w/o "@")
FR L
[mic2particle_table]order_picked                            ; micrograph-to-particle lookup-table
;        UNTILTED    #PARTICLES    CUMTOTAL    FIRST_PART    LASTPART
FR L
[particle_list]listparticles                                ; particle list
;      PARTICLE_NUM  MICROGRAPH
FR L
[edge_particle_doc][mic_dir]/doc-edge-particles             ; list of particles off edge of micrograph
;         MICPART       MIC_NUM

;; (shouldn't need to modify below here -- only important for the number of digits allocated)
;FR L
;[untilted_unrot_stacked_images][untilted_unrot_stack]@****  ; untilted, unrotated image template
;;;; NOW [untilted_unrot_stack]@{%I0%[particleNumber]}
;FR L
;[untilted_stacked_images][untilted_backup]@****             ; untilted-image template
;;;;NOW [untilted_backup]@{%I0%[particleNumber]}
;FR L
;[tilted_unrot_stacked_images][tilted_unrot_stack]@****      ; untilted, unrotated image template
;;;;NOW [tilted_unrot_stack]@{%I0%[particleNumber]}
;FR L
;[tilted_stacked_images][tilted_backup]@****                 ; tilted-image template
;;;;NOW [tilted_backup]@{%I0%[particleNumber]}

; -------------------- END BATCH HEADER ---------------------

; Temporary files
FR L
[temp_circle_mask]_16
FR L
[temp_inverted_mask]_18
FR L
[temp_noise_incore]_17
FR L
[temp_untilted_mic]_20
FR L
[temp_untilted_windowed]_21
FR L
[temp_untilted_ramped]_22
FR L
[temp_reverse_contrast]_23
FR L
[temp_tilted_mic]_30
FR L
[temp_tilted_windowed]_31
FR L
[temp_tilted_ramped]_32

; prepare directories/files
SYS
mkdir -p [untilted_dir]
SYS
mkdir -p [tilted_dir]
DE
[untilted_unrot_stack]
DE
[untilted_backup]@
DE
[tilted_unrot_stack]@
DE
[tilted_backup]@
DE
[mic2particle_table]
SD /     UNTILTEDMIC    PARTICLES      CUMTOTAL     FIRSTPART     LAST_PART
[mic2particle_table]
@backup
[particle_list]  ; INPUT (backed up)
DE
[edge_particle_doc]

; initialize particle-counter
[particleNumber] = [firstParticle] - 1
[pairCounter]    = 0
[offEdgeCounter] = 0

; get window dimension
UD 17, [idim]
[parameter_doc]
UD E

SYS M
echo "Using window size {***[idim]} px" ; 
echo "Multiplying coordinates by a factor of {**[shrinkFactor]}" ;
.

IF ( [revContrastYN] .GE. 0.5 ) THEN
    SYS
    echo "Inverting contrast" ; echo
ELSE
    SYS
    echo "Not inverting contrast" ; echo
ENDIF

IF ( [excludeEdgesYN] .GE. 0.5 ) THEN
    SYS
    echo "Edge exclusion set to ON" ; echo
ELSE
    SYS
    echo "Edge exclusion set to OFF" ; echo
ENDIF

[halfDim]    = [idim]/2
[maskRadius] = [halfDim] - 1

; copy noise-reference into memory
IF ([noiseRefNum] .LE. 0) THEN
    CP
    [noise_ref_random]
    [temp_noise_incore]
ELSE
    CP
    [noise_ref_stack]{**[noiseRefNum]}
    [temp_noise_incore]
ENDIF

; create mask for normalization
MO
[temp_circle_mask]
[idim],[idim]
C  ; _C_ircle
[maskRadius]

; invert mask
AR
[temp_circle_mask]
[temp_inverted_mask]
(P1-1)*(-1)

[tiltKey] = 124

; renumber pair doc
DOC REN
[mic_pair_doc]
[mic_pair_doc]_renum

; get #pairs
UD N [numPairs]
[mic_pair_doc]_renum

; loop through pairs
DO LB1 [micKey] = 1,[numPairs]
    ; get untilted & tilted micrograph#
    UD IC [micKey], [untiltedMicNum],[tiltedNum]
    [mic_pair_doc]_renum

    ; check if tilted-coordinates doc exists
    IQ FI [exists]
    [tilted_coords_doc][untiltedMicNum]

    IF ( [exists] .EQ. 0 ) THEN
        SYS
        echo "Doc file not found -- Skipping micrographs {****[tiltedNum]} and {****[untiltedMicNum]}"

        GOTO LB1
    ENDIF

    SYS
    echo "Working on micrographs {****[tiltedNum]} and {****[untiltedMicNum]}, pair #{***[micKey]} of {***[numPairs]}"

    [micParticleNum] = 0
    
    ; get #untilted particles
    UD N [numUntiltedParts]
    [untilted_coords_doc][untiltedMicNum]

    ; get #tilted particles
    UD N [numTiltedParts]
    [tilted_coords_doc][untiltedMicNum]
    ; NOTE: filenumber for the UNtilted micrograph used for both doc files

    ; if unequal, print warning and exit
    IF ( [numUntiltedParts] .NE. [numTiltedParts] ) THEN
        SYS M
        echo "Micrograph-pair: {****[untiltedMicNum]}"; 
        echo "Particle numbers in tilted and untilted are unequal" ; 
        echo "Fix and re-start"
.
        EN
    ENDIF
    
    ; if empty, then skip
    IF ( [numUntiltedParts] .EQ. 0 ) THEN
        sys
        echo "No particles found for pair {****[untiltedMicNum]}. Skipping..."

        GOTO LB1
    ENDIF

    ; read new micrograph tilt parameters
    UD [tiltKey], [tiltMagnitude],[tiltUntilted],[tiltTilted]
    [tilt_params_doc][untiltedMicNum]
    ; (The direction of the tilt axis isn't necessary the same in both micrographs.)

    UD E  ; close doc

    ; invert contrast, if necessary
    IF ( [revContrastYN] .GT. 0.5 ) THEN
        NEG
        [input_micros][untiltedMicNum]
        [temp_untilted_mic]
        NEG
        [input_micros][tiltedNum]
        [temp_tilted_mic]
    ELSE
        CP
        [input_micros][untiltedMicNum]
        [temp_untilted_mic]
        CP
        [input_micros][tiltedNum]
        [temp_tilted_mic]
    ENDIF
    
    ; get micrograph dimensions
    FI H [untiltedXDim],[untiltedYDim]
    [temp_untilted_mic]
    NX, NY
    
    FI H [tiltedXDim],[tiltedYDim]
    [temp_tilted_mic]
    NX, NY

    ; loop through particles
    DO LB2 [micPartKey] = 1,[numTiltedParts]
        ; get untilted particle-coords
        UD IC [micPartKey], x21, [untiltedXCoord],[untiltedYCoord]
        [untilted_coords_doc][untiltedMicNum]

        ; get tilted particle-coords
        UD IC [micPartKey], x31, [tiltedXCoord],[tiltedYCoord]
        [tilted_coords_doc][untiltedMicNum]

        ; multiply by decimation-factor and subtract half-dimension
        [untiltedTopLeftX] = [shrinkFactor]*[untiltedXCoord] - [halfDim]
        [untiltedTopLeftY] = [shrinkFactor]*[untiltedYCoord] - [halfDim]
        [tiltedTopLeftX]   = [shrinkFactor]*[tiltedXCoord]   - [halfDim]
        [tiltedTopLeftY]   = [shrinkFactor]*[tiltedYCoord]   - [halfDim]

        ; calculate bottom-left coordinate
        [untiltedBottomRightX] = [shrinkFactor]*[untiltedXCoord] + [halfDim]
        [untiltedBottomRightY] = [shrinkFactor]*[untiltedYCoord] + [halfDim]
        [tiltedBottomRightX]   = [shrinkFactor]*[tiltedXCoord]   + [halfDim]
        [tiltedBottomRightY]   = [shrinkFactor]*[tiltedYCoord]   + [halfDim]
        
        ; check that coordinates are not off the edge
        [offMicYN] = 0  ; initialize
        IF ( [untiltedTopLeftX] .LT. 1 ) [offMicYN]=1
        IF ( [untiltedTopLeftY] .LT. 1 ) [offMicYN]=1
        IF ( [tiltedTopLeftX]   .LT. 1 ) [offMicYN]=1
        IF ( [tiltedTopLeftY]   .LT. 1 ) [offMicYN]=1
        IF ( [untiltedBottomRightX] .GT. [untiltedXDim] ) [offMicYN]=1
        IF ( [untiltedBottomRightY] .GT. [untiltedYDim] ) [offMicYN]=1
        IF ( [tiltedBottomRightX]   .GT. [tiltedXDim] )   [offMicYN]=1
        IF ( [tiltedBottomRightY]   .GT. [tiltedYDim] )   [offMicYN]=1
        
        IF ( [offMicYN] .EQ. 1 ) THEN
            [offEdgeCounter] = [offEdgeCounter] + 1
            
            x24 = [untiltedTopLeftX]
            x25 = [untiltedTopLeftY]
            x28 = [untiltedBottomRightX]
            x29 = [untiltedBottomRightY]
            x34 = [tiltedTopLeftX]
            x35 = [tiltedTopLeftY]
            x38 = [tiltedBottomRightX]
            x39 = [tiltedBottomRightY]
            ; (The expanded variables exceed SPIDER's column limit.)
            
            SD [offEdgeCounter], [micPartKey],[untiltedMicNum], x24,x25,x28,x29, x34,x35,x38,x39
            [edge_particle_doc]
        ENDIF
        
        [excludeParticleYN] = [excludeEdgesYN]*[offMicYN]
        ; (The only condition where the value is 1 is if [excludeEdgesYN] AND [offMicYN] are 1.)

        IF ( [excludeParticleYN] .EQ. 0 ) THEN
            ; increment particle-counters
            [particleNumber] = [particleNumber] + 1
            [micParticleNum] = [micParticleNum] + 1

            
            ; UNTILTED PARTICLES

            ; window untilted particles
            WI
            [temp_untilted_mic]
            [temp_untilted_windowed]
            [idim],[idim]
            [untiltedTopLeftX],[untiltedTopLeftY]  ; x,y-coords

            ; ramp-correction
            RA
            [temp_untilted_windowed]  ; INPUT
            [temp_untilted_ramped]

            ; normalize
            CE FIT
            [temp_noise_incore]     ; INPUT
            [temp_untilted_ramped]  ; INPUT
            [temp_inverted_mask]    ; INPUT
            [untilted_unrot_stack]@{%I0%[particleNumber]}  ; WAS [untilted_unrot_stacked_images][particleNumber]
            
            ; rotate the tilt axis to vertical
            RT
            [untilted_unrot_stack]@{%I0%[particleNumber]}  ; WAS [untilted_unrot_stacked_images][particleNumber]  ; INPUT
            [untilted_backup]@{%I0%[particleNumber]}  ; WAS [untilted_stacked_images][particleNumber]
            -[tiltUntilted]


            ; TILTED PARTICLES

            ; window tilted particles
            WI
            [temp_tilted_mic]
            [temp_tilted_windowed]
            [idim],[idim]
            [tiltedTopLeftX],[tiltedTopLeftY]  ; x,y-coords

            ; ramp-correction
            RA
            [temp_tilted_windowed]  ; INPUT
            [temp_tilted_ramped]

            ; normalize
            CE FIT
            [temp_noise_incore]   ; INPUT
            [temp_tilted_ramped]  ; INPUT
            [temp_inverted_mask]  ; INPUT
            [tilted_unrot_stack]@{%I0%[particleNumber]}  ; WAS [tilted_unrot_stacked_images][particleNumber]
            
            ; rotate the tilt axis to vertical
            RT
            [tilted_unrot_stack]@{%I0%[particleNumber]}  ; WAS [tilted_unrot_stacked_images][particleNumber]
            [tilted_backup]@{%I0%[particleNumber]}  ; WAS [tilted_stacked_images][particleNumber]
            -[tiltTilted]

            ; save to particle list
            SD [particleNumber],[particleNumber],[untiltedMicNum]
            [particle_list]
        ENDIF
    LB2
    ; end particle-loop

    [firstParticle] = [particleNumber] - [micParticleNum] + 1
    
    ; diagnostics
    [firstParticle]
    [particleNumber]
    [micParticleNum]
    
    [pairCounter] = [pairCounter] + 1

    ; write to MIC2PARTICLE_TABLE
;;;    SD [pairCounter], [untiltedMicNum],[numTiltedParts],[particleNumber],[firstParticle],[particleNumber]
    SD [pairCounter], [untiltedMicNum],[micParticleNum],[particleNumber],[firstParticle],[particleNumber]
    [mic2particle_table]

    ; close docs
    UD ICE
    [untilted_coords_doc][untiltedMicNum]
    UD ICE
    [tilted_coords_doc][untiltedMicNum]
LB1
; end pair-loop

; clean up
UD ICE
[mic_pair_doc]_renum
DE
[mic_pair_doc]_renum
SD E
[mic2particle_table]
SD /    PARTICLE_NUM  MICROGRAPH
[particle_list]
SD E
[particle_list]

; if any particles were off the edge...
IF ([offEdgeCounter] .GT. 0) THEN
    IF ([excludeEdgesYN] .GE. 1) THEN
        SYS
        echo ; echo "Found {%I0%[offEdgeCounter]} particles off the edge of the micrograph and were not windowed" ; echo
    ELSE
        SYS
        echo ; echo "Found {%I0%[offEdgeCounter]} particles off the edge of the micrograph and were windowed anyway" ; echo
    ENDIF

    SD /               MICPART       MIC_NUM      XI_UNTILT     YI_UNTILT     XF_UNTILT     YF_UNTILT      XI_TILT       YI_TILT       XF_TILT       YF_TILT
    [edge_particle_doc]
    SD E
    [edge_particle_doc]
ENDIF

; make second copy (in case of high-pass filtering), which will be used downstream
CP
[untilted_backup]@
[untilted_stack]@
CP
[tilted_backup]@
[tilted_stack]@

SYS
echo "Done -- Windowed {%i0%[particleNumber]}" particles; date

EN D

; Modified 2018-02-12
;    2018-02-07 (trs & ks) -- added option to invert contrast
;    2015-08-25 (trs) -- ORDER_PICKED included edge-excluded particles
;    2014-07-29 (trs) -- can choose another of the noise references from makesomenoise.rct  
;    2014-11-06 (trs & ms) -- added option to exclude particles on edge of micrograph
;    2014-03-12 (trs) -- will skip pairs with no particles picked
;    2014-03-05 (trs) -- makes backup copy of particle stacks
;    2014-03-05 (trs) -- writing particles in stacks
